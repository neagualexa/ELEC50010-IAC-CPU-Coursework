$date
	Thu Nov 25 00:40:57 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module CPU_testbench $end
$var wire 32 ! writedata [31:0] $end
$var wire 1 " write $end
$var wire 3 # state [2:0] $end
$var wire 32 $ register_v0 [31:0] $end
$var wire 32 % readdata [31:0] $end
$var wire 1 & read $end
$var wire 4 ' byteenable [3:0] $end
$var wire 32 ( address [31:0] $end
$var wire 1 ) active $end
$var reg 1 * clk $end
$var reg 1 + reset $end
$var reg 1 , waitrequest $end
$scope module datapath $end
$var wire 32 - address [31:0] $end
$var wire 1 * clk $end
$var wire 1 . pc_ctl $end
$var wire 32 / register_v0 [31:0] $end
$var wire 1 + reset $end
$var wire 1 , waitrequest $end
$var wire 32 0 writedata [31:0] $end
$var wire 1 1 zero $end
$var wire 1 " write $end
$var wire 3 2 state [2:0] $end
$var wire 32 3 readdata2 [31:0] $end
$var wire 32 4 readdata1 [31:0] $end
$var wire 32 5 readdata [31:0] $end
$var wire 5 6 readR2 [4:0] $end
$var wire 5 7 readR1 [4:0] $end
$var wire 1 & read $end
$var wire 32 8 pc_in [31:0] $end
$var wire 6 9 instr31_26 [5:0] $end
$var wire 5 : instr25_21 [4:0] $end
$var wire 5 ; instr20_16 [4:0] $end
$var wire 5 < instr15_11 [4:0] $end
$var wire 16 = instr15_0 [15:0] $end
$var wire 32 > full_instr [31:0] $end
$var wire 5 ? Regmux2to1 [4:0] $end
$var wire 32 @ RegWritemux2to1 [31:0] $end
$var wire 1 A RegWrite $end
$var wire 1 B RegDst $end
$var wire 1 C PCWriteCond $end
$var wire 1 D PCWrite $end
$var wire 2 E PCSource [1:0] $end
$var wire 32 F PC [31:0] $end
$var wire 1 G MemtoReg $end
$var wire 32 H MEMmux2to1 [31:0] $end
$var wire 1 I IorD $end
$var wire 1 J IRWrite $end
$var wire 32 K Decodemux2to1 [31:0] $end
$var wire 4 L ALUctl [3:0] $end
$var wire 32 M ALU_result [31:0] $end
$var wire 2 N ALUSrcB [1:0] $end
$var wire 1 O ALUSrcA $end
$var wire 32 P ALUB [31:0] $end
$var wire 32 Q ALUAmux2to1 [31:0] $end
$var reg 32 R ALUOut [31:0] $end
$var reg 1 ) active $end
$var reg 4 S byteenable [3:0] $end
$var reg 32 T regA [31:0] $end
$var reg 32 U regB [31:0] $end
$var reg 1 V stall $end
$scope module ALU $end
$var wire 32 W a [31:0] $end
$var wire 1 1 zero $end
$var wire 32 X b [31:0] $end
$var wire 4 Y ALUOperation [3:0] $end
$var reg 32 Z ALU_result [31:0] $end
$upscope $end
$scope module ALUmux4to1 $end
$var wire 32 [ register_b [31:0] $end
$var wire 16 \ immediate [15:0] $end
$var wire 2 ] ALUSrcB [1:0] $end
$var reg 32 ^ ALUB [31:0] $end
$var reg 32 _ shift_2 [31:0] $end
$var reg 32 ` sign_extended [31:0] $end
$upscope $end
$scope module IR $end
$var wire 1 * clk $end
$var wire 1 + reset $end
$var wire 32 a memdata [31:0] $end
$var wire 1 J IRWrite $end
$var reg 16 b instr15_0 [15:0] $end
$var reg 5 c instr20_16 [4:0] $end
$var reg 5 d instr25_21 [4:0] $end
$var reg 6 e instr31_26 [5:0] $end
$upscope $end
$scope module control $end
$var wire 6 f func_code [5:0] $end
$var wire 6 g opcode [5:0] $end
$var wire 3 h state [2:0] $end
$var wire 6 i final_code [5:0] $end
$var reg 1 O ALUSrcA $end
$var reg 2 j ALUSrcB [1:0] $end
$var reg 4 k ALUctl [3:0] $end
$var reg 1 J IRWrite $end
$var reg 1 I IorD $end
$var reg 1 & MemRead $end
$var reg 1 " MemWrite $end
$var reg 1 G MemtoReg $end
$var reg 2 l PCSource [1:0] $end
$var reg 1 D PCWrite $end
$var reg 1 C PCWriteCond $end
$var reg 1 B RegDst $end
$var reg 1 A RegWrite $end
$upscope $end
$scope module pc1 $end
$var wire 1 * clk $end
$var wire 1 . pcctl $end
$var wire 1 + reset $end
$var wire 32 m pc_prev [31:0] $end
$var reg 32 n pc_new [31:0] $end
$upscope $end
$scope module pcmux $end
$var wire 32 o ALUOut [31:0] $end
$var wire 32 p ALU_result [31:0] $end
$var wire 2 q PCSource [1:0] $end
$var wire 32 r PC_in [31:0] $end
$var wire 16 s instr15_0 [15:0] $end
$var wire 5 t instr20_16 [4:0] $end
$var wire 5 u instr25_21 [4:0] $end
$var reg 32 v Jump_address [31:0] $end
$var reg 32 w PC_out [31:0] $end
$upscope $end
$scope module regfile $end
$var wire 1 A RegWrite $end
$var wire 1 * clk $end
$var wire 5 x readR1 [4:0] $end
$var wire 5 y readR2 [4:0] $end
$var wire 32 z readdata1 [31:0] $end
$var wire 32 { readdata2 [31:0] $end
$var wire 1 + reset $end
$var wire 5 | writeR [4:0] $end
$var wire 32 } writedata [31:0] $end
$scope begin $unm_blk_40 $end
$var integer 32 ~ i [31:0] $end
$upscope $end
$upscope $end
$scope module stm $end
$var wire 1 * clk $end
$var wire 1 + reset $end
$var wire 1 V stall $end
$var reg 3 !" state [2:0] $end
$upscope $end
$upscope $end
$scope module ram $end
$var wire 32 "" address [31:0] $end
$var wire 4 #" byteenable [3:0] $end
$var wire 1 * clk $end
$var wire 1 & read $end
$var wire 1 " write $end
$var wire 32 $" writedata [31:0] $end
$var reg 32 %" readdata [31:0] $end
$scope begin $unm_blk_44 $end
$var integer 32 &" i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1000000000000 &"
bx %"
bx $"
bx #"
bx ""
bx !"
bx ~
bx }
bx |
bx {
bx z
bx y
bx x
bx w
bx00 v
bx u
bx t
bx s
bx r
bx q
b0 p
bx o
bx n
bx m
bx l
bx k
bx j
bx i
bx h
bx g
bx f
bx e
bx d
bx c
bx b
bx a
bx `
bx _
bx ^
bx ]
bx \
bx [
b0 Z
bx Y
bx X
bx W
xV
bx U
bx T
bx S
bx R
bx Q
bx P
xO
bx N
b0 M
bx L
bx K
0J
xI
bx H
xG
bx F
bx E
xD
xC
xB
0A
bx @
bx ?
bx >
bx =
bx <
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
11
bx 0
bx /
x.
bx -
x,
0+
0*
x)
bx (
bx '
0&
bx %
bx $
bx #
0"
bx !
$end
#10
b0 $
b0 /
b0 R
b0 o
1*
#20
1+
0*
#30
01
b0 i
b0 ?
b0 |
b0 g
b0 f
b0 4
b0 z
b0 7
b0 x
b0 3
b0 [
b0 {
b0 6
b0 y
b0 u
b0 t
b0 s
b0 @
b0 }
1.
b100 M
b100 Z
b100 p
b100 P
b100 X
b100 ^
b0 _
b0 `
b100 8
b100 m
b100 w
b0 v
b0 Q
b0 W
b0 (
b0 -
b0 ""
b0 H
b0 K
1&
0G
0I
0C
1D
b0 E
b0 l
b0 q
b10 L
b10 Y
b10 k
b1 N
b1 ]
b1 j
0O
0B
b0 !
b0 0
b0 $"
b0 U
b0 T
b0 =
b0 \
b0 b
b0 ;
b0 c
b0 :
b0 d
b0 >
b0 9
b0 e
b0 F
b0 n
b0 r
b0 #
b0 2
b0 h
b0 !"
b100000 ~
1*
#40
0+
0*
#50
b100011 i
b1 ?
b1 |
b100 8
b100 m
b100 w
b1000000000000010100 v
b100011 g
b101 f
b1 6
b1 y
b1 t
b101 s
0.
b0 P
b0 X
b0 ^
b100 M
b100 Z
b100 p
b10001100000000010000000000000101 K
1J
0&
0D
b10 L
b10 Y
b10 k
b10 N
b10 ]
b10 j
0O
b100 Q
b100 W
b100 (
b100 -
b100 ""
b100 H
b100 @
b100 }
b0 <
b1 #
b1 2
b1 h
b1 !"
b100 F
b100 n
b100 r
b100 $
b100 /
b100 R
b100 o
b10001100000000010000000000000101 %
b10001100000000010000000000000101 5
b10001100000000010000000000000101 a
b10001100000000010000000000000101 %"
1*
#60
0*
#70
b10100 8
b10100 m
b10100 w
b10100 M
b10100 Z
b10100 p
b0 Q
b0 W
b10100 P
b10100 X
b10100 ^
b10100 _
b101 `
0J
b10 L
b10 Y
b10 k
b11 N
b11 ]
b11 j
1O
b101 =
b101 \
b101 b
b1 ;
b1 c
b10001100000000010000000000000101 >
b100011 9
b100011 e
b10 #
b10 2
b10 h
b10 !"
1*
#80
0*
#90
11
b0 8
b0 m
b0 w
b10100 (
b10100 -
b10100 ""
b10100 H
b0 M
b0 Z
b0 p
b0 P
b0 X
b0 ^
1&
1I
b0 L
b0 Y
b0 k
b0 N
b0 ]
b0 j
b10100 @
b10100 }
b11 #
b11 2
b11 h
b11 !"
b10100 $
b10100 /
b10100 R
b10100 o
1*
#100
0*
#110
b100 (
b100 -
b100 ""
b100 H
b10000000000000001 @
b10000000000000001 }
1G
1A
0&
0I
b10000000000000001 %
b10000000000000001 5
b10000000000000001 a
b10000000000000001 %"
b0 $
b0 /
b0 R
b0 o
b100 #
b100 2
b100 h
b100 !"
1*
#120
0*
#130
01
b1000 8
b1000 m
b1000 w
1.
b1000 M
b1000 Z
b1000 p
b100 Q
b100 W
b0 @
b0 }
b100 P
b100 X
b100 ^
1&
1D
b10 L
b10 Y
b10 k
b1 N
b1 ]
b1 j
0O
0G
0A
b10000000000000001 3
b10000000000000001 [
b10000000000000001 {
b0 #
b0 2
b0 h
b0 !"
1*
#140
0*
#150
b10 ?
b10 |
b1101 8
b1101 m
b1101 w
b10000000000000010100 v
b0 3
b0 [
b0 {
b10 6
b10 y
b10 t
0.
b1101 M
b1101 Z
b1101 p
b101 P
b101 X
b101 ^
b1000 @
b1000 }
b1000 Q
b1000 W
b1000 (
b1000 -
b1000 ""
b1000 H
b10001100000000100000000000000101 K
1J
0&
0D
b10 L
b10 Y
b10 k
b10 N
b10 ]
b10 j
0O
b10001100000000100000000000000101 %
b10001100000000100000000000000101 5
b10001100000000100000000000000101 a
b10001100000000100000000000000101 %"
b1000 $
b1000 /
b1000 R
b1000 o
b10000000000000001 !
b10000000000000001 0
b10000000000000001 $"
b10000000000000001 U
b1000 F
b1000 n
b1000 r
b1 #
b1 2
b1 h
b1 !"
1*
#160
0*
#170
b10100 8
b10100 m
b10100 w
b10100 M
b10100 Z
b10100 p
b10100 P
b10100 X
b10100 ^
b0 Q
b0 W
0J
b10 L
b10 Y
b10 k
b11 N
b11 ]
b11 j
1O
b1101 @
b1101 }
b10 #
b10 2
b10 h
b10 !"
b10001100000000100000000000000101 >
b10 ;
b10 c
b1101 $
b1101 /
b1101 R
b1101 o
b0 !
b0 0
b0 $"
b0 U
1*
#180
0*
#190
11
b0 8
b0 m
b0 w
b10100 (
b10100 -
b10100 ""
b10100 H
b0 M
b0 Z
b0 p
b0 P
b0 X
b0 ^
b10100 @
b10100 }
1&
1I
b0 L
b0 Y
b0 k
b0 N
b0 ]
b0 j
b10100 $
b10100 /
b10100 R
b10100 o
b11 #
b11 2
b11 h
b11 !"
1*
#200
0*
#210
1G
1A
0&
0I
b1000 (
b1000 -
b1000 ""
b1000 H
b10000000000000001 @
b10000000000000001 }
b100 #
b100 2
b100 h
b100 !"
b0 $
b0 /
b0 R
b0 o
b10000000000000001 %
b10000000000000001 5
b10000000000000001 a
b10000000000000001 %"
1*
#220
0*
#230
01
b1100 8
b1100 m
b1100 w
1.
b1100 M
b1100 Z
b1100 p
b1000 Q
b1000 W
b0 @
b0 }
b100 P
b100 X
b100 ^
1&
1D
b10 L
b10 Y
b10 k
b1 N
b1 ]
b1 j
0O
0G
0A
b10000000000000001 3
b10000000000000001 [
b10000000000000001 {
b0 #
b0 2
b0 h
b0 !"
1*
#240
0*
#250
b100001 i
b10001 8
b10001 m
b10001 w
b100010000110000010000100 v
b0 g
b100001 f
b10000000000000001 4
b10000000000000001 z
b1 7
b1 x
b1 u
b1100000100001 s
0.
b101 P
b101 X
b101 ^
b10001 M
b10001 Z
b10001 p
b1000100001100000100001 K
1J
0&
0D
b10 L
b10 Y
b10 k
b10 N
b10 ]
b10 j
0O
b1100 Q
b1100 W
b1100 (
b1100 -
b1100 ""
b1100 H
b1100 @
b1100 }
b11 <
b1 #
b1 2
b1 h
b1 !"
b1100 F
b1100 n
b1100 r
b1100 $
b1100 /
b1100 R
b1100 o
b10000000000000001 !
b10000000000000001 0
b10000000000000001 $"
b10000000000000001 U
b1000100001100000100001 %
b1000100001100000100001 5
b1000100001100000100001 a
b1000100001100000100001 %"
1*
#260
0*
#270
b100000000000000010 8
b100000000000000010 m
b100000000000000010 w
b100000000000000010 M
b100000000000000010 Z
b100000000000000010 p
b10000000000000001 Q
b10000000000000001 W
b10001 @
b10001 }
b10000000000000001 P
b10000000000000001 X
b10000000000000001 ^
b110000010000100 _
b1100000100001 `
0J
b10 L
b10 Y
b10 k
b0 N
b0 ]
b0 j
1O
b10001 $
b10001 /
b10001 R
b10001 o
b10000000000000001 T
b1100000100001 =
b1100000100001 \
b1100000100001 b
b1 :
b1 d
b1000100001100000100001 >
b0 9
b0 e
b10 #
b10 2
b10 h
b10 !"
1*
#280
0*
#290
b10000000000000001 8
b10000000000000001 m
b10000000000000001 w
b11 ?
b11 |
b10000000000000001 M
b10000000000000001 Z
b10000000000000001 p
1B
1A
b0 L
b0 Y
b0 k
b100000000000000010 @
b100000000000000010 }
b11 #
b11 2
b11 h
b11 !"
b100000000000000010 $
b100000000000000010 /
b100000000000000010 R
b100000000000000010 o
1*
#300
0*
#310
b10 ?
b10 |
b10000000000000001 @
b10000000000000001 }
1A
0B
b10000000000000001 $
b10000000000000001 /
b10000000000000001 R
b10000000000000001 o
b100 #
b100 2
b100 h
b100 !"
1*
#320
0*
#330
b10000 8
b10000 m
b10000 w
1.
b10000 M
b10000 Z
b10000 p
b100 P
b100 X
b100 ^
b1100 Q
b1100 W
1&
1D
b10 L
b10 Y
b10 k
b1 N
b1 ]
b1 j
0O
0A
b0 #
b0 2
b0 h
b0 !"
1*
#340
0*
#350
b1001 i
b100 ?
b100 |
b1100000110001 8
b1100000110001 m
b1100000110001 w
b1100100000000000000000100 v
b1001 g
b1 f
b100000000000000010 4
b100000000000000010 z
b11 7
b11 x
b0 3
b0 [
b0 {
b100 6
b100 y
b11 u
b100 t
b1 s
0.
b1100000110001 M
b1100000110001 Z
b1100000110001 p
b1100000100001 P
b1100000100001 X
b1100000100001 ^
b0 <
b10000 @
b10000 }
b10000 Q
b10000 W
b10000 (
b10000 -
b10000 ""
b10000 H
b100100011001000000000000000001 K
1J
0&
0D
b10 L
b10 Y
b10 k
b10 N
b10 ]
b10 j
0O
b100100011001000000000000000001 %
b100100011001000000000000000001 5
b100100011001000000000000000001 a
b100100011001000000000000000001 %"
b10000 $
b10000 /
b10000 R
b10000 o
b10000 F
b10000 n
b10000 r
b1 #
b1 2
b1 h
b1 !"
1*
#360
0*
#370
b100000000000000011 8
b100000000000000011 m
b100000000000000011 w
b100000000000000010 Q
b100000000000000010 W
b100000000000000011 M
b100000000000000011 Z
b100000000000000011 p
0J
b10 L
b10 Y
b10 k
b10 N
b10 ]
b10 j
1O
b1 P
b1 X
b1 ^
b100 _
b1 `
b1100000110001 @
b1100000110001 }
b10 #
b10 2
b10 h
b10 !"
b1 =
b1 \
b1 b
b100 ;
b100 c
b11 :
b11 d
b100100011001000000000000000001 >
b1001 9
b1001 e
b1100000110001 $
b1100000110001 /
b1100000110001 R
b1100000110001 o
b0 !
b0 0
b0 $"
b0 U
b100000000000000010 T
1*
#380
0*
#390
11
b0 8
b0 m
b0 w
b0 M
b0 Z
b0 p
b0 P
b0 X
b0 ^
b100000000000000011 @
b100000000000000011 }
1A
b0 L
b0 Y
b0 k
b0 N
b0 ]
b0 j
b100000000000000011 $
b100000000000000011 /
b100000000000000011 R
b100000000000000011 o
b11 #
b11 2
b11 h
b11 !"
1*
#400
0*
#410
01
b100000000000000010 8
b100000000000000010 m
b100000000000000010 w
b100000000000000010 M
b100000000000000010 Z
b100000000000000010 p
b100000000000000011 P
b100000000000000011 X
b100000000000000011 ^
1A
b0 @
b0 }
b100000000000000011 3
b100000000000000011 [
b100000000000000011 {
b100 #
b100 2
b100 h
b100 !"
b0 $
b0 /
b0 R
b0 o
1*
#420
0*
#430
b10100 8
b10100 m
b10100 w
1.
b10100 M
b10100 Z
b10100 p
b10000 Q
b10000 W
b100 P
b100 X
b100 ^
b100000000000000010 @
b100000000000000010 }
1&
1D
b10 L
b10 Y
b10 k
b1 N
b1 ]
b1 j
0O
0A
b0 3
b0 [
b0 {
b100000000000000010 $
b100000000000000010 /
b100000000000000010 R
b100000000000000010 o
b100000000000000011 !
b100000000000000011 0
b100000000000000011 $"
b100000000000000011 U
b0 #
b0 2
b0 h
b0 !"
1*
#440
0*
#450
b101011 i
b10101 8
b10101 m
b10101 w
b100000000000000010000 v
b101011 g
b100 f
b0 4
b0 z
b0 7
b0 x
b0 u
b100 s
0.
b1 P
b1 X
b1 ^
b10101 M
b10101 Z
b10101 p
b10101100000001000000000000000100 K
1J
0&
0D
b10 L
b10 Y
b10 k
b10 N
b10 ]
b10 j
0O
b10100 Q
b10100 W
b10100 (
b10100 -
b10100 ""
b10100 H
b10100 @
b10100 }
b1 #
b1 2
b1 h
b1 !"
b10100 F
b10100 n
b10100 r
b10100 $
b10100 /
b10100 R
b10100 o
b0 !
b0 0
b0 $"
b0 U
b10101100000001000000000000000100 %
b10101100000001000000000000000100 5
b10101100000001000000000000000100 a
b10101100000001000000000000000100 %"
1*
#460
0*
#470
b10000 8
b10000 m
b10000 w
b10000 M
b10000 Z
b10000 p
b0 Q
b0 W
b10101 @
b10101 }
b10000 P
b10000 X
b10000 ^
b10000 _
b100 `
0J
b10 L
b10 Y
b10 k
b11 N
b11 ]
b11 j
1O
b10101 $
b10101 /
b10101 R
b10101 o
b0 T
b100 =
b100 \
b100 b
b0 :
b0 d
b10101100000001000000000000000100 >
b101011 9
b101011 e
b10 #
b10 2
b10 h
b10 !"
1*
#480
0*
#490
11
b0 8
b0 m
b0 w
b10000 (
b10000 -
b10000 ""
b10000 H
b0 M
b0 Z
b0 p
b0 P
b0 X
b0 ^
1"
1I
b0 L
b0 Y
b0 k
b0 N
b0 ]
b0 j
b10000 @
b10000 }
b11 #
b11 2
b11 h
b11 !"
b10000 $
b10000 /
b10000 R
b10000 o
1*
#500
0*
#510
b10100 (
b10100 -
b10100 ""
b10100 H
b0 @
b0 }
1A
0"
0I
b0 $
b0 /
b0 R
b0 o
b100 #
b100 2
b100 h
b100 !"
1*
#520
0*
