$date
	Mon Nov 29 13:08:19 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module CPU_testbench $end
$var wire 32 ! writedata [31:0] $end
$var wire 1 " write $end
$var wire 3 # state [2:0] $end
$var wire 32 $ register_v0 [31:0] $end
$var wire 32 % readdata [31:0] $end
$var wire 1 & read $end
$var wire 4 ' byteenable [3:0] $end
$var wire 32 ( address [31:0] $end
$var wire 1 ) active $end
$var reg 1 * clk $end
$var reg 1 + reset $end
$var reg 1 , waitrequest $end
$scope module datapath $end
$var wire 32 - address [31:0] $end
$var wire 1 * clk $end
$var wire 1 . pc_ctl $end
$var wire 32 / register_v0 [31:0] $end
$var wire 1 + reset $end
$var wire 1 , waitrequest $end
$var wire 32 0 writedata [31:0] $end
$var wire 1 1 zero $end
$var wire 1 " write $end
$var wire 1 2 unsign $end
$var wire 3 3 state [2:0] $end
$var wire 32 4 readdata2 [31:0] $end
$var wire 32 5 readdata1 [31:0] $end
$var wire 32 6 readdata [31:0] $end
$var wire 5 7 readR2 [4:0] $end
$var wire 5 8 readR1 [4:0] $end
$var wire 1 & read $end
$var wire 32 9 pc_in [31:0] $end
$var wire 6 : instr31_26 [5:0] $end
$var wire 5 ; instr25_21 [4:0] $end
$var wire 5 < instr20_16 [4:0] $end
$var wire 5 = instr15_11 [4:0] $end
$var wire 16 > instr15_0 [15:0] $end
$var wire 32 ? full_instr [31:0] $end
$var wire 5 @ Regmux2to1 [4:0] $end
$var wire 32 A RegWritemux2to1 [31:0] $end
$var wire 1 B RegWrite $end
$var wire 1 C RegDst $end
$var wire 1 D PCWriteCond $end
$var wire 1 E PCWrite $end
$var wire 2 F PCSource [1:0] $end
$var wire 32 G PC [31:0] $end
$var wire 1 H MemtoReg $end
$var wire 32 I MEMmux2to1 [31:0] $end
$var wire 32 J LO [31:0] $end
$var wire 1 K IorD $end
$var wire 1 L IRWrite $end
$var wire 32 M HI [31:0] $end
$var wire 32 N Decodemux2to1 [31:0] $end
$var wire 4 O ALUctl [3:0] $end
$var wire 32 P ALU_result [31:0] $end
$var wire 64 Q ALU_MULTorDIV_result [63:0] $end
$var wire 2 R ALUSrcB [1:0] $end
$var wire 1 S ALUSrcA $end
$var wire 32 T ALUB [31:0] $end
$var wire 32 U ALUAmux2to1 [31:0] $end
$var reg 32 V ALUOut [31:0] $end
$var reg 1 ) active $end
$var reg 4 W byteenable [3:0] $end
$var reg 32 X regA [31:0] $end
$var reg 32 Y regB [31:0] $end
$var reg 1 Z stall $end
$scope module ALU $end
$var wire 32 [ a [31:0] $end
$var wire 1 1 zero $end
$var wire 1 2 unsign $end
$var wire 32 \ b [31:0] $end
$var wire 33 ] B_unsign [32:0] $end
$var wire 33 ^ A_unsign [32:0] $end
$var wire 4 _ ALUOperation [3:0] $end
$var reg 64 ` ALU_MULTorDIV_result [63:0] $end
$var reg 32 a ALU_result [31:0] $end
$var reg 66 b ALU_temp_MULTorDIV_result [65:0] $end
$var reg 33 c ALU_temp_result [32:0] $end
$var reg 32 d quotient [31:0] $end
$var reg 33 e quotient_unsign [32:0] $end
$var reg 32 f remainder [31:0] $end
$var reg 33 g remainder_unsign [32:0] $end
$upscope $end
$scope module ALUmux4to1 $end
$var wire 6 h opcode [5:0] $end
$var wire 32 i register_b [31:0] $end
$var wire 16 j immediate [15:0] $end
$var wire 2 k ALUSrcB [1:0] $end
$var reg 32 l ALUB [31:0] $end
$var reg 32 m shift_2 [31:0] $end
$var reg 32 n sign_extended [31:0] $end
$upscope $end
$scope module HI_LO_Control $end
$var wire 64 o ALU_MULTorDIV_result [63:0] $end
$var wire 1 * clk $end
$var wire 6 p func_code [5:0] $end
$var wire 6 q opcode [5:0] $end
$var wire 32 r regA [31:0] $end
$var wire 1 + reset $end
$var wire 3 s state [2:0] $end
$var wire 6 t final_code [5:0] $end
$var reg 32 u HI [31:0] $end
$var reg 32 v LO [31:0] $end
$upscope $end
$scope module IR $end
$var wire 1 * clk $end
$var wire 1 + reset $end
$var wire 32 w memdata [31:0] $end
$var wire 1 L IRWrite $end
$var reg 16 x instr15_0 [15:0] $end
$var reg 5 y instr20_16 [4:0] $end
$var reg 5 z instr25_21 [4:0] $end
$var reg 6 { instr31_26 [5:0] $end
$upscope $end
$scope module control $end
$var wire 6 | func_code [5:0] $end
$var wire 6 } opcode [5:0] $end
$var wire 3 ~ state [2:0] $end
$var reg 1 S ALUSrcA $end
$var reg 2 !" ALUSrcB [1:0] $end
$var reg 4 "" ALUctl [3:0] $end
$var reg 1 L IRWrite $end
$var reg 1 K IorD $end
$var reg 1 & MemRead $end
$var reg 1 " MemWrite $end
$var reg 1 H MemtoReg $end
$var reg 2 #" PCSource [1:0] $end
$var reg 1 E PCWrite $end
$var reg 1 D PCWriteCond $end
$var reg 1 C RegDst $end
$var reg 1 B RegWrite $end
$var reg 4 $" byteenable [3:0] $end
$var reg 1 2 unsign $end
$upscope $end
$scope module pc1 $end
$var wire 1 * clk $end
$var wire 1 . pcctl $end
$var wire 1 + reset $end
$var wire 32 %" pc_prev [31:0] $end
$var reg 32 &" pc_new [31:0] $end
$upscope $end
$scope module pcmux $end
$var wire 32 '" ALUOut [31:0] $end
$var wire 32 (" ALU_result [31:0] $end
$var wire 2 )" PCSource [1:0] $end
$var wire 32 *" PC_in [31:0] $end
$var wire 16 +" instr15_0 [15:0] $end
$var wire 5 ," instr20_16 [4:0] $end
$var wire 5 -" instr25_21 [4:0] $end
$var reg 32 ." Jump_address [31:0] $end
$var reg 32 /" PC_out [31:0] $end
$upscope $end
$scope module regfile $end
$var wire 1 B RegWrite $end
$var wire 1 * clk $end
$var wire 5 0" readR1 [4:0] $end
$var wire 5 1" readR2 [4:0] $end
$var wire 32 2" readdata1 [31:0] $end
$var wire 32 3" readdata2 [31:0] $end
$var wire 1 + reset $end
$var wire 5 4" writeR [4:0] $end
$var wire 32 5" writedata [31:0] $end
$scope begin $unm_blk_75 $end
$var integer 32 6" i [31:0] $end
$upscope $end
$upscope $end
$scope module stm $end
$var wire 1 * clk $end
$var wire 1 + reset $end
$var wire 1 Z stall $end
$var reg 3 7" state [2:0] $end
$upscope $end
$upscope $end
$scope module ram $end
$var wire 32 8" address [31:0] $end
$var wire 4 9" byteenable [3:0] $end
$var wire 1 * clk $end
$var wire 1 & read $end
$var wire 1 " write $end
$var wire 32 :" writedata [31:0] $end
$var reg 32 ;" readdata [31:0] $end
$scope begin $unm_blk_79 $end
$var integer 32 <" i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1000000000000 <"
bx ;"
bx :"
bx 9"
bx 8"
bx 7"
bx 6"
bx 5"
bx 4"
bx 3"
bx 2"
bx 1"
bx 0"
bx /"
bx00 ."
bx -"
bx ,"
bx +"
bx *"
b0 )"
bx ("
bx '"
bx &"
bx %"
bx $"
b0 #"
b0 ""
b0 !"
bx ~
bx }
bx |
bx {
bx z
bx y
bx x
bx w
bx v
bx u
bx t
bx s
bx r
bx q
bx p
bx o
bx n
bx00 m
bx l
b0 k
bx j
bx i
bx h
bx g
bx f
bx e
bx d
b0 c
bx b
bx a
bx `
b0 _
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx ^
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx ]
bx \
bx [
xZ
bx Y
bx X
bx W
bx V
bx U
bx T
1S
b0 R
bx Q
bx P
b0 O
bx N
bx M
0L
0K
bx J
bx I
0H
bx G
b0 F
0E
0D
0C
0B
bx A
bx @
bx ?
bx >
bx =
bx <
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
02
11
bx 0
bx /
0.
bx -
x,
0+
0*
x)
bx (
bx '
0&
bx %
bx $
bx #
0"
bx !
$end
#10
1*
#20
1+
0*
#30
b0 @
b0 4"
b0 t
b100 9
b100 %"
b100 /"
b100 P
b100 a
b100 ("
b0 }
b0 |
b0 h
b0 5
b0 2"
b0 8
b0 0"
b0 4
b0 i
b0 3"
b0 7
b0 1"
b0 q
b0 p
b0 -"
b0 ,"
b0 +"
1.
b0 A
b0 5"
b0 ^
b0 U
b0 [
b100 ]
b100 T
b100 \
b100 l
b0 m
b0 n
b0 ."
b0 (
b0 -
b0 8"
b0 I
b0 N
1&
1E
b1 R
b1 k
b1 !"
0S
b0 $
b0 /
b0 V
b0 '"
b0 !
b0 0
b0 :"
b0 Y
b0 X
b0 r
b0 M
b0 u
b0 J
b0 v
b0 >
b0 j
b0 x
b0 <
b0 y
b0 ;
b0 z
b0 ?
b0 :
b0 {
b0 G
b0 &"
b0 *"
b0 #
b0 3
b0 s
b0 ~
b0 7"
b100000 6"
1*
#40
0+
0*
#50
b1 @
b1 4"
b100011 t
b100 9
b100 %"
b100 /"
b1000000000000010100 ."
b100011 }
b101 |
b100011 h
b1 7
b1 1"
b100011 q
b101 p
b1 ,"
b101 +"
0.
b0 ]
b0 T
b0 \
b0 l
b100 P
b100 a
b100 ("
b10001100000000010000000000000101 N
1L
0&
0E
b10 R
b10 k
b10 !"
0S
b100 ^
b100 U
b100 [
b100 (
b100 -
b100 8"
b100 I
b100 A
b100 5"
b0 =
b1 #
b1 3
b1 s
b1 ~
b1 7"
b100 G
b100 &"
b100 *"
b100 $
b100 /
b100 V
b100 '"
b10001100000000010000000000000101 %
b10001100000000010000000000000101 6
b10001100000000010000000000000101 w
b10001100000000010000000000000101 ;"
1*
#60
0*
#70
b10100 9
b10100 %"
b10100 /"
b10100 P
b10100 a
b10100 ("
b0 ^
b0 U
b0 [
b10100 ]
b10100 T
b10100 \
b10100 l
b10100 m
b101 n
0L
b11 R
b11 k
b11 !"
1S
b101 >
b101 j
b101 x
b1 <
b1 y
b10001100000000010000000000000101 ?
b100011 :
b100011 {
b10 #
b10 3
b10 s
b10 ~
b10 7"
1*
#80
0*
#90
b0 9
b0 %"
b0 /"
b0 P
b0 a
b0 ("
b10100 (
b10100 -
b10100 8"
b10100 I
b0 ]
b0 T
b0 \
b0 l
1H
1K
b0 R
b0 k
b0 !"
b10001100000000010000000000000101 A
b10001100000000010000000000000101 5"
b11 #
b11 3
b11 s
b11 ~
b11 7"
b10100 $
b10100 /
b10100 V
b10100 '"
1*
#100
0*
#110
b100 (
b100 -
b100 8"
b100 I
1B
1H
0K
b0 $
b0 /
b0 V
b0 '"
b100 #
b100 3
b100 s
b100 ~
b100 7"
1*
#120
0*
#130
b1000 9
b1000 %"
b1000 /"
b1000 P
b1000 a
b1000 ("
1.
b100 ^
b100 U
b100 [
b0 A
b0 5"
b100 ]
b100 T
b100 \
b100 l
1&
1E
b1 R
b1 k
b1 !"
0S
0H
0B
b10001100000000010000000000000101 4
b10001100000000010000000000000101 i
b10001100000000010000000000000101 3"
b0 #
b0 3
b0 s
b0 ~
b0 7"
1*
#140
0*
#150
b10 @
b10 4"
b1101 9
b1101 %"
b1101 /"
b10000000000000010100 ."
b1101 P
b1101 a
b1101 ("
b0 4
b0 i
b0 3"
b10 7
b10 1"
b10 ,"
0.
b101 ]
b101 T
b101 \
b101 l
b1000 A
b1000 5"
b1000 ^
b1000 U
b1000 [
b1000 (
b1000 -
b1000 8"
b1000 I
b10001100000000100000000000000101 N
1L
0&
0E
b10 R
b10 k
b10 !"
0S
b10001100000000100000000000000101 %
b10001100000000100000000000000101 6
b10001100000000100000000000000101 w
b10001100000000100000000000000101 ;"
b1000 $
b1000 /
b1000 V
b1000 '"
b10001100000000010000000000000101 !
b10001100000000010000000000000101 0
b10001100000000010000000000000101 :"
b10001100000000010000000000000101 Y
b1000 G
b1000 &"
b1000 *"
b1 #
b1 3
b1 s
b1 ~
b1 7"
1*
#160
0*
#170
b10100 9
b10100 %"
b10100 /"
b10100 P
b10100 a
b10100 ("
b10100 ]
b10100 T
b10100 \
b10100 l
b0 ^
b0 U
b0 [
0L
b11 R
b11 k
b11 !"
1S
b1101 A
b1101 5"
b10 #
b10 3
b10 s
b10 ~
b10 7"
b10001100000000100000000000000101 ?
b10 <
b10 y
b1101 $
b1101 /
b1101 V
b1101 '"
b0 !
b0 0
b0 :"
b0 Y
1*
#180
0*
#190
b0 9
b0 %"
b0 /"
b0 P
b0 a
b0 ("
b10100 (
b10100 -
b10100 8"
b10100 I
b0 ]
b0 T
b0 \
b0 l
b10001100000000100000000000000101 A
b10001100000000100000000000000101 5"
1H
1K
b0 R
b0 k
b0 !"
b10100 $
b10100 /
b10100 V
b10100 '"
b11 #
b11 3
b11 s
b11 ~
b11 7"
1*
#200
0*
#210
1B
1H
0K
b1000 (
b1000 -
b1000 8"
b1000 I
b100 #
b100 3
b100 s
b100 ~
b100 7"
b0 $
b0 /
b0 V
b0 '"
1*
#220
0*
#230
b1100 9
b1100 %"
b1100 /"
b1100 P
b1100 a
b1100 ("
1.
b1000 ^
b1000 U
b1000 [
b0 A
b0 5"
b100 ]
b100 T
b100 \
b100 l
1&
1E
b1 R
b1 k
b1 !"
0S
0H
0B
b10001100000000100000000000000101 4
b10001100000000100000000000000101 i
b10001100000000100000000000000101 3"
b0 #
b0 3
b0 s
b0 ~
b0 7"
1*
#240
0*
#250
b100001 t
b10001 9
b10001 %"
b10001 /"
b100010000110000010000100 ."
b0 }
b100001 |
b0 h
b10001100000000010000000000000101 5
b10001100000000010000000000000101 2"
b1 8
b1 0"
b0 q
b100001 p
b1 -"
b1100000100001 +"
0.
b101 ]
b101 T
b101 \
b101 l
b10001 P
b10001 a
b10001 ("
b1000100001100000100001 N
1L
0&
0E
b10 R
b10 k
b10 !"
0S
b1100 ^
b1100 U
b1100 [
b1100 (
b1100 -
b1100 8"
b1100 I
b1100 A
b1100 5"
b11 =
b1 #
b1 3
b1 s
b1 ~
b1 7"
b1100 G
b1100 &"
b1100 *"
b1100 $
b1100 /
b1100 V
b1100 '"
b10001100000000100000000000000101 !
b10001100000000100000000000000101 0
b10001100000000100000000000000101 :"
b10001100000000100000000000000101 Y
b1000100001100000100001 %
b1000100001100000100001 6
b1000100001100000100001 w
b1000100001100000100001 ;"
1*
#260
0*
#270
b11000000000110000000000001010 9
b11000000000110000000000001010 %"
b11000000000110000000000001010 /"
b11000000000110000000000001010 P
b11000000000110000000000001010 a
b11000000000110000000000001010 ("
b10001100000000010000000000000101 ^
b10001100000000010000000000000101 U
b10001100000000010000000000000101 [
b10001 A
b10001 5"
b10001100000000100000000000000101 ]
b10001100000000100000000000000101 T
b10001100000000100000000000000101 \
b10001100000000100000000000000101 l
b110000010000100 m
b1100000100001 n
0L
b0 R
b0 k
b0 !"
1S
b10001 $
b10001 /
b10001 V
b10001 '"
b10001100000000010000000000000101 X
b10001100000000010000000000000101 r
b1100000100001 >
b1100000100001 j
b1100000100001 x
b1 ;
b1 z
b1000100001100000100001 ?
b0 :
b0 {
b10 #
b10 3
b10 s
b10 ~
b10 7"
1*
#280
0*
#290
b11 @
b11 4"
1C
1B
b11000000000110000000000001010 A
b11000000000110000000000001010 5"
b11 #
b11 3
b11 s
b11 ~
b11 7"
b11000000000110000000000001010 $
b11000000000110000000000001010 /
b11000000000110000000000001010 V
b11000000000110000000000001010 '"
1*
#300
0*
#310
b10 @
b10 4"
1B
0C
b100 #
b100 3
b100 s
b100 ~
b100 7"
1*
#320
0*
#330
b10000 9
b10000 %"
b10000 /"
b10000 P
b10000 a
b10000 ("
1.
b1100 ^
b1100 U
b1100 [
b100 ]
b100 T
b100 \
b100 l
1&
1E
b1 R
b1 k
b1 !"
0S
0B
b11000000000110000000000001010 4
b11000000000110000000000001010 i
b11000000000110000000000001010 3"
b0 #
b0 3
b0 s
b0 ~
b0 7"
1*
#340
0*
#350
b100 @
b100 4"
b1001 t
b1100000110001 9
b1100000110001 %"
b1100000110001 /"
b1100100000000000000000100 ."
b1100000110001 P
b1100000110001 a
b1100000110001 ("
b1001 }
b1 |
b1001 h
b11000000000110000000000001010 5
b11000000000110000000000001010 2"
b11 8
b11 0"
b0 4
b0 i
b0 3"
b100 7
b100 1"
b1001 q
b1 p
b11 -"
b100 ,"
b1 +"
0.
b1100000100001 ]
b1100000100001 T
b1100000100001 \
b1100000100001 l
b0 =
b10000 A
b10000 5"
b10000 ^
b10000 U
b10000 [
b10000 (
b10000 -
b10000 8"
b10000 I
b100100011001000000000000000001 N
1L
0&
0E
b10 R
b10 k
b10 !"
0S
b100100011001000000000000000001 %
b100100011001000000000000000001 6
b100100011001000000000000000001 w
b100100011001000000000000000001 ;"
b10000 $
b10000 /
b10000 V
b10000 '"
b11000000000110000000000001010 !
b11000000000110000000000001010 0
b11000000000110000000000001010 :"
b11000000000110000000000001010 Y
b10000 G
b10000 &"
b10000 *"
b1 #
b1 3
b1 s
b1 ~
b1 7"
1*
#360
0*
#370
b11000000000110000000000001011 9
b11000000000110000000000001011 %"
b11000000000110000000000001011 /"
b11000000000110000000000001010 ^
b11000000000110000000000001010 U
b11000000000110000000000001010 [
b11000000000110000000000001011 P
b11000000000110000000000001011 a
b11000000000110000000000001011 ("
0L
b10 R
b10 k
b10 !"
1S
b1 ]
b1 T
b1 \
b1 l
b100 m
b1 n
b1100000110001 A
b1100000110001 5"
b10 #
b10 3
b10 s
b10 ~
b10 7"
b1 >
b1 j
b1 x
b100 <
b100 y
b11 ;
b11 z
b100100011001000000000000000001 ?
b1001 :
b1001 {
b1100000110001 $
b1100000110001 /
b1100000110001 V
b1100000110001 '"
b0 !
b0 0
b0 :"
b0 Y
b11000000000110000000000001010 X
b11000000000110000000000001010 r
1*
#380
0*
#390
b11000000000110000000000001010 9
b11000000000110000000000001010 %"
b11000000000110000000000001010 /"
b11000000000110000000000001010 P
b11000000000110000000000001010 a
b11000000000110000000000001010 ("
b0 ]
b0 T
b0 \
b0 l
b11000000000110000000000001011 A
b11000000000110000000000001011 5"
1B
b0 R
b0 k
b0 !"
b11000000000110000000000001011 $
b11000000000110000000000001011 /
b11000000000110000000000001011 V
b11000000000110000000000001011 '"
b11 #
b11 3
b11 s
b11 ~
b11 7"
1*
#400
0*
#410
b110000000001100000000000010101 9
b110000000001100000000000010101 %"
b110000000001100000000000010101 /"
b110000000001100000000000010101 P
b110000000001100000000000010101 a
b110000000001100000000000010101 ("
b11000000000110000000000001011 ]
b11000000000110000000000001011 T
b11000000000110000000000001011 \
b11000000000110000000000001011 l
1B
b11000000000110000000000001010 A
b11000000000110000000000001010 5"
b11000000000110000000000001011 4
b11000000000110000000000001011 i
b11000000000110000000000001011 3"
b100 #
b100 3
b100 s
b100 ~
b100 7"
b11000000000110000000000001010 $
b11000000000110000000000001010 /
b11000000000110000000000001010 V
b11000000000110000000000001010 '"
1*
#420
0*
#430
b10100 9
b10100 %"
b10100 /"
b10100 P
b10100 a
b10100 ("
1.
b10000 ^
b10000 U
b10000 [
b100 ]
b100 T
b100 \
b100 l
b110000000001100000000000010101 A
b110000000001100000000000010101 5"
1&
1E
b1 R
b1 k
b1 !"
0S
0B
b11000000000110000000000001010 4
b11000000000110000000000001010 i
b11000000000110000000000001010 3"
b110000000001100000000000010101 $
b110000000001100000000000010101 /
b110000000001100000000000010101 V
b110000000001100000000000010101 '"
b11000000000110000000000001011 !
b11000000000110000000000001011 0
b11000000000110000000000001011 :"
b11000000000110000000000001011 Y
b0 #
b0 3
b0 s
b0 ~
b0 7"
1*
#440
0*
#450
b101011 t
b10101 9
b10101 %"
b10101 /"
b100000000000000010000 ."
b101011 }
b100 |
b101011 h
b0 5
b0 2"
b0 8
b0 0"
b101011 q
b100 p
b0 -"
b100 +"
0.
b1 ]
b1 T
b1 \
b1 l
b10101 P
b10101 a
b10101 ("
b10101100000001000000000000000100 N
1L
0&
0E
b10 R
b10 k
b10 !"
0S
b10100 ^
b10100 U
b10100 [
b10100 (
b10100 -
b10100 8"
b10100 I
b10100 A
b10100 5"
b1 #
b1 3
b1 s
b1 ~
b1 7"
b10100 G
b10100 &"
b10100 *"
b10100 $
b10100 /
b10100 V
b10100 '"
b11000000000110000000000001010 !
b11000000000110000000000001010 0
b11000000000110000000000001010 :"
b11000000000110000000000001010 Y
b10101100000001000000000000000100 %
b10101100000001000000000000000100 6
b10101100000001000000000000000100 w
b10101100000001000000000000000100 ;"
1*
#460
0*
#470
b10000 9
b10000 %"
b10000 /"
b10000 P
b10000 a
b10000 ("
b0 ^
b0 U
b0 [
b10101 A
b10101 5"
b10000 ]
b10000 T
b10000 \
b10000 l
b10000 m
b100 n
0L
b11 R
b11 k
b11 !"
1S
b10101 $
b10101 /
b10101 V
b10101 '"
b0 X
b0 r
b100 >
b100 j
b100 x
b0 ;
b0 z
b10101100000001000000000000000100 ?
b101011 :
b101011 {
b10 #
b10 3
b10 s
b10 ~
b10 7"
1*
#480
0*
#490
b11000000000110000000000001010 9
b11000000000110000000000001010 %"
b11000000000110000000000001010 /"
b11000000000110000000000001010 P
b11000000000110000000000001010 a
b11000000000110000000000001010 ("
b10000 (
b10000 -
b10000 8"
b10000 I
b11000000000110000000000001010 ]
b11000000000110000000000001010 T
b11000000000110000000000001010 \
b11000000000110000000000001010 l
1"
1K
b0 R
b0 k
b0 !"
b10000 A
b10000 5"
b11 #
b11 3
b11 s
b11 ~
b11 7"
b10000 $
b10000 /
b10000 V
b10000 '"
1*
#500
0*
#510
b10100 (
b10100 -
b10100 8"
b10100 I
b11000000000110000000000001010 A
b11000000000110000000000001010 5"
1B
0"
0K
b11000000000110000000000001010 $
b11000000000110000000000001010 /
b11000000000110000000000001010 V
b11000000000110000000000001010 '"
b100 #
b100 3
b100 s
b100 ~
b100 7"
1*
#520
0*
