100011 00000 00001 0000 0000 0000 0111
8C010007
opcode rs    rt    offset //LW r[1] = MEM(rs+offset*4) result r[1]= 10000010

100011 00000 00010 0000 0000 0000 1000
8C020008
opcode rs    rt    offset //LW r[2] = MEM(rs+offset*4) result r[2]= 00000010

100011 00000 00011 0000 0000 0000 1001
8C030009
opcode rs    rt    offset //LW r[3] = MEM(rs+offset*4) result r[3]=00010001

000000 00001 00010 00000 00000 011000
00220018
opcode   rs   rt  // mult Rs * Rt check output registers HI and LO expected output 10000100

000000 00010 00011 00000 00000 011001
00430019
opcode   rs   rt  //multu Rs * Rt check output registers HI and LO 00100010

000000 00001 00010 00000 00000 011010
000 0000 0001 0001 0000 0001 1010
0022001A
opcode   rs   rt  //div rs / rt remainder is stored in HI and the answer is stored in LO expected output = 0000000010000001

000000 00011 00010 00000 00000 011011
0062001B
opcode   rs   rt  //divu rs / rt = 0000000100001000

