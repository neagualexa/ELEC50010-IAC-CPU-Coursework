RAM : INIT : Loading RAM contents from ./INITIALISED_FILE.txt
RAM : DATA : Loading DATA contents from ./DATA_MEMORY_FILE.txt
WARNING: ./ram_tiny_CPU.v:34: $readmemh: The behaviour for reg[...] mem[N:0]; $readmemh("...", mem); changed in the 1364-2005 standard. To avoid ambiguity, use mem[0:N] or explicit range parameters $readmemh("...", mem, start, stop);. Defaulting to 1364-2005 behavior.
WARNING: ./ram_tiny_CPU.v:34: $readmemh(./DATA_MEMORY_FILE.txt): Not enough words in the file for the requested range [0:65535].
WARNING: ./ram_tiny_CPU.v:35: $readmemh: The behaviour for reg[...] mem[N:0]; $readmemh("...", mem); changed in the 1364-2005 standard. To avoid ambiguity, use mem[0:N] or explicit range parameters $readmemh("...", mem, start, stop);. Defaulting to 1364-2005 behavior.
WARNING: ./ram_tiny_CPU.v:35: $readmemh(./INITIALISED_FILE.txt): Not enough words in the file for the requested range [0:65535].
VCD info: dumpfile CPU_testbench.vcd opened for output.
ram: read = 0, wordaddress = xxxxxxxx, readdata = xxxxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = z, RegWrite = 0
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ALUA = xxxxxxxx, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 1, wordaddress = xxxxxxxx, readdata = xxxxxxxx
ALUA = bfc00000, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 1, wordaddress = 00000000, readdata = xxxxxxxx
ALUA = bfc00000, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = bfc00000, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------           1 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 1, wordaddress = 00000000, readdata = 8c000000
ALUA = bfc00004, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00004, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000001, readdata = 8c000000
ALUA = bfc00004, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00004, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 0000008c, ALUOut: 00000000, opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00004, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 0000008c, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 0000008c, ALUOut: 00000000 opcode: 000000
 OUT:  WRITE_BACK    - readdata_to_CPU: 0000008c, ALUOut: 00000000 opcode: 000000
ram: read = 1, wordaddress = 00000001, readdata = 8c000000
ALUA = bfc00004, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------           2 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 0000008c, ALUOut: 00000000, opcode: 000000
ram: read = 0, wordaddress = 00000001, readdata = 01000000
ALUA = bfc00008, ALUB = 0000008c ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000002, readdata = 01000000
ALUA = bfc00008, ALUB = 0000008c ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00008, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000001, ALUOut: 00000000 opcode: 000000
ALUA = bfc00008, ALUB = 00000001 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00094, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00094, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000001, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000001, ALUOut: 00000000 opcode: 000000
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000001, ALUOut: 00000000 opcode: 000000
 OUT: Instruction           2 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000002, readdata = 01000000
ALUA = bfc00008, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------           3 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000001, ALUOut: 00000000, opcode: 000000
ram: read = 1, wordaddress = 00000002, readdata = 00000000
ALUA = bfc0000c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc0000c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000003, readdata = 00000000
ALUA = bfc0000c, ALUB = 00000001 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc0000c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc0000c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc0000d, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction           3 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000003, readdata = 00000000
ALUA = bfc0000c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------           4 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ram: read = 0, wordaddress = 00000003, readdata = 1c000000
ALUA = bfc00010, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000004, readdata = 1c000000
ALUA = bfc00010, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00010, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 0000001c, ALUOut: 00000000 opcode: 000000
ALUA = bfc00010, ALUB = 0000001c ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00010, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00010, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 0000001c, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 0000001c, ALUOut: 00000000 opcode: 000000
 OUT:  WRITE_BACK    - readdata_to_CPU: 0000001c, ALUOut: 00000000 opcode: 000000
 OUT: Instruction           4 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000004, readdata = 1c000000
ALUA = bfc00010, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------           5 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 0000001c, ALUOut: 00000000, opcode: 000000
ram: read = 1, wordaddress = 00000004, readdata = 8c000000
ALUA = bfc00014, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00014, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000005, readdata = 8c000000
ALUA = bfc00014, ALUB = 0000001c ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00014, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 0000008c, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00014, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00030, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 0000008c, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 0000008c, ALUOut: 00000000 opcode: 000000
 OUT:  WRITE_BACK    - readdata_to_CPU: 0000008c, ALUOut: 00000000 opcode: 000000
 OUT: Instruction           5 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000005, readdata = 8c000000
ALUA = bfc00014, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------           6 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 0000008c, ALUOut: 00000000, opcode: 000000
ram: read = 0, wordaddress = 00000005, readdata = 02000000
ALUA = bfc00018, ALUB = 0000008c ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000006, readdata = 02000000
ALUA = bfc00018, ALUB = 0000008c ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00018, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000002, ALUOut: 00000000 opcode: 000000
ALUA = bfc00018, ALUB = 00000002 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc000a4, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc000a4, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000002, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc000a4, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000002, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000002, ALUOut: 00000000 opcode: 000000
 OUT: Instruction           6 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000006, readdata = 02000000
ALUA = bfc00018, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------           7 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000002, ALUOut: 00000000, opcode: 000000
ram: read = 1, wordaddress = 00000006, readdata = 00000000
ALUA = bfc0001c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc0001c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000007, readdata = 00000000
ALUA = bfc0001c, ALUB = 00000002 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc0001c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc0001c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc0001e, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction           7 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000007, readdata = 00000000
ALUA = bfc0001c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------           8 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ram: read = 0, wordaddress = 00000007, readdata = 20000000
ALUA = bfc00020, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000008, readdata = 20000000
ALUA = bfc00020, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00020, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000020, ALUOut: 00000000 opcode: 000000
ALUA = bfc00020, ALUB = 00000020 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00020, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00020, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000020, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000020, ALUOut: 00000000 opcode: 000000
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000020, ALUOut: 00000000 opcode: 000000
 OUT: Instruction           8 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000008, readdata = 20000000
ALUA = bfc00020, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------           9 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000020, ALUOut: 00000000, opcode: 000000
ram: read = 1, wordaddress = 00000008, readdata = 8c000000
ALUA = bfc00024, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00024, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000009, readdata = 8c000000
ALUA = bfc00024, ALUB = 00000020 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00024, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 0000008c, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00024, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00044, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 0000008c, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 0000008c, ALUOut: 00000000 opcode: 000000
 OUT:  WRITE_BACK    - readdata_to_CPU: 0000008c, ALUOut: 00000000 opcode: 000000
 OUT: Instruction           9 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000009, readdata = 8c000000
ALUA = bfc00024, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          10 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 0000008c, ALUOut: 00000000, opcode: 000000
ram: read = 0, wordaddress = 00000009, readdata = 03000000
ALUA = bfc00028, ALUB = 0000008c ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 0000000a, readdata = 03000000
ALUA = bfc00028, ALUB = 0000008c ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00028, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000003, ALUOut: 00000000 opcode: 000000
ALUA = bfc00028, ALUB = 00000003 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc000b4, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc000b4, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000003, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc000b4, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000003, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000003, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          10 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000000a, readdata = 03000000
ALUA = bfc00028, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          11 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000003, ALUOut: 00000000, opcode: 000000
ram: read = 1, wordaddress = 0000000a, readdata = 00000000
ALUA = bfc0002c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc0002c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 0000000b, readdata = 00000000
ALUA = bfc0002c, ALUB = 00000003 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc0002c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc0002c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc0002f, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          11 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000000b, readdata = 00000000
ALUA = bfc0002c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          12 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ram: read = 0, wordaddress = 0000000b, readdata = 26000000
ALUA = bfc00030, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 0000000c, readdata = 26000000
ALUA = bfc00030, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00030, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000026, ALUOut: 00000000 opcode: 000000
ALUA = bfc00030, ALUB = 00000026 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00030, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00030, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000026, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00030, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000026, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000026, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          12 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000000c, readdata = 26000000
ALUA = bfc00030, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          13 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000026, ALUOut: 00000000, opcode: 000000
ram: read = 1, wordaddress = 0000000c, readdata = 00000000
ALUA = bfc00034, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00034, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 0000000d, readdata = 00000000
ALUA = bfc00034, ALUB = 00000026 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00034, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00034, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc0005a, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          13 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000000d, readdata = 00000000
ALUA = bfc00034, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          14 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ram: read = 0, wordaddress = 0000000d, readdata = 22000000
ALUA = bfc00038, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 0000000e, readdata = 22000000
ALUA = bfc00038, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00038, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000022, ALUOut: 00000000 opcode: 000000
ALUA = bfc00038, ALUB = 00000022 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00038, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00038, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000022, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000022, ALUOut: 00000000 opcode: 000000
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000022, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          14 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000000e, readdata = 22000000
ALUA = bfc00038, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          15 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000022, ALUOut: 00000000, opcode: 000000
ram: read = 1, wordaddress = 0000000e, readdata = 00000000
ALUA = bfc0003c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc0003c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 0000000f, readdata = 00000000
ALUA = bfc0003c, ALUB = 00000022 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc0003c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc0003c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc0005e, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          15 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000000f, readdata = 00000000
ALUA = bfc0003c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          16 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ram: read = 0, wordaddress = 0000000f, readdata = 18000000
ALUA = bfc00040, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000010, readdata = 18000000
ALUA = bfc00040, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00040, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000018, ALUOut: 00000000 opcode: 000000
ALUA = bfc00040, ALUB = 00000018 ,ALU_MULTorDIV_result = fffffff9fa000600
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00040, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = fffffff9fa000600
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00040, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = 0000000000000000
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00040, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000018, ALUOut: 00000000 opcode: 000000
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000018, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = 0000000000000000
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000018, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          16 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000010, readdata = 18000000
ALUA = bfc00040, ALUB = 00000004 ,ALU_MULTorDIV_result = 0000000000000000
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          17 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000018, ALUOut: 00000000, opcode: 000000
ram: read = 1, wordaddress = 00000010, readdata = 00000000
ALUA = bfc00044, ALUB = 00000004 ,ALU_MULTorDIV_result = 0000000000000000
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00044, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000011, readdata = 00000000
ALUA = bfc00044, ALUB = 00000018 ,ALU_MULTorDIV_result = 0000000000000000
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00044, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = 0000000000000000
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00044, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = 0000000000000000
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc0005c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = 0000000000000000
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = 0000000000000000
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          17 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000011, readdata = 00000000
ALUA = bfc00044, ALUB = 00000004 ,ALU_MULTorDIV_result = 0000000000000000
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          18 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ram: read = 0, wordaddress = 00000011, readdata = 43000000
ALUA = bfc00048, ALUB = 00000000 ,ALU_MULTorDIV_result = 0000000000000000
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000012, readdata = 43000000
ALUA = bfc00048, ALUB = 00000000 ,ALU_MULTorDIV_result = 0000000000000000
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00048, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000043, ALUOut: 00000000 opcode: 000000
ALUA = bfc00048, ALUB = 00000043 ,ALU_MULTorDIV_result = 0000000000000000
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00048, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = 0000000000000000
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00048, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000043, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = 0000000000000000
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00048, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = 0000000000000000
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000043, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = 0000000000000000
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000043, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          18 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000012, readdata = 43000000
ALUA = bfc00048, ALUB = 00000004 ,ALU_MULTorDIV_result = 0000000000000000
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          19 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000043, ALUOut: 00000000, opcode: 000000
ram: read = 1, wordaddress = 00000012, readdata = 00000000
ALUA = bfc0004c, ALUB = 00000004 ,ALU_MULTorDIV_result = 0000000000000000
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc0004c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000013, readdata = 00000000
ALUA = bfc0004c, ALUB = 00000043 ,ALU_MULTorDIV_result = 0000000000000000
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc0004c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = 0000000000000000
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc0004c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = 0000000000000000
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc0008f, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = 0000000000000000
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = 0000000000000000
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          19 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000013, readdata = 00000000
ALUA = bfc0004c, ALUB = 00000004 ,ALU_MULTorDIV_result = 0000000000000000
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          20 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ram: read = 0, wordaddress = 00000013, readdata = 19000000
ALUA = bfc00050, ALUB = 00000000 ,ALU_MULTorDIV_result = 0000000000000000
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000014, readdata = 19000000
ALUA = bfc00050, ALUB = 00000000 ,ALU_MULTorDIV_result = 0000000000000000
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00050, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000019, ALUOut: 00000000 opcode: 000000
ALUA = bfc00050, ALUB = 00000019 ,ALU_MULTorDIV_result = 00000012b9c007d0
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00050, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = 00000012b9c007d0
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00050, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = 0000000000000000
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00050, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000019, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = 0000000000000000
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000019, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = 0000000000000000
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000019, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          20 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000014, readdata = 19000000
ALUA = bfc00050, ALUB = 00000004 ,ALU_MULTorDIV_result = 0000000000000000
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          21 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000019, ALUOut: 00000000, opcode: 000000
ram: read = 1, wordaddress = 00000014, readdata = 00000000
ALUA = bfc00054, ALUB = 00000004 ,ALU_MULTorDIV_result = 0000000000000000
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00054, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000015, readdata = 00000000
ALUA = bfc00054, ALUB = 00000019 ,ALU_MULTorDIV_result = 0000000000000000
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00054, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = 0000000000000000
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00054, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = 0000000000000000
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc0006d, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = 0000000000000000
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = 0000000000000000
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          21 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000015, readdata = 00000000
ALUA = bfc00054, ALUB = 00000004 ,ALU_MULTorDIV_result = 0000000000000000
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          22 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ram: read = 0, wordaddress = 00000015, readdata = 22000000
ALUA = bfc00058, ALUB = 00000000 ,ALU_MULTorDIV_result = 0000000000000000
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000016, readdata = 22000000
ALUA = bfc00058, ALUB = 00000000 ,ALU_MULTorDIV_result = 0000000000000000
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00058, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000022, ALUOut: 00000000 opcode: 000000
ALUA = bfc00058, ALUB = 00000022 ,ALU_MULTorDIV_result = 0000000000000000
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00058, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = 0000000000000000
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00058, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000022, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = 0000000000000000
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000022, ALUOut: 00000000 opcode: 000000
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000022, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          22 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000016, readdata = 22000000
ALUA = bfc00058, ALUB = 00000004 ,ALU_MULTorDIV_result = 0000000000000000
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          23 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000022, ALUOut: 00000000, opcode: 000000
ram: read = 1, wordaddress = 00000016, readdata = 00000000
ALUA = bfc0005c, ALUB = 00000004 ,ALU_MULTorDIV_result = 0000000000000000
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc0005c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000017, readdata = 00000000
ALUA = bfc0005c, ALUB = 00000022 ,ALU_MULTorDIV_result = 0000000000000000
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc0005c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = 0000000000000000
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc0005c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = 0000000000000000
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc0007e, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = 0000000000000000
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = 0000000000000000
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          23 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000017, readdata = 00000000
ALUA = bfc0005c, ALUB = 00000004 ,ALU_MULTorDIV_result = 0000000000000000
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          24 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ram: read = 0, wordaddress = 00000017, readdata = 1a000000
ALUA = bfc00060, ALUB = 00000000 ,ALU_MULTorDIV_result = 0000000000000000
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000018, readdata = 1a000000
ALUA = bfc00060, ALUB = 00000000 ,ALU_MULTorDIV_result = 0000000000000000
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00060, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 0000001a, ALUOut: 00000000 opcode: 000000
ALUA = bfc00060, ALUB = 0000001a ,ALU_MULTorDIV_result = fd87627afffffffc
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00060, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = fd87627afffffffc
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00060, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00060, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 0000001a, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00060, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 0000001a, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 0000001a, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          24 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000018, readdata = 1a000000
ALUA = bfc00060, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          25 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 0000001a, ALUOut: 00000000, opcode: 000000
ram: read = 1, wordaddress = 00000018, readdata = 00000000
ALUA = bfc00064, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00064, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000019, readdata = 00000000
ALUA = bfc00064, ALUB = 0000001a ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00064, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00064, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc0007e, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          25 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000019, readdata = 00000000
ALUA = bfc00064, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          26 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ram: read = 0, wordaddress = 00000019, readdata = 62000000
ALUA = bfc00068, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 0000001a, readdata = 62000000
ALUA = bfc00068, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00068, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000062, ALUOut: 00000000 opcode: 000000
ALUA = bfc00068, ALUB = 00000062 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00068, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00068, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000062, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000062, ALUOut: 00000000 opcode: 000000
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000062, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          26 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000001a, readdata = 62000000
ALUA = bfc00068, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          27 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000062, ALUOut: 00000000, opcode: 000000
ram: read = 1, wordaddress = 0000001a, readdata = 00000000
ALUA = bfc0006c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc0006c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 0000001b, readdata = 00000000
ALUA = bfc0006c, ALUB = 00000062 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc0006c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc0006c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000ce, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          27 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000001b, readdata = 00000000
ALUA = bfc0006c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          28 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ram: read = 0, wordaddress = 0000001b, readdata = 1b000000
ALUA = bfc00070, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 0000001c, readdata = 1b000000
ALUA = bfc00070, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00070, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 0000001b, ALUOut: 00000000 opcode: 000000
ALUA = bfc00070, ALUB = 0000001b ,ALU_MULTorDIV_result = 071a12fa00000012
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00070, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = 071a12fa00000012
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00070, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00070, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 0000001b, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 0000001b, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 0000001b, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          28 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000001c, readdata = 1b000000
ALUA = bfc00070, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          29 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 0000001b, ALUOut: 00000000, opcode: 000000
ram: read = 1, wordaddress = 0000001c, readdata = 80000000
ALUA = bfc00074, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00074, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 0000001d, readdata = 80000000
ALUA = bfc00074, ALUB = 0000001b ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00074, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000080, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00074, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc0008f, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000080, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000080, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000080, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          29 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000001d, readdata = 80000000
ALUA = bfc00074, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          30 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000080, ALUOut: 00000000, opcode: 000000
ram: read = 0, wordaddress = 0000001d, readdata = 00000000
ALUA = bfc00078, ALUB = 00000080 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 0000001e, readdata = 00000000
ALUA = bfc00078, ALUB = 00000080 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00078, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = bfc00078, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000f8, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000f8, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000f8, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          30 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000001e, readdata = 00000000
ALUA = bfc00078, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          31 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ALUA = bfc0007c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc0007c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 0000001f, readdata = 00000000
ALUA = bfc0007c, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc0007c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc0007c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          31 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000001f, readdata = 00000000
ALUA = bfc0007c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          32 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ram: read = 0, wordaddress = 0000001f, readdata = 10000000
ALUA = bfc00080, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000020, readdata = 10000000
ALUA = bfc00080, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00080, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = bfc00080, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00080, RegDst = 00, HI_LO_ALUOut = 1, RegWrite = 0
ALUA = bfc00080, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 1, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000010, ALUOut: 00000000 opcode: 000000
ALUA = bfc00080, ALUB = 00000010 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 1, RegWrite = 0
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 1, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000010, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 1, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000010, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 1, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000010, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          32 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000020, readdata = 10000000
ALUA = bfc00080, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 1, RegWrite = 0
 OUT:  -------------------          33 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000010, ALUOut: 00000000, opcode: 000000
ram: read = 1, wordaddress = 00000020, readdata = 00000000
ALUA = bfc00084, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 1, RegWrite = 0
ram: read = 0, wordaddress = 00000021, readdata = 00000000
ALUA = bfc00084, ALUB = 00000010 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 1, RegWrite = 0
ALUA = bfc00084, ALUB = 00000010 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = bfc00084, ALUB = 00000010 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00084, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00084, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00094, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          33 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000021, readdata = 00000000
ALUA = bfc00084, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          34 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ram: read = 0, wordaddress = 00000021, readdata = 00000000
ALUA = bfc00088, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000022, readdata = 00000000
ALUA = bfc00088, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00088, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00088, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00088, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          34 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000022, readdata = 00000000
ALUA = bfc00088, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          35 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ALUA = bfc0008c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc0008c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000023, readdata = 00000000
ALUA = bfc0008c, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc0008c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc0008c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          35 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000023, readdata = 00000000
ALUA = bfc0008c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          36 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ram: read = 0, wordaddress = 00000023, readdata = 10000000
ALUA = bfc00090, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000024, readdata = 10000000
ALUA = bfc00090, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00090, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = bfc00090, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00090, RegDst = 00, HI_LO_ALUOut = 1, RegWrite = 0
ALUA = bfc00090, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 1, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000010, ALUOut: 00000000 opcode: 000000
ALUA = bfc00090, ALUB = 00000010 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 1, RegWrite = 0
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 1, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000010, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 1, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000010, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 1, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000010, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          36 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000024, readdata = 10000000
ALUA = bfc00090, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 1, RegWrite = 0
 OUT:  -------------------          37 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000010, ALUOut: 00000000, opcode: 000000
ram: read = 1, wordaddress = 00000024, readdata = 00000000
ALUA = bfc00094, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 1, RegWrite = 0
ram: read = 0, wordaddress = 00000025, readdata = 00000000
ALUA = bfc00094, ALUB = 00000010 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 1, RegWrite = 0
ALUA = bfc00094, ALUB = 00000010 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = bfc00094, ALUB = 00000010 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00094, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00094, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000a4, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          37 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000025, readdata = 00000000
ALUA = bfc00094, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          38 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ram: read = 0, wordaddress = 00000025, readdata = 01000000
ALUA = bfc00098, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000026, readdata = 01000000
ALUA = bfc00098, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00098, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000001, ALUOut: 00000000 opcode: 000000
ALUA = bfc00098, ALUB = 00000001 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00098, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00098, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000001, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000001, ALUOut: 00000000 opcode: 000000
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000001, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          38 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000026, readdata = 01000000
ALUA = bfc00098, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          39 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000001, ALUOut: 00000000, opcode: 000000
ram: read = 1, wordaddress = 00000026, readdata = 00000000
ALUA = bfc0009c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc0009c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000027, readdata = 00000000
ALUA = bfc0009c, ALUB = 00000001 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc0009c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc0009c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc0009d, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          39 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000027, readdata = 00000000
ALUA = bfc0009c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          40 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ram: read = 0, wordaddress = 00000027, readdata = 01000000
ALUA = bfc000a0, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000028, readdata = 01000000
ALUA = bfc000a0, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000a0, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000001, ALUOut: 00000000 opcode: 000000
ALUA = bfc000a0, ALUB = 00000001 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000a0, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000a0, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000001, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000001, ALUOut: 00000000 opcode: 000000
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000001, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          40 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000028, readdata = 01000000
ALUA = bfc000a0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          41 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000001, ALUOut: 00000000, opcode: 000000
ram: read = 1, wordaddress = 00000028, readdata = 00000000
ALUA = bfc000a4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000a4, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000029, readdata = 00000000
ALUA = bfc000a4, ALUB = 00000001 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000a4, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000a4, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000a5, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          41 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000029, readdata = 00000000
ALUA = bfc000a4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          42 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ram: read = 0, wordaddress = 00000029, readdata = 00000000
ALUA = bfc000a8, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 0000002a, readdata = 00000000
ALUA = bfc000a8, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000a8, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000a8, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000a8, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          42 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000002a, readdata = 00000000
ALUA = bfc000a8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          43 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ALUA = bfc000ac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000ac, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 0000002b, readdata = 00000000
ALUA = bfc000ac, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000ac, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000ac, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          43 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000002b, readdata = 00000000
ALUA = bfc000ac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          44 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ram: read = 0, wordaddress = 0000002b, readdata = 00000000
ALUA = bfc000b0, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 0000002c, readdata = 00000000
ALUA = bfc000b0, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000b0, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000b0, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000b0, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          44 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000002c, readdata = 00000000
ALUA = bfc000b0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          45 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ALUA = bfc000b4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000b4, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 0000002d, readdata = 00000000
ALUA = bfc000b4, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000b4, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000b4, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          45 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000002d, readdata = 00000000
ALUA = bfc000b4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          46 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ram: read = 0, wordaddress = 0000002d, readdata = 00000000
ALUA = bfc000b8, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 0000002e, readdata = 00000000
ALUA = bfc000b8, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000b8, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000b8, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000b8, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          46 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000002e, readdata = 00000000
ALUA = bfc000b8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          47 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ALUA = bfc000bc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000bc, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 0000002f, readdata = 00000000
ALUA = bfc000bc, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000bc, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000bc, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          47 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000002f, readdata = 00000000
ALUA = bfc000bc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          48 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ram: read = 0, wordaddress = 0000002f, readdata = 00000000
ALUA = bfc000c0, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000030, readdata = 00000000
ALUA = bfc000c0, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000c0, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000c0, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000c0, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          48 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000030, readdata = 00000000
ALUA = bfc000c0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          49 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ALUA = bfc000c4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000c4, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000031, readdata = 00000000
ALUA = bfc000c4, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000c4, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000c4, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          49 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000031, readdata = 00000000
ALUA = bfc000c4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          50 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ram: read = 0, wordaddress = 00000031, readdata = 00000000
ALUA = bfc000c8, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000032, readdata = 00000000
ALUA = bfc000c8, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000c8, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000c8, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000c8, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          50 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000032, readdata = 00000000
ALUA = bfc000c8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          51 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ALUA = bfc000cc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000cc, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000033, readdata = 00000000
ALUA = bfc000cc, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000cc, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000cc, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          51 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000033, readdata = 00000000
ALUA = bfc000cc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          52 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ram: read = 0, wordaddress = 00000033, readdata = 00000000
ALUA = bfc000d0, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000034, readdata = 00000000
ALUA = bfc000d0, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000d0, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000d0, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000d0, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          52 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000034, readdata = 00000000
ALUA = bfc000d0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          53 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ALUA = bfc000d4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000d4, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000035, readdata = 00000000
ALUA = bfc000d4, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000d4, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000d4, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          53 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000035, readdata = 00000000
ALUA = bfc000d4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          54 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ram: read = 0, wordaddress = 00000035, readdata = 00000000
ALUA = bfc000d8, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000036, readdata = 00000000
ALUA = bfc000d8, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000d8, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000d8, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000d8, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          54 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000036, readdata = 00000000
ALUA = bfc000d8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          55 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ALUA = bfc000dc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000dc, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000037, readdata = 00000000
ALUA = bfc000dc, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000dc, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000dc, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          55 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000037, readdata = 00000000
ALUA = bfc000dc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          56 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ram: read = 0, wordaddress = 00000037, readdata = 00000000
ALUA = bfc000e0, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000038, readdata = 00000000
ALUA = bfc000e0, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000e0, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000e0, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000e0, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          56 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000038, readdata = 00000000
ALUA = bfc000e0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          57 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ALUA = bfc000e4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000e4, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000039, readdata = 00000000
ALUA = bfc000e4, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000e4, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000e4, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          57 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000039, readdata = 00000000
ALUA = bfc000e4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          58 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ram: read = 0, wordaddress = 00000039, readdata = 00000000
ALUA = bfc000e8, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 0000003a, readdata = 00000000
ALUA = bfc000e8, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000e8, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000e8, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000e8, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          58 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000003a, readdata = 00000000
ALUA = bfc000e8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          59 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ALUA = bfc000ec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000ec, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 0000003b, readdata = 00000000
ALUA = bfc000ec, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000ec, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000ec, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          59 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000003b, readdata = 00000000
ALUA = bfc000ec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          60 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ram: read = 0, wordaddress = 0000003b, readdata = 00000000
ALUA = bfc000f0, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 0000003c, readdata = 00000000
ALUA = bfc000f0, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000f0, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000f0, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000f0, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          60 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000003c, readdata = 00000000
ALUA = bfc000f0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          61 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ALUA = bfc000f4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000f4, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 0000003d, readdata = 00000000
ALUA = bfc000f4, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000f4, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000f4, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          61 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000003d, readdata = 00000000
ALUA = bfc000f4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          62 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ram: read = 0, wordaddress = 0000003d, readdata = 00000000
ALUA = bfc000f8, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 0000003e, readdata = 00000000
ALUA = bfc000f8, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000f8, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000f8, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000f8, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          62 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000003e, readdata = 00000000
ALUA = bfc000f8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          63 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ALUA = bfc000fc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000fc, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 0000003f, readdata = 00000000
ALUA = bfc000fc, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000fc, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc000fc, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          63 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000003f, readdata = 00000000
ALUA = bfc000fc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          64 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ram: read = 0, wordaddress = 0000003f, readdata = 00000000
ALUA = bfc00100, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000040, readdata = 00000000
ALUA = bfc00100, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00100, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00100, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00100, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          64 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000040, readdata = 00000000
ALUA = bfc00100, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          65 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ALUA = bfc00104, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00104, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000041, readdata = 00000000
ALUA = bfc00104, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00104, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00104, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          65 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000041, readdata = 00000000
ALUA = bfc00104, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          66 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ram: read = 0, wordaddress = 00000041, readdata = 00000000
ALUA = bfc00108, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000042, readdata = 00000000
ALUA = bfc00108, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00108, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00108, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00108, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          66 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000042, readdata = 00000000
ALUA = bfc00108, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          67 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ALUA = bfc0010c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc0010c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000043, readdata = 00000000
ALUA = bfc0010c, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc0010c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc0010c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          67 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000043, readdata = 00000000
ALUA = bfc0010c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          68 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ram: read = 0, wordaddress = 00000043, readdata = 00000000
ALUA = bfc00110, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000044, readdata = 00000000
ALUA = bfc00110, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00110, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00110, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00110, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          68 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000044, readdata = 00000000
ALUA = bfc00110, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          69 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ALUA = bfc00114, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00114, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000045, readdata = 00000000
ALUA = bfc00114, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00114, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00114, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          69 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000045, readdata = 00000000
ALUA = bfc00114, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          70 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ram: read = 0, wordaddress = 00000045, readdata = 00000000
ALUA = bfc00118, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000046, readdata = 00000000
ALUA = bfc00118, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00118, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00118, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00118, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          70 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000046, readdata = 00000000
ALUA = bfc00118, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          71 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ALUA = bfc0011c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc0011c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000047, readdata = 00000000
ALUA = bfc0011c, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc0011c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc0011c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          71 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000047, readdata = 00000000
ALUA = bfc0011c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          72 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ram: read = 0, wordaddress = 00000047, readdata = 00000000
ALUA = bfc00120, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000048, readdata = 00000000
ALUA = bfc00120, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00120, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00120, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00120, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          72 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000048, readdata = 00000000
ALUA = bfc00120, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          73 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ALUA = bfc00124, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00124, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000049, readdata = 00000000
ALUA = bfc00124, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00124, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00124, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          73 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000049, readdata = 00000000
ALUA = bfc00124, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          74 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ram: read = 0, wordaddress = 00000049, readdata = 00000000
ALUA = bfc00128, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 0000004a, readdata = 00000000
ALUA = bfc00128, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00128, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00128, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00128, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          74 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000004a, readdata = 00000000
ALUA = bfc00128, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          75 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ALUA = bfc0012c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc0012c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 0000004b, readdata = 00000000
ALUA = bfc0012c, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc0012c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc0012c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          75 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000004b, readdata = 00000000
ALUA = bfc0012c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          76 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ram: read = 0, wordaddress = 0000004b, readdata = 00000000
ALUA = bfc00130, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 0000004c, readdata = 00000000
ALUA = bfc00130, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00130, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00130, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00130, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          76 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000004c, readdata = 00000000
ALUA = bfc00130, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          77 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ALUA = bfc00134, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00134, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 0000004d, readdata = 00000000
ALUA = bfc00134, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00134, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00134, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          77 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000004d, readdata = 00000000
ALUA = bfc00134, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          78 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ram: read = 0, wordaddress = 0000004d, readdata = 00000000
ALUA = bfc00138, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 0000004e, readdata = 00000000
ALUA = bfc00138, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00138, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00138, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00138, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          78 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000004e, readdata = 00000000
ALUA = bfc00138, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          79 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ALUA = bfc0013c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc0013c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 0000004f, readdata = 00000000
ALUA = bfc0013c, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc0013c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc0013c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          79 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000004f, readdata = 00000000
ALUA = bfc0013c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          80 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ram: read = 0, wordaddress = 0000004f, readdata = 00000000
ALUA = bfc00140, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000050, readdata = 00000000
ALUA = bfc00140, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00140, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00140, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00140, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          80 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000050, readdata = 00000000
ALUA = bfc00140, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          81 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ALUA = bfc00144, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00144, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000051, readdata = 00000000
ALUA = bfc00144, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00144, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00144, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          81 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000051, readdata = 00000000
ALUA = bfc00144, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          82 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ram: read = 0, wordaddress = 00000051, readdata = 00000000
ALUA = bfc00148, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000052, readdata = 00000000
ALUA = bfc00148, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00148, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00148, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00148, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          82 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000052, readdata = 00000000
ALUA = bfc00148, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          83 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ALUA = bfc0014c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc0014c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000053, readdata = 00000000
ALUA = bfc0014c, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc0014c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc0014c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          83 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000053, readdata = 00000000
ALUA = bfc0014c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          84 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ram: read = 0, wordaddress = 00000053, readdata = 00000000
ALUA = bfc00150, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000054, readdata = 00000000
ALUA = bfc00150, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00150, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00150, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00150, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          84 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000054, readdata = 00000000
ALUA = bfc00150, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          85 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ALUA = bfc00154, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00154, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000055, readdata = 00000000
ALUA = bfc00154, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00154, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00154, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          85 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000055, readdata = 00000000
ALUA = bfc00154, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          86 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ram: read = 0, wordaddress = 00000055, readdata = 00000000
ALUA = bfc00158, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000056, readdata = 00000000
ALUA = bfc00158, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00158, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00158, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00158, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          86 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000056, readdata = 00000000
ALUA = bfc00158, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          87 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ALUA = bfc0015c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc0015c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000057, readdata = 00000000
ALUA = bfc0015c, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc0015c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc0015c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          87 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000057, readdata = 00000000
ALUA = bfc0015c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          88 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ram: read = 0, wordaddress = 00000057, readdata = 00000000
ALUA = bfc00160, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000058, readdata = 00000000
ALUA = bfc00160, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00160, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00160, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00160, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          88 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000058, readdata = 00000000
ALUA = bfc00160, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          89 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ALUA = bfc00164, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00164, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000059, readdata = 00000000
ALUA = bfc00164, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00164, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00164, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          89 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000059, readdata = 00000000
ALUA = bfc00164, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          90 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ram: read = 0, wordaddress = 00000059, readdata = 00000000
ALUA = bfc00168, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 0000005a, readdata = 00000000
ALUA = bfc00168, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00168, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00168, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00168, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          90 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000005a, readdata = 00000000
ALUA = bfc00168, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          91 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ALUA = bfc0016c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc0016c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 0000005b, readdata = 00000000
ALUA = bfc0016c, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc0016c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc0016c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          91 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000005b, readdata = 00000000
ALUA = bfc0016c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          92 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ram: read = 0, wordaddress = 0000005b, readdata = 00000000
ALUA = bfc00170, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 0000005c, readdata = 00000000
ALUA = bfc00170, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00170, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00170, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00170, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          92 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000005c, readdata = 00000000
ALUA = bfc00170, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          93 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ALUA = bfc00174, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00174, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 0000005d, readdata = 00000000
ALUA = bfc00174, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00174, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00174, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          93 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000005d, readdata = 00000000
ALUA = bfc00174, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          94 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ram: read = 0, wordaddress = 0000005d, readdata = 00000000
ALUA = bfc00178, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 0000005e, readdata = 00000000
ALUA = bfc00178, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00178, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00178, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00178, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          94 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000005e, readdata = 00000000
ALUA = bfc00178, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          95 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ALUA = bfc0017c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc0017c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 0000005f, readdata = 00000000
ALUA = bfc0017c, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc0017c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc0017c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          95 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000005f, readdata = 00000000
ALUA = bfc0017c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          96 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ram: read = 0, wordaddress = 0000005f, readdata = 00000000
ALUA = bfc00180, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000060, readdata = 00000000
ALUA = bfc00180, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00180, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00180, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00180, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          96 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000060, readdata = 00000000
ALUA = bfc00180, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          97 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ALUA = bfc00184, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00184, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000061, readdata = 00000000
ALUA = bfc00184, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00184, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00184, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          97 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000061, readdata = 00000000
ALUA = bfc00184, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          98 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ram: read = 0, wordaddress = 00000061, readdata = 00000000
ALUA = bfc00188, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000062, readdata = 00000000
ALUA = bfc00188, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00188, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00188, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00188, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          98 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000062, readdata = 00000000
ALUA = bfc00188, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          99 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ALUA = bfc0018c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc0018c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000063, readdata = 00000000
ALUA = bfc0018c, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc0018c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc0018c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          99 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000063, readdata = 00000000
ALUA = bfc0018c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------         100 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ram: read = 0, wordaddress = 00000063, readdata = 00000000
ALUA = bfc00190, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000064, readdata = 00000000
ALUA = bfc00190, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00190, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00190, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00190, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction         100 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000064, readdata = 00000000
ALUA = bfc00190, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------         101 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ram: read = 1, wordaddress = 00000064, readdata = xxxxxxxx
ALUA = bfc00194, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00194, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000065, readdata = xxxxxxxx
ALUA = bfc00194, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00194, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = bfc00194, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = bfc00194, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ALUA = bfc00194, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         101 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000065, readdata = xxxxxxxx
ALUA = bfc00194, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         102 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000065, readdata = xxxxxxxx
ALUA = bfc00198, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000066, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         102 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000066, readdata = xxxxxxxx
ALUA = bfc00198, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         103 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0019c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000067, readdata = xxxxxxxx
ALUA = bfc0019c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         103 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000067, readdata = xxxxxxxx
ALUA = bfc0019c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         104 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000067, readdata = xxxxxxxx
ALUA = bfc001a0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000068, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         104 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000068, readdata = xxxxxxxx
ALUA = bfc001a0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         105 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc001a4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000069, readdata = xxxxxxxx
ALUA = bfc001a4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         105 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000069, readdata = xxxxxxxx
ALUA = bfc001a4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         106 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000069, readdata = xxxxxxxx
ALUA = bfc001a8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000006a, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         106 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000006a, readdata = xxxxxxxx
ALUA = bfc001a8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         107 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc001ac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000006b, readdata = xxxxxxxx
ALUA = bfc001ac, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         107 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000006b, readdata = xxxxxxxx
ALUA = bfc001ac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         108 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000006b, readdata = xxxxxxxx
ALUA = bfc001b0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000006c, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         108 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000006c, readdata = xxxxxxxx
ALUA = bfc001b0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         109 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc001b4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000006d, readdata = xxxxxxxx
ALUA = bfc001b4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         109 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000006d, readdata = xxxxxxxx
ALUA = bfc001b4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         110 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000006d, readdata = xxxxxxxx
ALUA = bfc001b8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000006e, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         110 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000006e, readdata = xxxxxxxx
ALUA = bfc001b8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         111 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc001bc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000006f, readdata = xxxxxxxx
ALUA = bfc001bc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         111 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000006f, readdata = xxxxxxxx
ALUA = bfc001bc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         112 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000006f, readdata = xxxxxxxx
ALUA = bfc001c0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000070, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         112 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000070, readdata = xxxxxxxx
ALUA = bfc001c0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         113 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc001c4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000071, readdata = xxxxxxxx
ALUA = bfc001c4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         113 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000071, readdata = xxxxxxxx
ALUA = bfc001c4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         114 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000071, readdata = xxxxxxxx
ALUA = bfc001c8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000072, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         114 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000072, readdata = xxxxxxxx
ALUA = bfc001c8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         115 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc001cc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000073, readdata = xxxxxxxx
ALUA = bfc001cc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         115 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000073, readdata = xxxxxxxx
ALUA = bfc001cc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         116 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000073, readdata = xxxxxxxx
ALUA = bfc001d0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000074, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         116 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000074, readdata = xxxxxxxx
ALUA = bfc001d0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         117 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc001d4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000075, readdata = xxxxxxxx
ALUA = bfc001d4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         117 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000075, readdata = xxxxxxxx
ALUA = bfc001d4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         118 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000075, readdata = xxxxxxxx
ALUA = bfc001d8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000076, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         118 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000076, readdata = xxxxxxxx
ALUA = bfc001d8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         119 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc001dc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000077, readdata = xxxxxxxx
ALUA = bfc001dc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         119 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000077, readdata = xxxxxxxx
ALUA = bfc001dc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         120 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000077, readdata = xxxxxxxx
ALUA = bfc001e0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000078, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         120 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000078, readdata = xxxxxxxx
ALUA = bfc001e0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         121 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc001e4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000079, readdata = xxxxxxxx
ALUA = bfc001e4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         121 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000079, readdata = xxxxxxxx
ALUA = bfc001e4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         122 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000079, readdata = xxxxxxxx
ALUA = bfc001e8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000007a, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         122 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000007a, readdata = xxxxxxxx
ALUA = bfc001e8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         123 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc001ec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000007b, readdata = xxxxxxxx
ALUA = bfc001ec, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         123 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000007b, readdata = xxxxxxxx
ALUA = bfc001ec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         124 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000007b, readdata = xxxxxxxx
ALUA = bfc001f0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000007c, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         124 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000007c, readdata = xxxxxxxx
ALUA = bfc001f0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         125 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc001f4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000007d, readdata = xxxxxxxx
ALUA = bfc001f4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         125 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000007d, readdata = xxxxxxxx
ALUA = bfc001f4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         126 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000007d, readdata = xxxxxxxx
ALUA = bfc001f8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000007e, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         126 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000007e, readdata = xxxxxxxx
ALUA = bfc001f8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         127 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc001fc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000007f, readdata = xxxxxxxx
ALUA = bfc001fc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         127 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000007f, readdata = xxxxxxxx
ALUA = bfc001fc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         128 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000007f, readdata = xxxxxxxx
ALUA = bfc00200, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000080, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         128 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000080, readdata = xxxxxxxx
ALUA = bfc00200, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         129 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00204, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000081, readdata = xxxxxxxx
ALUA = bfc00204, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         129 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000081, readdata = xxxxxxxx
ALUA = bfc00204, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         130 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000081, readdata = xxxxxxxx
ALUA = bfc00208, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000082, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         130 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000082, readdata = xxxxxxxx
ALUA = bfc00208, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         131 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0020c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000083, readdata = xxxxxxxx
ALUA = bfc0020c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         131 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000083, readdata = xxxxxxxx
ALUA = bfc0020c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         132 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000083, readdata = xxxxxxxx
ALUA = bfc00210, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000084, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         132 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000084, readdata = xxxxxxxx
ALUA = bfc00210, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         133 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00214, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000085, readdata = xxxxxxxx
ALUA = bfc00214, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         133 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000085, readdata = xxxxxxxx
ALUA = bfc00214, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         134 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000085, readdata = xxxxxxxx
ALUA = bfc00218, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000086, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         134 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000086, readdata = xxxxxxxx
ALUA = bfc00218, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         135 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0021c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000087, readdata = xxxxxxxx
ALUA = bfc0021c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         135 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000087, readdata = xxxxxxxx
ALUA = bfc0021c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         136 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000087, readdata = xxxxxxxx
ALUA = bfc00220, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000088, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         136 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000088, readdata = xxxxxxxx
ALUA = bfc00220, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         137 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00224, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000089, readdata = xxxxxxxx
ALUA = bfc00224, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         137 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000089, readdata = xxxxxxxx
ALUA = bfc00224, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         138 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000089, readdata = xxxxxxxx
ALUA = bfc00228, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000008a, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         138 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000008a, readdata = xxxxxxxx
ALUA = bfc00228, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         139 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0022c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000008b, readdata = xxxxxxxx
ALUA = bfc0022c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         139 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000008b, readdata = xxxxxxxx
ALUA = bfc0022c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         140 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000008b, readdata = xxxxxxxx
ALUA = bfc00230, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000008c, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         140 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000008c, readdata = xxxxxxxx
ALUA = bfc00230, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         141 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00234, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000008d, readdata = xxxxxxxx
ALUA = bfc00234, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         141 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000008d, readdata = xxxxxxxx
ALUA = bfc00234, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         142 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000008d, readdata = xxxxxxxx
ALUA = bfc00238, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000008e, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         142 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000008e, readdata = xxxxxxxx
ALUA = bfc00238, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         143 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0023c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000008f, readdata = xxxxxxxx
ALUA = bfc0023c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         143 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000008f, readdata = xxxxxxxx
ALUA = bfc0023c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         144 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000008f, readdata = xxxxxxxx
ALUA = bfc00240, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000090, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         144 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000090, readdata = xxxxxxxx
ALUA = bfc00240, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         145 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00244, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000091, readdata = xxxxxxxx
ALUA = bfc00244, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         145 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000091, readdata = xxxxxxxx
ALUA = bfc00244, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         146 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000091, readdata = xxxxxxxx
ALUA = bfc00248, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000092, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         146 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000092, readdata = xxxxxxxx
ALUA = bfc00248, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         147 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0024c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000093, readdata = xxxxxxxx
ALUA = bfc0024c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         147 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000093, readdata = xxxxxxxx
ALUA = bfc0024c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         148 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000093, readdata = xxxxxxxx
ALUA = bfc00250, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000094, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         148 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000094, readdata = xxxxxxxx
ALUA = bfc00250, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         149 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00254, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000095, readdata = xxxxxxxx
ALUA = bfc00254, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         149 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000095, readdata = xxxxxxxx
ALUA = bfc00254, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         150 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000095, readdata = xxxxxxxx
ALUA = bfc00258, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000096, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         150 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000096, readdata = xxxxxxxx
ALUA = bfc00258, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         151 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0025c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000097, readdata = xxxxxxxx
ALUA = bfc0025c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         151 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000097, readdata = xxxxxxxx
ALUA = bfc0025c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         152 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000097, readdata = xxxxxxxx
ALUA = bfc00260, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000098, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         152 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000098, readdata = xxxxxxxx
ALUA = bfc00260, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         153 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00264, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000099, readdata = xxxxxxxx
ALUA = bfc00264, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         153 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000099, readdata = xxxxxxxx
ALUA = bfc00264, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         154 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000099, readdata = xxxxxxxx
ALUA = bfc00268, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000009a, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         154 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000009a, readdata = xxxxxxxx
ALUA = bfc00268, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         155 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0026c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000009b, readdata = xxxxxxxx
ALUA = bfc0026c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         155 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000009b, readdata = xxxxxxxx
ALUA = bfc0026c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         156 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000009b, readdata = xxxxxxxx
ALUA = bfc00270, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000009c, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         156 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000009c, readdata = xxxxxxxx
ALUA = bfc00270, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         157 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00274, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000009d, readdata = xxxxxxxx
ALUA = bfc00274, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         157 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000009d, readdata = xxxxxxxx
ALUA = bfc00274, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         158 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000009d, readdata = xxxxxxxx
ALUA = bfc00278, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000009e, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         158 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000009e, readdata = xxxxxxxx
ALUA = bfc00278, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         159 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0027c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000009f, readdata = xxxxxxxx
ALUA = bfc0027c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         159 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000009f, readdata = xxxxxxxx
ALUA = bfc0027c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         160 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000009f, readdata = xxxxxxxx
ALUA = bfc00280, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000a0, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         160 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000a0, readdata = xxxxxxxx
ALUA = bfc00280, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         161 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00284, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000a1, readdata = xxxxxxxx
ALUA = bfc00284, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         161 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000a1, readdata = xxxxxxxx
ALUA = bfc00284, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         162 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000000a1, readdata = xxxxxxxx
ALUA = bfc00288, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000a2, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         162 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000a2, readdata = xxxxxxxx
ALUA = bfc00288, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         163 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0028c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000a3, readdata = xxxxxxxx
ALUA = bfc0028c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         163 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000a3, readdata = xxxxxxxx
ALUA = bfc0028c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         164 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000000a3, readdata = xxxxxxxx
ALUA = bfc00290, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000a4, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         164 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000a4, readdata = xxxxxxxx
ALUA = bfc00290, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         165 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00294, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000a5, readdata = xxxxxxxx
ALUA = bfc00294, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         165 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000a5, readdata = xxxxxxxx
ALUA = bfc00294, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         166 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000000a5, readdata = xxxxxxxx
ALUA = bfc00298, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000a6, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         166 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000a6, readdata = xxxxxxxx
ALUA = bfc00298, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         167 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0029c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000a7, readdata = xxxxxxxx
ALUA = bfc0029c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         167 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000a7, readdata = xxxxxxxx
ALUA = bfc0029c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         168 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000000a7, readdata = xxxxxxxx
ALUA = bfc002a0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000a8, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         168 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000a8, readdata = xxxxxxxx
ALUA = bfc002a0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         169 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc002a4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000a9, readdata = xxxxxxxx
ALUA = bfc002a4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         169 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000a9, readdata = xxxxxxxx
ALUA = bfc002a4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         170 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000000a9, readdata = xxxxxxxx
ALUA = bfc002a8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000aa, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         170 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000aa, readdata = xxxxxxxx
ALUA = bfc002a8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         171 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc002ac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000ab, readdata = xxxxxxxx
ALUA = bfc002ac, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         171 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000ab, readdata = xxxxxxxx
ALUA = bfc002ac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         172 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000000ab, readdata = xxxxxxxx
ALUA = bfc002b0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000ac, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         172 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000ac, readdata = xxxxxxxx
ALUA = bfc002b0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         173 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc002b4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000ad, readdata = xxxxxxxx
ALUA = bfc002b4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         173 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000ad, readdata = xxxxxxxx
ALUA = bfc002b4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         174 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000000ad, readdata = xxxxxxxx
ALUA = bfc002b8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000ae, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         174 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000ae, readdata = xxxxxxxx
ALUA = bfc002b8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         175 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc002bc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000af, readdata = xxxxxxxx
ALUA = bfc002bc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         175 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000af, readdata = xxxxxxxx
ALUA = bfc002bc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         176 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000000af, readdata = xxxxxxxx
ALUA = bfc002c0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000b0, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         176 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000b0, readdata = xxxxxxxx
ALUA = bfc002c0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         177 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc002c4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000b1, readdata = xxxxxxxx
ALUA = bfc002c4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         177 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000b1, readdata = xxxxxxxx
ALUA = bfc002c4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         178 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000000b1, readdata = xxxxxxxx
ALUA = bfc002c8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000b2, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         178 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000b2, readdata = xxxxxxxx
ALUA = bfc002c8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         179 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc002cc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000b3, readdata = xxxxxxxx
ALUA = bfc002cc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         179 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000b3, readdata = xxxxxxxx
ALUA = bfc002cc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         180 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000000b3, readdata = xxxxxxxx
ALUA = bfc002d0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000b4, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         180 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000b4, readdata = xxxxxxxx
ALUA = bfc002d0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         181 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc002d4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000b5, readdata = xxxxxxxx
ALUA = bfc002d4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         181 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000b5, readdata = xxxxxxxx
ALUA = bfc002d4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         182 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000000b5, readdata = xxxxxxxx
ALUA = bfc002d8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000b6, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         182 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000b6, readdata = xxxxxxxx
ALUA = bfc002d8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         183 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc002dc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000b7, readdata = xxxxxxxx
ALUA = bfc002dc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         183 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000b7, readdata = xxxxxxxx
ALUA = bfc002dc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         184 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000000b7, readdata = xxxxxxxx
ALUA = bfc002e0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000b8, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         184 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000b8, readdata = xxxxxxxx
ALUA = bfc002e0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         185 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc002e4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000b9, readdata = xxxxxxxx
ALUA = bfc002e4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         185 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000b9, readdata = xxxxxxxx
ALUA = bfc002e4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         186 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000000b9, readdata = xxxxxxxx
ALUA = bfc002e8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000ba, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         186 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000ba, readdata = xxxxxxxx
ALUA = bfc002e8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         187 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc002ec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000bb, readdata = xxxxxxxx
ALUA = bfc002ec, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         187 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000bb, readdata = xxxxxxxx
ALUA = bfc002ec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         188 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000000bb, readdata = xxxxxxxx
ALUA = bfc002f0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000bc, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         188 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000bc, readdata = xxxxxxxx
ALUA = bfc002f0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         189 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc002f4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000bd, readdata = xxxxxxxx
ALUA = bfc002f4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         189 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000bd, readdata = xxxxxxxx
ALUA = bfc002f4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         190 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000000bd, readdata = xxxxxxxx
ALUA = bfc002f8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000be, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         190 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000be, readdata = xxxxxxxx
ALUA = bfc002f8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         191 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc002fc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000bf, readdata = xxxxxxxx
ALUA = bfc002fc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         191 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000bf, readdata = xxxxxxxx
ALUA = bfc002fc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         192 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000000bf, readdata = xxxxxxxx
ALUA = bfc00300, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000c0, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         192 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000c0, readdata = xxxxxxxx
ALUA = bfc00300, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         193 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00304, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000c1, readdata = xxxxxxxx
ALUA = bfc00304, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         193 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000c1, readdata = xxxxxxxx
ALUA = bfc00304, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         194 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000000c1, readdata = xxxxxxxx
ALUA = bfc00308, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000c2, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         194 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000c2, readdata = xxxxxxxx
ALUA = bfc00308, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         195 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0030c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000c3, readdata = xxxxxxxx
ALUA = bfc0030c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         195 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000c3, readdata = xxxxxxxx
ALUA = bfc0030c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         196 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000000c3, readdata = xxxxxxxx
ALUA = bfc00310, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000c4, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         196 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000c4, readdata = xxxxxxxx
ALUA = bfc00310, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         197 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00314, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000c5, readdata = xxxxxxxx
ALUA = bfc00314, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         197 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000c5, readdata = xxxxxxxx
ALUA = bfc00314, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         198 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000000c5, readdata = xxxxxxxx
ALUA = bfc00318, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000c6, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         198 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000c6, readdata = xxxxxxxx
ALUA = bfc00318, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         199 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0031c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000c7, readdata = xxxxxxxx
ALUA = bfc0031c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         199 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000c7, readdata = xxxxxxxx
ALUA = bfc0031c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         200 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000000c7, readdata = xxxxxxxx
ALUA = bfc00320, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000c8, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         200 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000c8, readdata = xxxxxxxx
ALUA = bfc00320, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         201 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00324, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000c9, readdata = xxxxxxxx
ALUA = bfc00324, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         201 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000c9, readdata = xxxxxxxx
ALUA = bfc00324, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         202 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000000c9, readdata = xxxxxxxx
ALUA = bfc00328, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000ca, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         202 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000ca, readdata = xxxxxxxx
ALUA = bfc00328, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         203 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0032c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000cb, readdata = xxxxxxxx
ALUA = bfc0032c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         203 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000cb, readdata = xxxxxxxx
ALUA = bfc0032c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         204 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000000cb, readdata = xxxxxxxx
ALUA = bfc00330, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000cc, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         204 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000cc, readdata = xxxxxxxx
ALUA = bfc00330, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         205 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00334, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000cd, readdata = xxxxxxxx
ALUA = bfc00334, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         205 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000cd, readdata = xxxxxxxx
ALUA = bfc00334, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         206 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000000cd, readdata = xxxxxxxx
ALUA = bfc00338, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000ce, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         206 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000ce, readdata = xxxxxxxx
ALUA = bfc00338, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         207 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0033c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000cf, readdata = xxxxxxxx
ALUA = bfc0033c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         207 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000cf, readdata = xxxxxxxx
ALUA = bfc0033c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         208 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000000cf, readdata = xxxxxxxx
ALUA = bfc00340, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000d0, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         208 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000d0, readdata = xxxxxxxx
ALUA = bfc00340, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         209 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00344, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000d1, readdata = xxxxxxxx
ALUA = bfc00344, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         209 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000d1, readdata = xxxxxxxx
ALUA = bfc00344, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         210 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000000d1, readdata = xxxxxxxx
ALUA = bfc00348, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000d2, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         210 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000d2, readdata = xxxxxxxx
ALUA = bfc00348, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         211 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0034c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000d3, readdata = xxxxxxxx
ALUA = bfc0034c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         211 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000d3, readdata = xxxxxxxx
ALUA = bfc0034c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         212 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000000d3, readdata = xxxxxxxx
ALUA = bfc00350, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000d4, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         212 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000d4, readdata = xxxxxxxx
ALUA = bfc00350, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         213 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00354, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000d5, readdata = xxxxxxxx
ALUA = bfc00354, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         213 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000d5, readdata = xxxxxxxx
ALUA = bfc00354, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         214 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000000d5, readdata = xxxxxxxx
ALUA = bfc00358, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000d6, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         214 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000d6, readdata = xxxxxxxx
ALUA = bfc00358, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         215 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0035c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000d7, readdata = xxxxxxxx
ALUA = bfc0035c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         215 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000d7, readdata = xxxxxxxx
ALUA = bfc0035c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         216 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000000d7, readdata = xxxxxxxx
ALUA = bfc00360, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000d8, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         216 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000d8, readdata = xxxxxxxx
ALUA = bfc00360, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         217 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00364, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000d9, readdata = xxxxxxxx
ALUA = bfc00364, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         217 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000d9, readdata = xxxxxxxx
ALUA = bfc00364, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         218 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000000d9, readdata = xxxxxxxx
ALUA = bfc00368, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000da, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         218 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000da, readdata = xxxxxxxx
ALUA = bfc00368, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         219 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0036c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000db, readdata = xxxxxxxx
ALUA = bfc0036c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         219 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000db, readdata = xxxxxxxx
ALUA = bfc0036c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         220 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000000db, readdata = xxxxxxxx
ALUA = bfc00370, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000dc, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         220 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000dc, readdata = xxxxxxxx
ALUA = bfc00370, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         221 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00374, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000dd, readdata = xxxxxxxx
ALUA = bfc00374, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         221 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000dd, readdata = xxxxxxxx
ALUA = bfc00374, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         222 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000000dd, readdata = xxxxxxxx
ALUA = bfc00378, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000de, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         222 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000de, readdata = xxxxxxxx
ALUA = bfc00378, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         223 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0037c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000df, readdata = xxxxxxxx
ALUA = bfc0037c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         223 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000df, readdata = xxxxxxxx
ALUA = bfc0037c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         224 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000000df, readdata = xxxxxxxx
ALUA = bfc00380, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000e0, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         224 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000e0, readdata = xxxxxxxx
ALUA = bfc00380, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         225 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00384, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000e1, readdata = xxxxxxxx
ALUA = bfc00384, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         225 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000e1, readdata = xxxxxxxx
ALUA = bfc00384, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         226 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000000e1, readdata = xxxxxxxx
ALUA = bfc00388, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000e2, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         226 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000e2, readdata = xxxxxxxx
ALUA = bfc00388, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         227 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0038c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000e3, readdata = xxxxxxxx
ALUA = bfc0038c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         227 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000e3, readdata = xxxxxxxx
ALUA = bfc0038c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         228 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000000e3, readdata = xxxxxxxx
ALUA = bfc00390, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000e4, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         228 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000e4, readdata = xxxxxxxx
ALUA = bfc00390, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         229 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00394, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000e5, readdata = xxxxxxxx
ALUA = bfc00394, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         229 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000e5, readdata = xxxxxxxx
ALUA = bfc00394, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         230 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000000e5, readdata = xxxxxxxx
ALUA = bfc00398, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000e6, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         230 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000e6, readdata = xxxxxxxx
ALUA = bfc00398, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         231 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0039c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000e7, readdata = xxxxxxxx
ALUA = bfc0039c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         231 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000e7, readdata = xxxxxxxx
ALUA = bfc0039c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         232 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000000e7, readdata = xxxxxxxx
ALUA = bfc003a0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000e8, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         232 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000e8, readdata = xxxxxxxx
ALUA = bfc003a0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         233 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc003a4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000e9, readdata = xxxxxxxx
ALUA = bfc003a4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         233 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000e9, readdata = xxxxxxxx
ALUA = bfc003a4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         234 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000000e9, readdata = xxxxxxxx
ALUA = bfc003a8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000ea, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         234 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000ea, readdata = xxxxxxxx
ALUA = bfc003a8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         235 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc003ac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000eb, readdata = xxxxxxxx
ALUA = bfc003ac, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         235 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000eb, readdata = xxxxxxxx
ALUA = bfc003ac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         236 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000000eb, readdata = xxxxxxxx
ALUA = bfc003b0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000ec, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         236 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000ec, readdata = xxxxxxxx
ALUA = bfc003b0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         237 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc003b4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000ed, readdata = xxxxxxxx
ALUA = bfc003b4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         237 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000ed, readdata = xxxxxxxx
ALUA = bfc003b4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         238 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000000ed, readdata = xxxxxxxx
ALUA = bfc003b8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000ee, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         238 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000ee, readdata = xxxxxxxx
ALUA = bfc003b8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         239 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc003bc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000ef, readdata = xxxxxxxx
ALUA = bfc003bc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         239 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000ef, readdata = xxxxxxxx
ALUA = bfc003bc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         240 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000000ef, readdata = xxxxxxxx
ALUA = bfc003c0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000f0, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         240 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000f0, readdata = xxxxxxxx
ALUA = bfc003c0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         241 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc003c4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000f1, readdata = xxxxxxxx
ALUA = bfc003c4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         241 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000f1, readdata = xxxxxxxx
ALUA = bfc003c4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         242 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000000f1, readdata = xxxxxxxx
ALUA = bfc003c8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000f2, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         242 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000f2, readdata = xxxxxxxx
ALUA = bfc003c8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         243 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc003cc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000f3, readdata = xxxxxxxx
ALUA = bfc003cc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         243 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000f3, readdata = xxxxxxxx
ALUA = bfc003cc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         244 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000000f3, readdata = xxxxxxxx
ALUA = bfc003d0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000f4, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         244 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000f4, readdata = xxxxxxxx
ALUA = bfc003d0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         245 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc003d4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000f5, readdata = xxxxxxxx
ALUA = bfc003d4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         245 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000f5, readdata = xxxxxxxx
ALUA = bfc003d4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         246 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000000f5, readdata = xxxxxxxx
ALUA = bfc003d8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000f6, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         246 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000f6, readdata = xxxxxxxx
ALUA = bfc003d8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         247 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc003dc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000f7, readdata = xxxxxxxx
ALUA = bfc003dc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         247 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000f7, readdata = xxxxxxxx
ALUA = bfc003dc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         248 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000000f7, readdata = xxxxxxxx
ALUA = bfc003e0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000f8, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         248 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000f8, readdata = xxxxxxxx
ALUA = bfc003e0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         249 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc003e4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000f9, readdata = xxxxxxxx
ALUA = bfc003e4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         249 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000f9, readdata = xxxxxxxx
ALUA = bfc003e4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         250 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000000f9, readdata = xxxxxxxx
ALUA = bfc003e8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000fa, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         250 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000fa, readdata = xxxxxxxx
ALUA = bfc003e8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         251 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc003ec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000fb, readdata = xxxxxxxx
ALUA = bfc003ec, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         251 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000fb, readdata = xxxxxxxx
ALUA = bfc003ec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         252 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000000fb, readdata = xxxxxxxx
ALUA = bfc003f0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000fc, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         252 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000fc, readdata = xxxxxxxx
ALUA = bfc003f0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         253 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc003f4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000fd, readdata = xxxxxxxx
ALUA = bfc003f4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         253 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000fd, readdata = xxxxxxxx
ALUA = bfc003f4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         254 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000000fd, readdata = xxxxxxxx
ALUA = bfc003f8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000fe, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         254 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000fe, readdata = xxxxxxxx
ALUA = bfc003f8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         255 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc003fc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000000ff, readdata = xxxxxxxx
ALUA = bfc003fc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         255 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000000ff, readdata = xxxxxxxx
ALUA = bfc003fc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         256 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000000ff, readdata = xxxxxxxx
ALUA = bfc00400, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000100, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         256 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000100, readdata = xxxxxxxx
ALUA = bfc00400, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         257 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00404, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000101, readdata = xxxxxxxx
ALUA = bfc00404, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         257 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000101, readdata = xxxxxxxx
ALUA = bfc00404, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         258 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000101, readdata = xxxxxxxx
ALUA = bfc00408, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000102, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         258 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000102, readdata = xxxxxxxx
ALUA = bfc00408, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         259 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0040c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000103, readdata = xxxxxxxx
ALUA = bfc0040c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         259 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000103, readdata = xxxxxxxx
ALUA = bfc0040c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         260 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000103, readdata = xxxxxxxx
ALUA = bfc00410, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000104, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         260 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000104, readdata = xxxxxxxx
ALUA = bfc00410, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         261 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00414, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000105, readdata = xxxxxxxx
ALUA = bfc00414, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         261 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000105, readdata = xxxxxxxx
ALUA = bfc00414, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         262 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000105, readdata = xxxxxxxx
ALUA = bfc00418, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000106, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         262 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000106, readdata = xxxxxxxx
ALUA = bfc00418, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         263 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0041c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000107, readdata = xxxxxxxx
ALUA = bfc0041c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         263 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000107, readdata = xxxxxxxx
ALUA = bfc0041c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         264 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000107, readdata = xxxxxxxx
ALUA = bfc00420, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000108, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         264 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000108, readdata = xxxxxxxx
ALUA = bfc00420, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         265 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00424, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000109, readdata = xxxxxxxx
ALUA = bfc00424, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         265 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000109, readdata = xxxxxxxx
ALUA = bfc00424, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         266 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000109, readdata = xxxxxxxx
ALUA = bfc00428, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000010a, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         266 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000010a, readdata = xxxxxxxx
ALUA = bfc00428, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         267 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0042c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000010b, readdata = xxxxxxxx
ALUA = bfc0042c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         267 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000010b, readdata = xxxxxxxx
ALUA = bfc0042c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         268 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000010b, readdata = xxxxxxxx
ALUA = bfc00430, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000010c, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         268 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000010c, readdata = xxxxxxxx
ALUA = bfc00430, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         269 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00434, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000010d, readdata = xxxxxxxx
ALUA = bfc00434, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         269 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000010d, readdata = xxxxxxxx
ALUA = bfc00434, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         270 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000010d, readdata = xxxxxxxx
ALUA = bfc00438, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000010e, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         270 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000010e, readdata = xxxxxxxx
ALUA = bfc00438, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         271 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0043c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000010f, readdata = xxxxxxxx
ALUA = bfc0043c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         271 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000010f, readdata = xxxxxxxx
ALUA = bfc0043c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         272 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000010f, readdata = xxxxxxxx
ALUA = bfc00440, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000110, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         272 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000110, readdata = xxxxxxxx
ALUA = bfc00440, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         273 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00444, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000111, readdata = xxxxxxxx
ALUA = bfc00444, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         273 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000111, readdata = xxxxxxxx
ALUA = bfc00444, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         274 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000111, readdata = xxxxxxxx
ALUA = bfc00448, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000112, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         274 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000112, readdata = xxxxxxxx
ALUA = bfc00448, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         275 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0044c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000113, readdata = xxxxxxxx
ALUA = bfc0044c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         275 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000113, readdata = xxxxxxxx
ALUA = bfc0044c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         276 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000113, readdata = xxxxxxxx
ALUA = bfc00450, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000114, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         276 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000114, readdata = xxxxxxxx
ALUA = bfc00450, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         277 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00454, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000115, readdata = xxxxxxxx
ALUA = bfc00454, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         277 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000115, readdata = xxxxxxxx
ALUA = bfc00454, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         278 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000115, readdata = xxxxxxxx
ALUA = bfc00458, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000116, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         278 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000116, readdata = xxxxxxxx
ALUA = bfc00458, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         279 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0045c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000117, readdata = xxxxxxxx
ALUA = bfc0045c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         279 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000117, readdata = xxxxxxxx
ALUA = bfc0045c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         280 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000117, readdata = xxxxxxxx
ALUA = bfc00460, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000118, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         280 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000118, readdata = xxxxxxxx
ALUA = bfc00460, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         281 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00464, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000119, readdata = xxxxxxxx
ALUA = bfc00464, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         281 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000119, readdata = xxxxxxxx
ALUA = bfc00464, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         282 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000119, readdata = xxxxxxxx
ALUA = bfc00468, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000011a, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         282 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000011a, readdata = xxxxxxxx
ALUA = bfc00468, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         283 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0046c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000011b, readdata = xxxxxxxx
ALUA = bfc0046c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         283 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000011b, readdata = xxxxxxxx
ALUA = bfc0046c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         284 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000011b, readdata = xxxxxxxx
ALUA = bfc00470, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000011c, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         284 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000011c, readdata = xxxxxxxx
ALUA = bfc00470, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         285 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00474, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000011d, readdata = xxxxxxxx
ALUA = bfc00474, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         285 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000011d, readdata = xxxxxxxx
ALUA = bfc00474, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         286 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000011d, readdata = xxxxxxxx
ALUA = bfc00478, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000011e, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         286 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000011e, readdata = xxxxxxxx
ALUA = bfc00478, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         287 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0047c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000011f, readdata = xxxxxxxx
ALUA = bfc0047c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         287 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000011f, readdata = xxxxxxxx
ALUA = bfc0047c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         288 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000011f, readdata = xxxxxxxx
ALUA = bfc00480, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000120, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         288 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000120, readdata = xxxxxxxx
ALUA = bfc00480, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         289 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00484, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000121, readdata = xxxxxxxx
ALUA = bfc00484, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         289 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000121, readdata = xxxxxxxx
ALUA = bfc00484, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         290 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000121, readdata = xxxxxxxx
ALUA = bfc00488, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000122, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         290 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000122, readdata = xxxxxxxx
ALUA = bfc00488, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         291 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0048c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000123, readdata = xxxxxxxx
ALUA = bfc0048c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         291 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000123, readdata = xxxxxxxx
ALUA = bfc0048c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         292 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000123, readdata = xxxxxxxx
ALUA = bfc00490, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000124, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         292 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000124, readdata = xxxxxxxx
ALUA = bfc00490, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         293 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00494, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000125, readdata = xxxxxxxx
ALUA = bfc00494, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         293 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000125, readdata = xxxxxxxx
ALUA = bfc00494, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         294 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000125, readdata = xxxxxxxx
ALUA = bfc00498, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000126, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         294 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000126, readdata = xxxxxxxx
ALUA = bfc00498, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         295 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0049c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000127, readdata = xxxxxxxx
ALUA = bfc0049c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         295 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000127, readdata = xxxxxxxx
ALUA = bfc0049c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         296 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000127, readdata = xxxxxxxx
ALUA = bfc004a0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000128, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         296 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000128, readdata = xxxxxxxx
ALUA = bfc004a0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         297 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc004a4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000129, readdata = xxxxxxxx
ALUA = bfc004a4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         297 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000129, readdata = xxxxxxxx
ALUA = bfc004a4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         298 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000129, readdata = xxxxxxxx
ALUA = bfc004a8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000012a, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         298 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000012a, readdata = xxxxxxxx
ALUA = bfc004a8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         299 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc004ac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000012b, readdata = xxxxxxxx
ALUA = bfc004ac, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         299 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000012b, readdata = xxxxxxxx
ALUA = bfc004ac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         300 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000012b, readdata = xxxxxxxx
ALUA = bfc004b0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000012c, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         300 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000012c, readdata = xxxxxxxx
ALUA = bfc004b0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         301 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc004b4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000012d, readdata = xxxxxxxx
ALUA = bfc004b4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         301 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000012d, readdata = xxxxxxxx
ALUA = bfc004b4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         302 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000012d, readdata = xxxxxxxx
ALUA = bfc004b8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000012e, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         302 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000012e, readdata = xxxxxxxx
ALUA = bfc004b8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         303 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc004bc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000012f, readdata = xxxxxxxx
ALUA = bfc004bc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         303 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000012f, readdata = xxxxxxxx
ALUA = bfc004bc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         304 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000012f, readdata = xxxxxxxx
ALUA = bfc004c0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000130, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         304 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000130, readdata = xxxxxxxx
ALUA = bfc004c0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         305 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc004c4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000131, readdata = xxxxxxxx
ALUA = bfc004c4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         305 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000131, readdata = xxxxxxxx
ALUA = bfc004c4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         306 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000131, readdata = xxxxxxxx
ALUA = bfc004c8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000132, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         306 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000132, readdata = xxxxxxxx
ALUA = bfc004c8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         307 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc004cc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000133, readdata = xxxxxxxx
ALUA = bfc004cc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         307 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000133, readdata = xxxxxxxx
ALUA = bfc004cc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         308 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000133, readdata = xxxxxxxx
ALUA = bfc004d0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000134, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         308 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000134, readdata = xxxxxxxx
ALUA = bfc004d0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         309 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc004d4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000135, readdata = xxxxxxxx
ALUA = bfc004d4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         309 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000135, readdata = xxxxxxxx
ALUA = bfc004d4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         310 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000135, readdata = xxxxxxxx
ALUA = bfc004d8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000136, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         310 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000136, readdata = xxxxxxxx
ALUA = bfc004d8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         311 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc004dc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000137, readdata = xxxxxxxx
ALUA = bfc004dc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         311 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000137, readdata = xxxxxxxx
ALUA = bfc004dc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         312 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000137, readdata = xxxxxxxx
ALUA = bfc004e0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000138, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         312 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000138, readdata = xxxxxxxx
ALUA = bfc004e0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         313 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc004e4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000139, readdata = xxxxxxxx
ALUA = bfc004e4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         313 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000139, readdata = xxxxxxxx
ALUA = bfc004e4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         314 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000139, readdata = xxxxxxxx
ALUA = bfc004e8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000013a, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         314 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000013a, readdata = xxxxxxxx
ALUA = bfc004e8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         315 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc004ec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000013b, readdata = xxxxxxxx
ALUA = bfc004ec, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         315 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000013b, readdata = xxxxxxxx
ALUA = bfc004ec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         316 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000013b, readdata = xxxxxxxx
ALUA = bfc004f0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000013c, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         316 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000013c, readdata = xxxxxxxx
ALUA = bfc004f0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         317 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc004f4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000013d, readdata = xxxxxxxx
ALUA = bfc004f4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         317 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000013d, readdata = xxxxxxxx
ALUA = bfc004f4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         318 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000013d, readdata = xxxxxxxx
ALUA = bfc004f8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000013e, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         318 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000013e, readdata = xxxxxxxx
ALUA = bfc004f8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         319 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc004fc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000013f, readdata = xxxxxxxx
ALUA = bfc004fc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         319 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000013f, readdata = xxxxxxxx
ALUA = bfc004fc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         320 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000013f, readdata = xxxxxxxx
ALUA = bfc00500, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000140, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         320 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000140, readdata = xxxxxxxx
ALUA = bfc00500, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         321 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00504, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000141, readdata = xxxxxxxx
ALUA = bfc00504, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         321 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000141, readdata = xxxxxxxx
ALUA = bfc00504, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         322 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000141, readdata = xxxxxxxx
ALUA = bfc00508, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000142, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         322 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000142, readdata = xxxxxxxx
ALUA = bfc00508, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         323 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0050c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000143, readdata = xxxxxxxx
ALUA = bfc0050c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         323 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000143, readdata = xxxxxxxx
ALUA = bfc0050c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         324 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000143, readdata = xxxxxxxx
ALUA = bfc00510, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000144, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         324 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000144, readdata = xxxxxxxx
ALUA = bfc00510, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         325 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00514, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000145, readdata = xxxxxxxx
ALUA = bfc00514, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         325 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000145, readdata = xxxxxxxx
ALUA = bfc00514, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         326 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000145, readdata = xxxxxxxx
ALUA = bfc00518, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000146, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         326 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000146, readdata = xxxxxxxx
ALUA = bfc00518, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         327 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0051c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000147, readdata = xxxxxxxx
ALUA = bfc0051c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         327 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000147, readdata = xxxxxxxx
ALUA = bfc0051c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         328 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000147, readdata = xxxxxxxx
ALUA = bfc00520, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000148, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         328 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000148, readdata = xxxxxxxx
ALUA = bfc00520, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         329 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00524, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000149, readdata = xxxxxxxx
ALUA = bfc00524, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         329 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000149, readdata = xxxxxxxx
ALUA = bfc00524, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         330 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000149, readdata = xxxxxxxx
ALUA = bfc00528, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000014a, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         330 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000014a, readdata = xxxxxxxx
ALUA = bfc00528, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         331 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0052c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000014b, readdata = xxxxxxxx
ALUA = bfc0052c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         331 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000014b, readdata = xxxxxxxx
ALUA = bfc0052c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         332 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000014b, readdata = xxxxxxxx
ALUA = bfc00530, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000014c, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         332 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000014c, readdata = xxxxxxxx
ALUA = bfc00530, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         333 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00534, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000014d, readdata = xxxxxxxx
ALUA = bfc00534, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         333 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000014d, readdata = xxxxxxxx
ALUA = bfc00534, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         334 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000014d, readdata = xxxxxxxx
ALUA = bfc00538, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000014e, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         334 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000014e, readdata = xxxxxxxx
ALUA = bfc00538, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         335 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0053c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000014f, readdata = xxxxxxxx
ALUA = bfc0053c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         335 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000014f, readdata = xxxxxxxx
ALUA = bfc0053c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         336 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000014f, readdata = xxxxxxxx
ALUA = bfc00540, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000150, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         336 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000150, readdata = xxxxxxxx
ALUA = bfc00540, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         337 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00544, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000151, readdata = xxxxxxxx
ALUA = bfc00544, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         337 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000151, readdata = xxxxxxxx
ALUA = bfc00544, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         338 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000151, readdata = xxxxxxxx
ALUA = bfc00548, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000152, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         338 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000152, readdata = xxxxxxxx
ALUA = bfc00548, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         339 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0054c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000153, readdata = xxxxxxxx
ALUA = bfc0054c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         339 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000153, readdata = xxxxxxxx
ALUA = bfc0054c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         340 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000153, readdata = xxxxxxxx
ALUA = bfc00550, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000154, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         340 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000154, readdata = xxxxxxxx
ALUA = bfc00550, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         341 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00554, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000155, readdata = xxxxxxxx
ALUA = bfc00554, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         341 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000155, readdata = xxxxxxxx
ALUA = bfc00554, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         342 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000155, readdata = xxxxxxxx
ALUA = bfc00558, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000156, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         342 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000156, readdata = xxxxxxxx
ALUA = bfc00558, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         343 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0055c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000157, readdata = xxxxxxxx
ALUA = bfc0055c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         343 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000157, readdata = xxxxxxxx
ALUA = bfc0055c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         344 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000157, readdata = xxxxxxxx
ALUA = bfc00560, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000158, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         344 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000158, readdata = xxxxxxxx
ALUA = bfc00560, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         345 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00564, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000159, readdata = xxxxxxxx
ALUA = bfc00564, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         345 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000159, readdata = xxxxxxxx
ALUA = bfc00564, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         346 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000159, readdata = xxxxxxxx
ALUA = bfc00568, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000015a, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         346 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000015a, readdata = xxxxxxxx
ALUA = bfc00568, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         347 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0056c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000015b, readdata = xxxxxxxx
ALUA = bfc0056c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         347 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000015b, readdata = xxxxxxxx
ALUA = bfc0056c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         348 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000015b, readdata = xxxxxxxx
ALUA = bfc00570, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000015c, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         348 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000015c, readdata = xxxxxxxx
ALUA = bfc00570, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         349 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00574, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000015d, readdata = xxxxxxxx
ALUA = bfc00574, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         349 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000015d, readdata = xxxxxxxx
ALUA = bfc00574, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         350 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000015d, readdata = xxxxxxxx
ALUA = bfc00578, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000015e, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         350 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000015e, readdata = xxxxxxxx
ALUA = bfc00578, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         351 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0057c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000015f, readdata = xxxxxxxx
ALUA = bfc0057c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         351 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000015f, readdata = xxxxxxxx
ALUA = bfc0057c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         352 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000015f, readdata = xxxxxxxx
ALUA = bfc00580, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000160, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         352 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000160, readdata = xxxxxxxx
ALUA = bfc00580, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         353 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00584, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000161, readdata = xxxxxxxx
ALUA = bfc00584, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         353 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000161, readdata = xxxxxxxx
ALUA = bfc00584, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         354 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000161, readdata = xxxxxxxx
ALUA = bfc00588, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000162, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         354 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000162, readdata = xxxxxxxx
ALUA = bfc00588, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         355 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0058c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000163, readdata = xxxxxxxx
ALUA = bfc0058c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         355 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000163, readdata = xxxxxxxx
ALUA = bfc0058c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         356 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000163, readdata = xxxxxxxx
ALUA = bfc00590, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000164, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         356 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000164, readdata = xxxxxxxx
ALUA = bfc00590, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         357 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00594, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000165, readdata = xxxxxxxx
ALUA = bfc00594, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         357 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000165, readdata = xxxxxxxx
ALUA = bfc00594, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         358 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000165, readdata = xxxxxxxx
ALUA = bfc00598, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000166, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         358 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000166, readdata = xxxxxxxx
ALUA = bfc00598, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         359 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0059c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000167, readdata = xxxxxxxx
ALUA = bfc0059c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         359 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000167, readdata = xxxxxxxx
ALUA = bfc0059c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         360 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000167, readdata = xxxxxxxx
ALUA = bfc005a0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000168, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         360 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000168, readdata = xxxxxxxx
ALUA = bfc005a0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         361 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc005a4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000169, readdata = xxxxxxxx
ALUA = bfc005a4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         361 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000169, readdata = xxxxxxxx
ALUA = bfc005a4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         362 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000169, readdata = xxxxxxxx
ALUA = bfc005a8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000016a, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         362 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000016a, readdata = xxxxxxxx
ALUA = bfc005a8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         363 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc005ac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000016b, readdata = xxxxxxxx
ALUA = bfc005ac, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         363 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000016b, readdata = xxxxxxxx
ALUA = bfc005ac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         364 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000016b, readdata = xxxxxxxx
ALUA = bfc005b0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000016c, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         364 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000016c, readdata = xxxxxxxx
ALUA = bfc005b0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         365 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc005b4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000016d, readdata = xxxxxxxx
ALUA = bfc005b4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         365 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000016d, readdata = xxxxxxxx
ALUA = bfc005b4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         366 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000016d, readdata = xxxxxxxx
ALUA = bfc005b8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000016e, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         366 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000016e, readdata = xxxxxxxx
ALUA = bfc005b8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         367 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc005bc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000016f, readdata = xxxxxxxx
ALUA = bfc005bc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         367 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000016f, readdata = xxxxxxxx
ALUA = bfc005bc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         368 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000016f, readdata = xxxxxxxx
ALUA = bfc005c0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000170, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         368 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000170, readdata = xxxxxxxx
ALUA = bfc005c0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         369 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc005c4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000171, readdata = xxxxxxxx
ALUA = bfc005c4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         369 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000171, readdata = xxxxxxxx
ALUA = bfc005c4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         370 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000171, readdata = xxxxxxxx
ALUA = bfc005c8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000172, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         370 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000172, readdata = xxxxxxxx
ALUA = bfc005c8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         371 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc005cc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000173, readdata = xxxxxxxx
ALUA = bfc005cc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         371 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000173, readdata = xxxxxxxx
ALUA = bfc005cc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         372 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000173, readdata = xxxxxxxx
ALUA = bfc005d0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000174, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         372 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000174, readdata = xxxxxxxx
ALUA = bfc005d0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         373 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc005d4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000175, readdata = xxxxxxxx
ALUA = bfc005d4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         373 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000175, readdata = xxxxxxxx
ALUA = bfc005d4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         374 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000175, readdata = xxxxxxxx
ALUA = bfc005d8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000176, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         374 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000176, readdata = xxxxxxxx
ALUA = bfc005d8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         375 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc005dc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000177, readdata = xxxxxxxx
ALUA = bfc005dc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         375 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000177, readdata = xxxxxxxx
ALUA = bfc005dc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         376 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000177, readdata = xxxxxxxx
ALUA = bfc005e0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000178, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         376 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000178, readdata = xxxxxxxx
ALUA = bfc005e0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         377 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc005e4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000179, readdata = xxxxxxxx
ALUA = bfc005e4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         377 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000179, readdata = xxxxxxxx
ALUA = bfc005e4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         378 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000179, readdata = xxxxxxxx
ALUA = bfc005e8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000017a, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         378 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000017a, readdata = xxxxxxxx
ALUA = bfc005e8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         379 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc005ec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000017b, readdata = xxxxxxxx
ALUA = bfc005ec, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         379 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000017b, readdata = xxxxxxxx
ALUA = bfc005ec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         380 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000017b, readdata = xxxxxxxx
ALUA = bfc005f0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000017c, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         380 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000017c, readdata = xxxxxxxx
ALUA = bfc005f0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         381 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc005f4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000017d, readdata = xxxxxxxx
ALUA = bfc005f4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         381 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000017d, readdata = xxxxxxxx
ALUA = bfc005f4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         382 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000017d, readdata = xxxxxxxx
ALUA = bfc005f8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000017e, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         382 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000017e, readdata = xxxxxxxx
ALUA = bfc005f8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         383 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc005fc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000017f, readdata = xxxxxxxx
ALUA = bfc005fc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         383 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000017f, readdata = xxxxxxxx
ALUA = bfc005fc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         384 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000017f, readdata = xxxxxxxx
ALUA = bfc00600, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000180, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         384 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000180, readdata = xxxxxxxx
ALUA = bfc00600, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         385 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00604, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000181, readdata = xxxxxxxx
ALUA = bfc00604, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         385 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000181, readdata = xxxxxxxx
ALUA = bfc00604, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         386 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000181, readdata = xxxxxxxx
ALUA = bfc00608, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000182, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         386 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000182, readdata = xxxxxxxx
ALUA = bfc00608, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         387 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0060c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000183, readdata = xxxxxxxx
ALUA = bfc0060c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         387 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000183, readdata = xxxxxxxx
ALUA = bfc0060c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         388 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000183, readdata = xxxxxxxx
ALUA = bfc00610, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000184, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         388 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000184, readdata = xxxxxxxx
ALUA = bfc00610, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         389 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00614, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000185, readdata = xxxxxxxx
ALUA = bfc00614, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         389 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000185, readdata = xxxxxxxx
ALUA = bfc00614, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         390 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000185, readdata = xxxxxxxx
ALUA = bfc00618, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000186, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         390 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000186, readdata = xxxxxxxx
ALUA = bfc00618, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         391 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0061c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000187, readdata = xxxxxxxx
ALUA = bfc0061c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         391 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000187, readdata = xxxxxxxx
ALUA = bfc0061c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         392 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000187, readdata = xxxxxxxx
ALUA = bfc00620, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000188, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         392 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000188, readdata = xxxxxxxx
ALUA = bfc00620, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         393 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00624, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000189, readdata = xxxxxxxx
ALUA = bfc00624, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         393 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000189, readdata = xxxxxxxx
ALUA = bfc00624, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         394 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000189, readdata = xxxxxxxx
ALUA = bfc00628, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000018a, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         394 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000018a, readdata = xxxxxxxx
ALUA = bfc00628, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         395 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0062c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000018b, readdata = xxxxxxxx
ALUA = bfc0062c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         395 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000018b, readdata = xxxxxxxx
ALUA = bfc0062c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         396 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000018b, readdata = xxxxxxxx
ALUA = bfc00630, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000018c, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         396 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000018c, readdata = xxxxxxxx
ALUA = bfc00630, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         397 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00634, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000018d, readdata = xxxxxxxx
ALUA = bfc00634, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         397 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000018d, readdata = xxxxxxxx
ALUA = bfc00634, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         398 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000018d, readdata = xxxxxxxx
ALUA = bfc00638, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000018e, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         398 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000018e, readdata = xxxxxxxx
ALUA = bfc00638, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         399 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0063c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000018f, readdata = xxxxxxxx
ALUA = bfc0063c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         399 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000018f, readdata = xxxxxxxx
ALUA = bfc0063c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         400 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000018f, readdata = xxxxxxxx
ALUA = bfc00640, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000190, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         400 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000190, readdata = xxxxxxxx
ALUA = bfc00640, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         401 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00644, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000191, readdata = xxxxxxxx
ALUA = bfc00644, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         401 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000191, readdata = xxxxxxxx
ALUA = bfc00644, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         402 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000191, readdata = xxxxxxxx
ALUA = bfc00648, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000192, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         402 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000192, readdata = xxxxxxxx
ALUA = bfc00648, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         403 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0064c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000193, readdata = xxxxxxxx
ALUA = bfc0064c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         403 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000193, readdata = xxxxxxxx
ALUA = bfc0064c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         404 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000193, readdata = xxxxxxxx
ALUA = bfc00650, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000194, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         404 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000194, readdata = xxxxxxxx
ALUA = bfc00650, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         405 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00654, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000195, readdata = xxxxxxxx
ALUA = bfc00654, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         405 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000195, readdata = xxxxxxxx
ALUA = bfc00654, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         406 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000195, readdata = xxxxxxxx
ALUA = bfc00658, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000196, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         406 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000196, readdata = xxxxxxxx
ALUA = bfc00658, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         407 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0065c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000197, readdata = xxxxxxxx
ALUA = bfc0065c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         407 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000197, readdata = xxxxxxxx
ALUA = bfc0065c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         408 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000197, readdata = xxxxxxxx
ALUA = bfc00660, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000198, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         408 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000198, readdata = xxxxxxxx
ALUA = bfc00660, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         409 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00664, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000199, readdata = xxxxxxxx
ALUA = bfc00664, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         409 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000199, readdata = xxxxxxxx
ALUA = bfc00664, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         410 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000199, readdata = xxxxxxxx
ALUA = bfc00668, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000019a, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         410 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000019a, readdata = xxxxxxxx
ALUA = bfc00668, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         411 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0066c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000019b, readdata = xxxxxxxx
ALUA = bfc0066c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         411 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000019b, readdata = xxxxxxxx
ALUA = bfc0066c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         412 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000019b, readdata = xxxxxxxx
ALUA = bfc00670, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000019c, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         412 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000019c, readdata = xxxxxxxx
ALUA = bfc00670, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         413 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00674, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000019d, readdata = xxxxxxxx
ALUA = bfc00674, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         413 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000019d, readdata = xxxxxxxx
ALUA = bfc00674, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         414 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000019d, readdata = xxxxxxxx
ALUA = bfc00678, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000019e, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         414 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000019e, readdata = xxxxxxxx
ALUA = bfc00678, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         415 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0067c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000019f, readdata = xxxxxxxx
ALUA = bfc0067c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         415 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000019f, readdata = xxxxxxxx
ALUA = bfc0067c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         416 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000019f, readdata = xxxxxxxx
ALUA = bfc00680, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001a0, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         416 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001a0, readdata = xxxxxxxx
ALUA = bfc00680, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         417 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00684, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001a1, readdata = xxxxxxxx
ALUA = bfc00684, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         417 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001a1, readdata = xxxxxxxx
ALUA = bfc00684, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         418 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000001a1, readdata = xxxxxxxx
ALUA = bfc00688, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001a2, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         418 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001a2, readdata = xxxxxxxx
ALUA = bfc00688, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         419 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0068c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001a3, readdata = xxxxxxxx
ALUA = bfc0068c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         419 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001a3, readdata = xxxxxxxx
ALUA = bfc0068c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         420 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000001a3, readdata = xxxxxxxx
ALUA = bfc00690, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001a4, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         420 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001a4, readdata = xxxxxxxx
ALUA = bfc00690, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         421 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00694, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001a5, readdata = xxxxxxxx
ALUA = bfc00694, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         421 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001a5, readdata = xxxxxxxx
ALUA = bfc00694, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         422 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000001a5, readdata = xxxxxxxx
ALUA = bfc00698, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001a6, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         422 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001a6, readdata = xxxxxxxx
ALUA = bfc00698, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         423 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0069c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001a7, readdata = xxxxxxxx
ALUA = bfc0069c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         423 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001a7, readdata = xxxxxxxx
ALUA = bfc0069c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         424 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000001a7, readdata = xxxxxxxx
ALUA = bfc006a0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001a8, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         424 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001a8, readdata = xxxxxxxx
ALUA = bfc006a0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         425 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc006a4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001a9, readdata = xxxxxxxx
ALUA = bfc006a4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         425 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001a9, readdata = xxxxxxxx
ALUA = bfc006a4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         426 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000001a9, readdata = xxxxxxxx
ALUA = bfc006a8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001aa, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         426 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001aa, readdata = xxxxxxxx
ALUA = bfc006a8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         427 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc006ac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001ab, readdata = xxxxxxxx
ALUA = bfc006ac, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         427 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001ab, readdata = xxxxxxxx
ALUA = bfc006ac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         428 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000001ab, readdata = xxxxxxxx
ALUA = bfc006b0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001ac, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         428 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001ac, readdata = xxxxxxxx
ALUA = bfc006b0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         429 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc006b4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001ad, readdata = xxxxxxxx
ALUA = bfc006b4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         429 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001ad, readdata = xxxxxxxx
ALUA = bfc006b4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         430 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000001ad, readdata = xxxxxxxx
ALUA = bfc006b8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001ae, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         430 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001ae, readdata = xxxxxxxx
ALUA = bfc006b8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         431 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc006bc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001af, readdata = xxxxxxxx
ALUA = bfc006bc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         431 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001af, readdata = xxxxxxxx
ALUA = bfc006bc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         432 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000001af, readdata = xxxxxxxx
ALUA = bfc006c0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001b0, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         432 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001b0, readdata = xxxxxxxx
ALUA = bfc006c0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         433 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc006c4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001b1, readdata = xxxxxxxx
ALUA = bfc006c4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         433 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001b1, readdata = xxxxxxxx
ALUA = bfc006c4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         434 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000001b1, readdata = xxxxxxxx
ALUA = bfc006c8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001b2, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         434 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001b2, readdata = xxxxxxxx
ALUA = bfc006c8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         435 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc006cc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001b3, readdata = xxxxxxxx
ALUA = bfc006cc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         435 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001b3, readdata = xxxxxxxx
ALUA = bfc006cc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         436 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000001b3, readdata = xxxxxxxx
ALUA = bfc006d0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001b4, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         436 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001b4, readdata = xxxxxxxx
ALUA = bfc006d0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         437 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc006d4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001b5, readdata = xxxxxxxx
ALUA = bfc006d4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         437 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001b5, readdata = xxxxxxxx
ALUA = bfc006d4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         438 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000001b5, readdata = xxxxxxxx
ALUA = bfc006d8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001b6, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         438 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001b6, readdata = xxxxxxxx
ALUA = bfc006d8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         439 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc006dc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001b7, readdata = xxxxxxxx
ALUA = bfc006dc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         439 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001b7, readdata = xxxxxxxx
ALUA = bfc006dc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         440 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000001b7, readdata = xxxxxxxx
ALUA = bfc006e0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001b8, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         440 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001b8, readdata = xxxxxxxx
ALUA = bfc006e0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         441 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc006e4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001b9, readdata = xxxxxxxx
ALUA = bfc006e4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         441 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001b9, readdata = xxxxxxxx
ALUA = bfc006e4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         442 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000001b9, readdata = xxxxxxxx
ALUA = bfc006e8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001ba, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         442 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001ba, readdata = xxxxxxxx
ALUA = bfc006e8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         443 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc006ec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001bb, readdata = xxxxxxxx
ALUA = bfc006ec, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         443 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001bb, readdata = xxxxxxxx
ALUA = bfc006ec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         444 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000001bb, readdata = xxxxxxxx
ALUA = bfc006f0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001bc, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         444 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001bc, readdata = xxxxxxxx
ALUA = bfc006f0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         445 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc006f4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001bd, readdata = xxxxxxxx
ALUA = bfc006f4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         445 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001bd, readdata = xxxxxxxx
ALUA = bfc006f4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         446 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000001bd, readdata = xxxxxxxx
ALUA = bfc006f8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001be, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         446 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001be, readdata = xxxxxxxx
ALUA = bfc006f8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         447 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc006fc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001bf, readdata = xxxxxxxx
ALUA = bfc006fc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         447 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001bf, readdata = xxxxxxxx
ALUA = bfc006fc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         448 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000001bf, readdata = xxxxxxxx
ALUA = bfc00700, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001c0, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         448 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001c0, readdata = xxxxxxxx
ALUA = bfc00700, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         449 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00704, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001c1, readdata = xxxxxxxx
ALUA = bfc00704, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         449 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001c1, readdata = xxxxxxxx
ALUA = bfc00704, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         450 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000001c1, readdata = xxxxxxxx
ALUA = bfc00708, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001c2, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         450 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001c2, readdata = xxxxxxxx
ALUA = bfc00708, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         451 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0070c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001c3, readdata = xxxxxxxx
ALUA = bfc0070c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         451 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001c3, readdata = xxxxxxxx
ALUA = bfc0070c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         452 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000001c3, readdata = xxxxxxxx
ALUA = bfc00710, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001c4, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         452 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001c4, readdata = xxxxxxxx
ALUA = bfc00710, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         453 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00714, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001c5, readdata = xxxxxxxx
ALUA = bfc00714, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         453 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001c5, readdata = xxxxxxxx
ALUA = bfc00714, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         454 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000001c5, readdata = xxxxxxxx
ALUA = bfc00718, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001c6, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         454 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001c6, readdata = xxxxxxxx
ALUA = bfc00718, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         455 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0071c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001c7, readdata = xxxxxxxx
ALUA = bfc0071c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         455 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001c7, readdata = xxxxxxxx
ALUA = bfc0071c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         456 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000001c7, readdata = xxxxxxxx
ALUA = bfc00720, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001c8, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         456 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001c8, readdata = xxxxxxxx
ALUA = bfc00720, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         457 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00724, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001c9, readdata = xxxxxxxx
ALUA = bfc00724, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         457 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001c9, readdata = xxxxxxxx
ALUA = bfc00724, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         458 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000001c9, readdata = xxxxxxxx
ALUA = bfc00728, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001ca, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         458 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001ca, readdata = xxxxxxxx
ALUA = bfc00728, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         459 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0072c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001cb, readdata = xxxxxxxx
ALUA = bfc0072c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         459 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001cb, readdata = xxxxxxxx
ALUA = bfc0072c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         460 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000001cb, readdata = xxxxxxxx
ALUA = bfc00730, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001cc, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         460 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001cc, readdata = xxxxxxxx
ALUA = bfc00730, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         461 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00734, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001cd, readdata = xxxxxxxx
ALUA = bfc00734, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         461 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001cd, readdata = xxxxxxxx
ALUA = bfc00734, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         462 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000001cd, readdata = xxxxxxxx
ALUA = bfc00738, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001ce, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         462 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001ce, readdata = xxxxxxxx
ALUA = bfc00738, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         463 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0073c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001cf, readdata = xxxxxxxx
ALUA = bfc0073c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         463 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001cf, readdata = xxxxxxxx
ALUA = bfc0073c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         464 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000001cf, readdata = xxxxxxxx
ALUA = bfc00740, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001d0, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         464 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001d0, readdata = xxxxxxxx
ALUA = bfc00740, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         465 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00744, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001d1, readdata = xxxxxxxx
ALUA = bfc00744, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         465 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001d1, readdata = xxxxxxxx
ALUA = bfc00744, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         466 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000001d1, readdata = xxxxxxxx
ALUA = bfc00748, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001d2, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         466 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001d2, readdata = xxxxxxxx
ALUA = bfc00748, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         467 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0074c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001d3, readdata = xxxxxxxx
ALUA = bfc0074c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         467 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001d3, readdata = xxxxxxxx
ALUA = bfc0074c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         468 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000001d3, readdata = xxxxxxxx
ALUA = bfc00750, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001d4, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         468 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001d4, readdata = xxxxxxxx
ALUA = bfc00750, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         469 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00754, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001d5, readdata = xxxxxxxx
ALUA = bfc00754, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         469 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001d5, readdata = xxxxxxxx
ALUA = bfc00754, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         470 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000001d5, readdata = xxxxxxxx
ALUA = bfc00758, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001d6, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         470 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001d6, readdata = xxxxxxxx
ALUA = bfc00758, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         471 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0075c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001d7, readdata = xxxxxxxx
ALUA = bfc0075c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         471 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001d7, readdata = xxxxxxxx
ALUA = bfc0075c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         472 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000001d7, readdata = xxxxxxxx
ALUA = bfc00760, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001d8, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         472 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001d8, readdata = xxxxxxxx
ALUA = bfc00760, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         473 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00764, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001d9, readdata = xxxxxxxx
ALUA = bfc00764, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         473 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001d9, readdata = xxxxxxxx
ALUA = bfc00764, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         474 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000001d9, readdata = xxxxxxxx
ALUA = bfc00768, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001da, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         474 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001da, readdata = xxxxxxxx
ALUA = bfc00768, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         475 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0076c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001db, readdata = xxxxxxxx
ALUA = bfc0076c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         475 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001db, readdata = xxxxxxxx
ALUA = bfc0076c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         476 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000001db, readdata = xxxxxxxx
ALUA = bfc00770, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001dc, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         476 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001dc, readdata = xxxxxxxx
ALUA = bfc00770, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         477 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00774, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001dd, readdata = xxxxxxxx
ALUA = bfc00774, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         477 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001dd, readdata = xxxxxxxx
ALUA = bfc00774, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         478 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000001dd, readdata = xxxxxxxx
ALUA = bfc00778, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001de, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         478 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001de, readdata = xxxxxxxx
ALUA = bfc00778, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         479 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0077c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001df, readdata = xxxxxxxx
ALUA = bfc0077c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         479 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001df, readdata = xxxxxxxx
ALUA = bfc0077c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         480 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000001df, readdata = xxxxxxxx
ALUA = bfc00780, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001e0, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         480 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001e0, readdata = xxxxxxxx
ALUA = bfc00780, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         481 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00784, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001e1, readdata = xxxxxxxx
ALUA = bfc00784, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         481 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001e1, readdata = xxxxxxxx
ALUA = bfc00784, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         482 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000001e1, readdata = xxxxxxxx
ALUA = bfc00788, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001e2, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         482 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001e2, readdata = xxxxxxxx
ALUA = bfc00788, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         483 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0078c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001e3, readdata = xxxxxxxx
ALUA = bfc0078c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         483 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001e3, readdata = xxxxxxxx
ALUA = bfc0078c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         484 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000001e3, readdata = xxxxxxxx
ALUA = bfc00790, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001e4, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         484 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001e4, readdata = xxxxxxxx
ALUA = bfc00790, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         485 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00794, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001e5, readdata = xxxxxxxx
ALUA = bfc00794, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         485 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001e5, readdata = xxxxxxxx
ALUA = bfc00794, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         486 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000001e5, readdata = xxxxxxxx
ALUA = bfc00798, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001e6, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         486 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001e6, readdata = xxxxxxxx
ALUA = bfc00798, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         487 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0079c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001e7, readdata = xxxxxxxx
ALUA = bfc0079c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         487 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001e7, readdata = xxxxxxxx
ALUA = bfc0079c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         488 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000001e7, readdata = xxxxxxxx
ALUA = bfc007a0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001e8, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         488 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001e8, readdata = xxxxxxxx
ALUA = bfc007a0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         489 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc007a4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001e9, readdata = xxxxxxxx
ALUA = bfc007a4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         489 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001e9, readdata = xxxxxxxx
ALUA = bfc007a4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         490 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000001e9, readdata = xxxxxxxx
ALUA = bfc007a8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001ea, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         490 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001ea, readdata = xxxxxxxx
ALUA = bfc007a8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         491 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc007ac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001eb, readdata = xxxxxxxx
ALUA = bfc007ac, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         491 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001eb, readdata = xxxxxxxx
ALUA = bfc007ac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         492 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000001eb, readdata = xxxxxxxx
ALUA = bfc007b0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001ec, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         492 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001ec, readdata = xxxxxxxx
ALUA = bfc007b0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         493 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc007b4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001ed, readdata = xxxxxxxx
ALUA = bfc007b4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         493 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001ed, readdata = xxxxxxxx
ALUA = bfc007b4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         494 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000001ed, readdata = xxxxxxxx
ALUA = bfc007b8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001ee, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         494 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001ee, readdata = xxxxxxxx
ALUA = bfc007b8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         495 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc007bc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001ef, readdata = xxxxxxxx
ALUA = bfc007bc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         495 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001ef, readdata = xxxxxxxx
ALUA = bfc007bc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         496 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000001ef, readdata = xxxxxxxx
ALUA = bfc007c0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001f0, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         496 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001f0, readdata = xxxxxxxx
ALUA = bfc007c0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         497 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc007c4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001f1, readdata = xxxxxxxx
ALUA = bfc007c4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         497 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001f1, readdata = xxxxxxxx
ALUA = bfc007c4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         498 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000001f1, readdata = xxxxxxxx
ALUA = bfc007c8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001f2, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         498 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001f2, readdata = xxxxxxxx
ALUA = bfc007c8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         499 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc007cc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001f3, readdata = xxxxxxxx
ALUA = bfc007cc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         499 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001f3, readdata = xxxxxxxx
ALUA = bfc007cc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         500 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000001f3, readdata = xxxxxxxx
ALUA = bfc007d0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001f4, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         500 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001f4, readdata = xxxxxxxx
ALUA = bfc007d0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         501 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc007d4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001f5, readdata = xxxxxxxx
ALUA = bfc007d4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         501 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001f5, readdata = xxxxxxxx
ALUA = bfc007d4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         502 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000001f5, readdata = xxxxxxxx
ALUA = bfc007d8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001f6, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         502 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001f6, readdata = xxxxxxxx
ALUA = bfc007d8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         503 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc007dc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001f7, readdata = xxxxxxxx
ALUA = bfc007dc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         503 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001f7, readdata = xxxxxxxx
ALUA = bfc007dc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         504 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000001f7, readdata = xxxxxxxx
ALUA = bfc007e0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001f8, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         504 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001f8, readdata = xxxxxxxx
ALUA = bfc007e0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         505 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc007e4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001f9, readdata = xxxxxxxx
ALUA = bfc007e4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         505 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001f9, readdata = xxxxxxxx
ALUA = bfc007e4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         506 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000001f9, readdata = xxxxxxxx
ALUA = bfc007e8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001fa, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         506 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001fa, readdata = xxxxxxxx
ALUA = bfc007e8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         507 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc007ec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001fb, readdata = xxxxxxxx
ALUA = bfc007ec, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         507 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001fb, readdata = xxxxxxxx
ALUA = bfc007ec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         508 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000001fb, readdata = xxxxxxxx
ALUA = bfc007f0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001fc, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         508 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001fc, readdata = xxxxxxxx
ALUA = bfc007f0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         509 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc007f4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001fd, readdata = xxxxxxxx
ALUA = bfc007f4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         509 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001fd, readdata = xxxxxxxx
ALUA = bfc007f4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         510 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000001fd, readdata = xxxxxxxx
ALUA = bfc007f8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001fe, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         510 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001fe, readdata = xxxxxxxx
ALUA = bfc007f8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         511 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc007fc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000001ff, readdata = xxxxxxxx
ALUA = bfc007fc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         511 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000001ff, readdata = xxxxxxxx
ALUA = bfc007fc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         512 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000001ff, readdata = xxxxxxxx
ALUA = bfc00800, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000200, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         512 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000200, readdata = xxxxxxxx
ALUA = bfc00800, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         513 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00804, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000201, readdata = xxxxxxxx
ALUA = bfc00804, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         513 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000201, readdata = xxxxxxxx
ALUA = bfc00804, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         514 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000201, readdata = xxxxxxxx
ALUA = bfc00808, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000202, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         514 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000202, readdata = xxxxxxxx
ALUA = bfc00808, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         515 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0080c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000203, readdata = xxxxxxxx
ALUA = bfc0080c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         515 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000203, readdata = xxxxxxxx
ALUA = bfc0080c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         516 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000203, readdata = xxxxxxxx
ALUA = bfc00810, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000204, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         516 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000204, readdata = xxxxxxxx
ALUA = bfc00810, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         517 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00814, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000205, readdata = xxxxxxxx
ALUA = bfc00814, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         517 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000205, readdata = xxxxxxxx
ALUA = bfc00814, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         518 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000205, readdata = xxxxxxxx
ALUA = bfc00818, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000206, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         518 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000206, readdata = xxxxxxxx
ALUA = bfc00818, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         519 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0081c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000207, readdata = xxxxxxxx
ALUA = bfc0081c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         519 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000207, readdata = xxxxxxxx
ALUA = bfc0081c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         520 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000207, readdata = xxxxxxxx
ALUA = bfc00820, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000208, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         520 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000208, readdata = xxxxxxxx
ALUA = bfc00820, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         521 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00824, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000209, readdata = xxxxxxxx
ALUA = bfc00824, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         521 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000209, readdata = xxxxxxxx
ALUA = bfc00824, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         522 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000209, readdata = xxxxxxxx
ALUA = bfc00828, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000020a, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         522 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000020a, readdata = xxxxxxxx
ALUA = bfc00828, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         523 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0082c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000020b, readdata = xxxxxxxx
ALUA = bfc0082c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         523 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000020b, readdata = xxxxxxxx
ALUA = bfc0082c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         524 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000020b, readdata = xxxxxxxx
ALUA = bfc00830, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000020c, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         524 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000020c, readdata = xxxxxxxx
ALUA = bfc00830, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         525 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00834, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000020d, readdata = xxxxxxxx
ALUA = bfc00834, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         525 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000020d, readdata = xxxxxxxx
ALUA = bfc00834, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         526 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000020d, readdata = xxxxxxxx
ALUA = bfc00838, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000020e, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         526 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000020e, readdata = xxxxxxxx
ALUA = bfc00838, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         527 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0083c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000020f, readdata = xxxxxxxx
ALUA = bfc0083c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         527 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000020f, readdata = xxxxxxxx
ALUA = bfc0083c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         528 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000020f, readdata = xxxxxxxx
ALUA = bfc00840, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000210, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         528 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000210, readdata = xxxxxxxx
ALUA = bfc00840, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         529 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00844, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000211, readdata = xxxxxxxx
ALUA = bfc00844, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         529 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000211, readdata = xxxxxxxx
ALUA = bfc00844, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         530 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000211, readdata = xxxxxxxx
ALUA = bfc00848, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000212, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         530 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000212, readdata = xxxxxxxx
ALUA = bfc00848, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         531 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0084c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000213, readdata = xxxxxxxx
ALUA = bfc0084c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         531 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000213, readdata = xxxxxxxx
ALUA = bfc0084c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         532 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000213, readdata = xxxxxxxx
ALUA = bfc00850, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000214, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         532 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000214, readdata = xxxxxxxx
ALUA = bfc00850, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         533 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00854, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000215, readdata = xxxxxxxx
ALUA = bfc00854, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         533 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000215, readdata = xxxxxxxx
ALUA = bfc00854, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         534 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000215, readdata = xxxxxxxx
ALUA = bfc00858, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000216, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         534 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000216, readdata = xxxxxxxx
ALUA = bfc00858, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         535 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0085c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000217, readdata = xxxxxxxx
ALUA = bfc0085c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         535 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000217, readdata = xxxxxxxx
ALUA = bfc0085c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         536 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000217, readdata = xxxxxxxx
ALUA = bfc00860, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000218, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         536 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000218, readdata = xxxxxxxx
ALUA = bfc00860, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         537 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00864, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000219, readdata = xxxxxxxx
ALUA = bfc00864, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         537 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000219, readdata = xxxxxxxx
ALUA = bfc00864, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         538 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000219, readdata = xxxxxxxx
ALUA = bfc00868, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000021a, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         538 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000021a, readdata = xxxxxxxx
ALUA = bfc00868, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         539 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0086c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000021b, readdata = xxxxxxxx
ALUA = bfc0086c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         539 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000021b, readdata = xxxxxxxx
ALUA = bfc0086c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         540 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000021b, readdata = xxxxxxxx
ALUA = bfc00870, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000021c, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         540 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000021c, readdata = xxxxxxxx
ALUA = bfc00870, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         541 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00874, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000021d, readdata = xxxxxxxx
ALUA = bfc00874, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         541 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000021d, readdata = xxxxxxxx
ALUA = bfc00874, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         542 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000021d, readdata = xxxxxxxx
ALUA = bfc00878, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000021e, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         542 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000021e, readdata = xxxxxxxx
ALUA = bfc00878, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         543 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0087c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000021f, readdata = xxxxxxxx
ALUA = bfc0087c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         543 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000021f, readdata = xxxxxxxx
ALUA = bfc0087c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         544 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000021f, readdata = xxxxxxxx
ALUA = bfc00880, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000220, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         544 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000220, readdata = xxxxxxxx
ALUA = bfc00880, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         545 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00884, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000221, readdata = xxxxxxxx
ALUA = bfc00884, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         545 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000221, readdata = xxxxxxxx
ALUA = bfc00884, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         546 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000221, readdata = xxxxxxxx
ALUA = bfc00888, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000222, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         546 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000222, readdata = xxxxxxxx
ALUA = bfc00888, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         547 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0088c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000223, readdata = xxxxxxxx
ALUA = bfc0088c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         547 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000223, readdata = xxxxxxxx
ALUA = bfc0088c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         548 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000223, readdata = xxxxxxxx
ALUA = bfc00890, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000224, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         548 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000224, readdata = xxxxxxxx
ALUA = bfc00890, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         549 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00894, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000225, readdata = xxxxxxxx
ALUA = bfc00894, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         549 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000225, readdata = xxxxxxxx
ALUA = bfc00894, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         550 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000225, readdata = xxxxxxxx
ALUA = bfc00898, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000226, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         550 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000226, readdata = xxxxxxxx
ALUA = bfc00898, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         551 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0089c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000227, readdata = xxxxxxxx
ALUA = bfc0089c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         551 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000227, readdata = xxxxxxxx
ALUA = bfc0089c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         552 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000227, readdata = xxxxxxxx
ALUA = bfc008a0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000228, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         552 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000228, readdata = xxxxxxxx
ALUA = bfc008a0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         553 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc008a4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000229, readdata = xxxxxxxx
ALUA = bfc008a4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         553 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000229, readdata = xxxxxxxx
ALUA = bfc008a4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         554 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000229, readdata = xxxxxxxx
ALUA = bfc008a8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000022a, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         554 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000022a, readdata = xxxxxxxx
ALUA = bfc008a8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         555 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc008ac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000022b, readdata = xxxxxxxx
ALUA = bfc008ac, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         555 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000022b, readdata = xxxxxxxx
ALUA = bfc008ac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         556 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000022b, readdata = xxxxxxxx
ALUA = bfc008b0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000022c, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         556 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000022c, readdata = xxxxxxxx
ALUA = bfc008b0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         557 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc008b4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000022d, readdata = xxxxxxxx
ALUA = bfc008b4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         557 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000022d, readdata = xxxxxxxx
ALUA = bfc008b4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         558 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000022d, readdata = xxxxxxxx
ALUA = bfc008b8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000022e, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         558 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000022e, readdata = xxxxxxxx
ALUA = bfc008b8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         559 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc008bc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000022f, readdata = xxxxxxxx
ALUA = bfc008bc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         559 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000022f, readdata = xxxxxxxx
ALUA = bfc008bc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         560 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000022f, readdata = xxxxxxxx
ALUA = bfc008c0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000230, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         560 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000230, readdata = xxxxxxxx
ALUA = bfc008c0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         561 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc008c4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000231, readdata = xxxxxxxx
ALUA = bfc008c4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         561 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000231, readdata = xxxxxxxx
ALUA = bfc008c4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         562 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000231, readdata = xxxxxxxx
ALUA = bfc008c8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000232, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         562 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000232, readdata = xxxxxxxx
ALUA = bfc008c8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         563 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc008cc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000233, readdata = xxxxxxxx
ALUA = bfc008cc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         563 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000233, readdata = xxxxxxxx
ALUA = bfc008cc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         564 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000233, readdata = xxxxxxxx
ALUA = bfc008d0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000234, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         564 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000234, readdata = xxxxxxxx
ALUA = bfc008d0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         565 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc008d4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000235, readdata = xxxxxxxx
ALUA = bfc008d4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         565 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000235, readdata = xxxxxxxx
ALUA = bfc008d4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         566 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000235, readdata = xxxxxxxx
ALUA = bfc008d8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000236, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         566 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000236, readdata = xxxxxxxx
ALUA = bfc008d8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         567 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc008dc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000237, readdata = xxxxxxxx
ALUA = bfc008dc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         567 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000237, readdata = xxxxxxxx
ALUA = bfc008dc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         568 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000237, readdata = xxxxxxxx
ALUA = bfc008e0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000238, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         568 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000238, readdata = xxxxxxxx
ALUA = bfc008e0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         569 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc008e4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000239, readdata = xxxxxxxx
ALUA = bfc008e4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         569 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000239, readdata = xxxxxxxx
ALUA = bfc008e4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         570 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000239, readdata = xxxxxxxx
ALUA = bfc008e8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000023a, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         570 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000023a, readdata = xxxxxxxx
ALUA = bfc008e8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         571 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc008ec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000023b, readdata = xxxxxxxx
ALUA = bfc008ec, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         571 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000023b, readdata = xxxxxxxx
ALUA = bfc008ec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         572 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000023b, readdata = xxxxxxxx
ALUA = bfc008f0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000023c, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         572 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000023c, readdata = xxxxxxxx
ALUA = bfc008f0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         573 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc008f4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000023d, readdata = xxxxxxxx
ALUA = bfc008f4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         573 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000023d, readdata = xxxxxxxx
ALUA = bfc008f4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         574 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000023d, readdata = xxxxxxxx
ALUA = bfc008f8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000023e, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         574 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000023e, readdata = xxxxxxxx
ALUA = bfc008f8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         575 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc008fc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000023f, readdata = xxxxxxxx
ALUA = bfc008fc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         575 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000023f, readdata = xxxxxxxx
ALUA = bfc008fc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         576 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000023f, readdata = xxxxxxxx
ALUA = bfc00900, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000240, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         576 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000240, readdata = xxxxxxxx
ALUA = bfc00900, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         577 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00904, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000241, readdata = xxxxxxxx
ALUA = bfc00904, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         577 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000241, readdata = xxxxxxxx
ALUA = bfc00904, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         578 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000241, readdata = xxxxxxxx
ALUA = bfc00908, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000242, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         578 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000242, readdata = xxxxxxxx
ALUA = bfc00908, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         579 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0090c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000243, readdata = xxxxxxxx
ALUA = bfc0090c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         579 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000243, readdata = xxxxxxxx
ALUA = bfc0090c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         580 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000243, readdata = xxxxxxxx
ALUA = bfc00910, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000244, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         580 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000244, readdata = xxxxxxxx
ALUA = bfc00910, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         581 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00914, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000245, readdata = xxxxxxxx
ALUA = bfc00914, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         581 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000245, readdata = xxxxxxxx
ALUA = bfc00914, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         582 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000245, readdata = xxxxxxxx
ALUA = bfc00918, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000246, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         582 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000246, readdata = xxxxxxxx
ALUA = bfc00918, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         583 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0091c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000247, readdata = xxxxxxxx
ALUA = bfc0091c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         583 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000247, readdata = xxxxxxxx
ALUA = bfc0091c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         584 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000247, readdata = xxxxxxxx
ALUA = bfc00920, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000248, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         584 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000248, readdata = xxxxxxxx
ALUA = bfc00920, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         585 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00924, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000249, readdata = xxxxxxxx
ALUA = bfc00924, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         585 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000249, readdata = xxxxxxxx
ALUA = bfc00924, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         586 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000249, readdata = xxxxxxxx
ALUA = bfc00928, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000024a, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         586 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000024a, readdata = xxxxxxxx
ALUA = bfc00928, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         587 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0092c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000024b, readdata = xxxxxxxx
ALUA = bfc0092c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         587 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000024b, readdata = xxxxxxxx
ALUA = bfc0092c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         588 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000024b, readdata = xxxxxxxx
ALUA = bfc00930, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000024c, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         588 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000024c, readdata = xxxxxxxx
ALUA = bfc00930, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         589 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00934, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000024d, readdata = xxxxxxxx
ALUA = bfc00934, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         589 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000024d, readdata = xxxxxxxx
ALUA = bfc00934, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         590 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000024d, readdata = xxxxxxxx
ALUA = bfc00938, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000024e, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         590 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000024e, readdata = xxxxxxxx
ALUA = bfc00938, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         591 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0093c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000024f, readdata = xxxxxxxx
ALUA = bfc0093c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         591 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000024f, readdata = xxxxxxxx
ALUA = bfc0093c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         592 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000024f, readdata = xxxxxxxx
ALUA = bfc00940, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000250, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         592 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000250, readdata = xxxxxxxx
ALUA = bfc00940, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         593 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00944, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000251, readdata = xxxxxxxx
ALUA = bfc00944, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         593 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000251, readdata = xxxxxxxx
ALUA = bfc00944, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         594 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000251, readdata = xxxxxxxx
ALUA = bfc00948, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000252, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         594 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000252, readdata = xxxxxxxx
ALUA = bfc00948, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         595 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0094c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000253, readdata = xxxxxxxx
ALUA = bfc0094c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         595 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000253, readdata = xxxxxxxx
ALUA = bfc0094c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         596 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000253, readdata = xxxxxxxx
ALUA = bfc00950, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000254, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         596 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000254, readdata = xxxxxxxx
ALUA = bfc00950, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         597 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00954, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000255, readdata = xxxxxxxx
ALUA = bfc00954, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         597 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000255, readdata = xxxxxxxx
ALUA = bfc00954, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         598 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000255, readdata = xxxxxxxx
ALUA = bfc00958, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000256, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         598 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000256, readdata = xxxxxxxx
ALUA = bfc00958, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         599 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0095c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000257, readdata = xxxxxxxx
ALUA = bfc0095c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         599 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000257, readdata = xxxxxxxx
ALUA = bfc0095c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         600 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000257, readdata = xxxxxxxx
ALUA = bfc00960, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000258, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         600 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000258, readdata = xxxxxxxx
ALUA = bfc00960, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         601 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00964, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000259, readdata = xxxxxxxx
ALUA = bfc00964, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         601 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000259, readdata = xxxxxxxx
ALUA = bfc00964, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         602 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000259, readdata = xxxxxxxx
ALUA = bfc00968, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000025a, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         602 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000025a, readdata = xxxxxxxx
ALUA = bfc00968, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         603 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0096c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000025b, readdata = xxxxxxxx
ALUA = bfc0096c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         603 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000025b, readdata = xxxxxxxx
ALUA = bfc0096c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         604 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000025b, readdata = xxxxxxxx
ALUA = bfc00970, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000025c, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         604 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000025c, readdata = xxxxxxxx
ALUA = bfc00970, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         605 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00974, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000025d, readdata = xxxxxxxx
ALUA = bfc00974, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         605 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000025d, readdata = xxxxxxxx
ALUA = bfc00974, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         606 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000025d, readdata = xxxxxxxx
ALUA = bfc00978, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000025e, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         606 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000025e, readdata = xxxxxxxx
ALUA = bfc00978, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         607 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0097c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000025f, readdata = xxxxxxxx
ALUA = bfc0097c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         607 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000025f, readdata = xxxxxxxx
ALUA = bfc0097c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         608 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000025f, readdata = xxxxxxxx
ALUA = bfc00980, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000260, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         608 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000260, readdata = xxxxxxxx
ALUA = bfc00980, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         609 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00984, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000261, readdata = xxxxxxxx
ALUA = bfc00984, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         609 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000261, readdata = xxxxxxxx
ALUA = bfc00984, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         610 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000261, readdata = xxxxxxxx
ALUA = bfc00988, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000262, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         610 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000262, readdata = xxxxxxxx
ALUA = bfc00988, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         611 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0098c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000263, readdata = xxxxxxxx
ALUA = bfc0098c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         611 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000263, readdata = xxxxxxxx
ALUA = bfc0098c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         612 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000263, readdata = xxxxxxxx
ALUA = bfc00990, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000264, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         612 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000264, readdata = xxxxxxxx
ALUA = bfc00990, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         613 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00994, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000265, readdata = xxxxxxxx
ALUA = bfc00994, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         613 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000265, readdata = xxxxxxxx
ALUA = bfc00994, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         614 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000265, readdata = xxxxxxxx
ALUA = bfc00998, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000266, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         614 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000266, readdata = xxxxxxxx
ALUA = bfc00998, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         615 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0099c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000267, readdata = xxxxxxxx
ALUA = bfc0099c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         615 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000267, readdata = xxxxxxxx
ALUA = bfc0099c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         616 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000267, readdata = xxxxxxxx
ALUA = bfc009a0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000268, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         616 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000268, readdata = xxxxxxxx
ALUA = bfc009a0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         617 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc009a4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000269, readdata = xxxxxxxx
ALUA = bfc009a4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         617 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000269, readdata = xxxxxxxx
ALUA = bfc009a4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         618 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000269, readdata = xxxxxxxx
ALUA = bfc009a8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000026a, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         618 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000026a, readdata = xxxxxxxx
ALUA = bfc009a8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         619 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc009ac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000026b, readdata = xxxxxxxx
ALUA = bfc009ac, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         619 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000026b, readdata = xxxxxxxx
ALUA = bfc009ac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         620 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000026b, readdata = xxxxxxxx
ALUA = bfc009b0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000026c, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         620 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000026c, readdata = xxxxxxxx
ALUA = bfc009b0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         621 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc009b4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000026d, readdata = xxxxxxxx
ALUA = bfc009b4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         621 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000026d, readdata = xxxxxxxx
ALUA = bfc009b4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         622 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000026d, readdata = xxxxxxxx
ALUA = bfc009b8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000026e, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         622 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000026e, readdata = xxxxxxxx
ALUA = bfc009b8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         623 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc009bc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000026f, readdata = xxxxxxxx
ALUA = bfc009bc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         623 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000026f, readdata = xxxxxxxx
ALUA = bfc009bc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         624 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000026f, readdata = xxxxxxxx
ALUA = bfc009c0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000270, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         624 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000270, readdata = xxxxxxxx
ALUA = bfc009c0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         625 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc009c4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000271, readdata = xxxxxxxx
ALUA = bfc009c4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         625 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000271, readdata = xxxxxxxx
ALUA = bfc009c4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         626 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000271, readdata = xxxxxxxx
ALUA = bfc009c8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000272, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         626 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000272, readdata = xxxxxxxx
ALUA = bfc009c8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         627 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc009cc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000273, readdata = xxxxxxxx
ALUA = bfc009cc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         627 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000273, readdata = xxxxxxxx
ALUA = bfc009cc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         628 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000273, readdata = xxxxxxxx
ALUA = bfc009d0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000274, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         628 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000274, readdata = xxxxxxxx
ALUA = bfc009d0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         629 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc009d4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000275, readdata = xxxxxxxx
ALUA = bfc009d4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         629 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000275, readdata = xxxxxxxx
ALUA = bfc009d4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         630 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000275, readdata = xxxxxxxx
ALUA = bfc009d8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000276, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         630 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000276, readdata = xxxxxxxx
ALUA = bfc009d8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         631 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc009dc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000277, readdata = xxxxxxxx
ALUA = bfc009dc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         631 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000277, readdata = xxxxxxxx
ALUA = bfc009dc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         632 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000277, readdata = xxxxxxxx
ALUA = bfc009e0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000278, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         632 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000278, readdata = xxxxxxxx
ALUA = bfc009e0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         633 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc009e4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000279, readdata = xxxxxxxx
ALUA = bfc009e4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         633 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000279, readdata = xxxxxxxx
ALUA = bfc009e4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         634 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000279, readdata = xxxxxxxx
ALUA = bfc009e8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000027a, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         634 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000027a, readdata = xxxxxxxx
ALUA = bfc009e8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         635 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc009ec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000027b, readdata = xxxxxxxx
ALUA = bfc009ec, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         635 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000027b, readdata = xxxxxxxx
ALUA = bfc009ec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         636 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000027b, readdata = xxxxxxxx
ALUA = bfc009f0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000027c, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         636 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000027c, readdata = xxxxxxxx
ALUA = bfc009f0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         637 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc009f4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000027d, readdata = xxxxxxxx
ALUA = bfc009f4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         637 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000027d, readdata = xxxxxxxx
ALUA = bfc009f4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         638 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000027d, readdata = xxxxxxxx
ALUA = bfc009f8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000027e, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         638 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000027e, readdata = xxxxxxxx
ALUA = bfc009f8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         639 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc009fc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000027f, readdata = xxxxxxxx
ALUA = bfc009fc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         639 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000027f, readdata = xxxxxxxx
ALUA = bfc009fc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         640 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000027f, readdata = xxxxxxxx
ALUA = bfc00a00, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000280, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         640 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000280, readdata = xxxxxxxx
ALUA = bfc00a00, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         641 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00a04, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000281, readdata = xxxxxxxx
ALUA = bfc00a04, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         641 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000281, readdata = xxxxxxxx
ALUA = bfc00a04, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         642 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000281, readdata = xxxxxxxx
ALUA = bfc00a08, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000282, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         642 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000282, readdata = xxxxxxxx
ALUA = bfc00a08, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         643 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00a0c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000283, readdata = xxxxxxxx
ALUA = bfc00a0c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         643 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000283, readdata = xxxxxxxx
ALUA = bfc00a0c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         644 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000283, readdata = xxxxxxxx
ALUA = bfc00a10, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000284, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         644 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000284, readdata = xxxxxxxx
ALUA = bfc00a10, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         645 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00a14, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000285, readdata = xxxxxxxx
ALUA = bfc00a14, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         645 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000285, readdata = xxxxxxxx
ALUA = bfc00a14, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         646 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000285, readdata = xxxxxxxx
ALUA = bfc00a18, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000286, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         646 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000286, readdata = xxxxxxxx
ALUA = bfc00a18, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         647 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00a1c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000287, readdata = xxxxxxxx
ALUA = bfc00a1c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         647 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000287, readdata = xxxxxxxx
ALUA = bfc00a1c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         648 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000287, readdata = xxxxxxxx
ALUA = bfc00a20, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000288, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         648 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000288, readdata = xxxxxxxx
ALUA = bfc00a20, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         649 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00a24, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000289, readdata = xxxxxxxx
ALUA = bfc00a24, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         649 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000289, readdata = xxxxxxxx
ALUA = bfc00a24, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         650 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000289, readdata = xxxxxxxx
ALUA = bfc00a28, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000028a, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         650 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000028a, readdata = xxxxxxxx
ALUA = bfc00a28, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         651 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00a2c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000028b, readdata = xxxxxxxx
ALUA = bfc00a2c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         651 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000028b, readdata = xxxxxxxx
ALUA = bfc00a2c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         652 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000028b, readdata = xxxxxxxx
ALUA = bfc00a30, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000028c, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         652 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000028c, readdata = xxxxxxxx
ALUA = bfc00a30, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         653 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00a34, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000028d, readdata = xxxxxxxx
ALUA = bfc00a34, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         653 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000028d, readdata = xxxxxxxx
ALUA = bfc00a34, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         654 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000028d, readdata = xxxxxxxx
ALUA = bfc00a38, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000028e, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         654 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000028e, readdata = xxxxxxxx
ALUA = bfc00a38, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         655 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00a3c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000028f, readdata = xxxxxxxx
ALUA = bfc00a3c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         655 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000028f, readdata = xxxxxxxx
ALUA = bfc00a3c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         656 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000028f, readdata = xxxxxxxx
ALUA = bfc00a40, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000290, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         656 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000290, readdata = xxxxxxxx
ALUA = bfc00a40, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         657 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00a44, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000291, readdata = xxxxxxxx
ALUA = bfc00a44, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         657 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000291, readdata = xxxxxxxx
ALUA = bfc00a44, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         658 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000291, readdata = xxxxxxxx
ALUA = bfc00a48, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000292, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         658 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000292, readdata = xxxxxxxx
ALUA = bfc00a48, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         659 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00a4c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000293, readdata = xxxxxxxx
ALUA = bfc00a4c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         659 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000293, readdata = xxxxxxxx
ALUA = bfc00a4c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         660 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000293, readdata = xxxxxxxx
ALUA = bfc00a50, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000294, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         660 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000294, readdata = xxxxxxxx
ALUA = bfc00a50, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         661 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00a54, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000295, readdata = xxxxxxxx
ALUA = bfc00a54, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         661 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000295, readdata = xxxxxxxx
ALUA = bfc00a54, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         662 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000295, readdata = xxxxxxxx
ALUA = bfc00a58, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000296, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         662 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000296, readdata = xxxxxxxx
ALUA = bfc00a58, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         663 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00a5c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000297, readdata = xxxxxxxx
ALUA = bfc00a5c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         663 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000297, readdata = xxxxxxxx
ALUA = bfc00a5c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         664 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000297, readdata = xxxxxxxx
ALUA = bfc00a60, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000298, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         664 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000298, readdata = xxxxxxxx
ALUA = bfc00a60, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         665 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00a64, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000299, readdata = xxxxxxxx
ALUA = bfc00a64, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         665 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000299, readdata = xxxxxxxx
ALUA = bfc00a64, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         666 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000299, readdata = xxxxxxxx
ALUA = bfc00a68, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000029a, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         666 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000029a, readdata = xxxxxxxx
ALUA = bfc00a68, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         667 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00a6c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000029b, readdata = xxxxxxxx
ALUA = bfc00a6c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         667 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000029b, readdata = xxxxxxxx
ALUA = bfc00a6c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         668 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000029b, readdata = xxxxxxxx
ALUA = bfc00a70, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000029c, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         668 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000029c, readdata = xxxxxxxx
ALUA = bfc00a70, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         669 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00a74, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000029d, readdata = xxxxxxxx
ALUA = bfc00a74, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         669 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000029d, readdata = xxxxxxxx
ALUA = bfc00a74, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         670 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000029d, readdata = xxxxxxxx
ALUA = bfc00a78, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000029e, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         670 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000029e, readdata = xxxxxxxx
ALUA = bfc00a78, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         671 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00a7c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000029f, readdata = xxxxxxxx
ALUA = bfc00a7c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         671 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000029f, readdata = xxxxxxxx
ALUA = bfc00a7c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         672 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000029f, readdata = xxxxxxxx
ALUA = bfc00a80, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002a0, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         672 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002a0, readdata = xxxxxxxx
ALUA = bfc00a80, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         673 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00a84, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002a1, readdata = xxxxxxxx
ALUA = bfc00a84, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         673 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002a1, readdata = xxxxxxxx
ALUA = bfc00a84, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         674 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000002a1, readdata = xxxxxxxx
ALUA = bfc00a88, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002a2, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         674 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002a2, readdata = xxxxxxxx
ALUA = bfc00a88, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         675 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00a8c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002a3, readdata = xxxxxxxx
ALUA = bfc00a8c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         675 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002a3, readdata = xxxxxxxx
ALUA = bfc00a8c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         676 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000002a3, readdata = xxxxxxxx
ALUA = bfc00a90, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002a4, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         676 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002a4, readdata = xxxxxxxx
ALUA = bfc00a90, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         677 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00a94, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002a5, readdata = xxxxxxxx
ALUA = bfc00a94, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         677 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002a5, readdata = xxxxxxxx
ALUA = bfc00a94, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         678 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000002a5, readdata = xxxxxxxx
ALUA = bfc00a98, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002a6, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         678 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002a6, readdata = xxxxxxxx
ALUA = bfc00a98, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         679 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00a9c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002a7, readdata = xxxxxxxx
ALUA = bfc00a9c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         679 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002a7, readdata = xxxxxxxx
ALUA = bfc00a9c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         680 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000002a7, readdata = xxxxxxxx
ALUA = bfc00aa0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002a8, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         680 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002a8, readdata = xxxxxxxx
ALUA = bfc00aa0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         681 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00aa4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002a9, readdata = xxxxxxxx
ALUA = bfc00aa4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         681 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002a9, readdata = xxxxxxxx
ALUA = bfc00aa4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         682 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000002a9, readdata = xxxxxxxx
ALUA = bfc00aa8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002aa, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         682 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002aa, readdata = xxxxxxxx
ALUA = bfc00aa8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         683 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00aac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002ab, readdata = xxxxxxxx
ALUA = bfc00aac, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         683 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002ab, readdata = xxxxxxxx
ALUA = bfc00aac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         684 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000002ab, readdata = xxxxxxxx
ALUA = bfc00ab0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002ac, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         684 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002ac, readdata = xxxxxxxx
ALUA = bfc00ab0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         685 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00ab4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002ad, readdata = xxxxxxxx
ALUA = bfc00ab4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         685 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002ad, readdata = xxxxxxxx
ALUA = bfc00ab4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         686 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000002ad, readdata = xxxxxxxx
ALUA = bfc00ab8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002ae, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         686 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002ae, readdata = xxxxxxxx
ALUA = bfc00ab8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         687 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00abc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002af, readdata = xxxxxxxx
ALUA = bfc00abc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         687 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002af, readdata = xxxxxxxx
ALUA = bfc00abc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         688 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000002af, readdata = xxxxxxxx
ALUA = bfc00ac0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002b0, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         688 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002b0, readdata = xxxxxxxx
ALUA = bfc00ac0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         689 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00ac4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002b1, readdata = xxxxxxxx
ALUA = bfc00ac4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         689 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002b1, readdata = xxxxxxxx
ALUA = bfc00ac4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         690 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000002b1, readdata = xxxxxxxx
ALUA = bfc00ac8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002b2, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         690 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002b2, readdata = xxxxxxxx
ALUA = bfc00ac8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         691 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00acc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002b3, readdata = xxxxxxxx
ALUA = bfc00acc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         691 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002b3, readdata = xxxxxxxx
ALUA = bfc00acc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         692 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000002b3, readdata = xxxxxxxx
ALUA = bfc00ad0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002b4, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         692 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002b4, readdata = xxxxxxxx
ALUA = bfc00ad0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         693 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00ad4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002b5, readdata = xxxxxxxx
ALUA = bfc00ad4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         693 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002b5, readdata = xxxxxxxx
ALUA = bfc00ad4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         694 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000002b5, readdata = xxxxxxxx
ALUA = bfc00ad8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002b6, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         694 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002b6, readdata = xxxxxxxx
ALUA = bfc00ad8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         695 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00adc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002b7, readdata = xxxxxxxx
ALUA = bfc00adc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         695 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002b7, readdata = xxxxxxxx
ALUA = bfc00adc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         696 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000002b7, readdata = xxxxxxxx
ALUA = bfc00ae0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002b8, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         696 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002b8, readdata = xxxxxxxx
ALUA = bfc00ae0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         697 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00ae4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002b9, readdata = xxxxxxxx
ALUA = bfc00ae4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         697 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002b9, readdata = xxxxxxxx
ALUA = bfc00ae4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         698 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000002b9, readdata = xxxxxxxx
ALUA = bfc00ae8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002ba, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         698 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002ba, readdata = xxxxxxxx
ALUA = bfc00ae8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         699 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00aec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002bb, readdata = xxxxxxxx
ALUA = bfc00aec, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         699 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002bb, readdata = xxxxxxxx
ALUA = bfc00aec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         700 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000002bb, readdata = xxxxxxxx
ALUA = bfc00af0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002bc, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         700 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002bc, readdata = xxxxxxxx
ALUA = bfc00af0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         701 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00af4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002bd, readdata = xxxxxxxx
ALUA = bfc00af4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         701 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002bd, readdata = xxxxxxxx
ALUA = bfc00af4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         702 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000002bd, readdata = xxxxxxxx
ALUA = bfc00af8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002be, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         702 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002be, readdata = xxxxxxxx
ALUA = bfc00af8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         703 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00afc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002bf, readdata = xxxxxxxx
ALUA = bfc00afc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         703 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002bf, readdata = xxxxxxxx
ALUA = bfc00afc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         704 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000002bf, readdata = xxxxxxxx
ALUA = bfc00b00, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002c0, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         704 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002c0, readdata = xxxxxxxx
ALUA = bfc00b00, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         705 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00b04, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002c1, readdata = xxxxxxxx
ALUA = bfc00b04, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         705 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002c1, readdata = xxxxxxxx
ALUA = bfc00b04, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         706 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000002c1, readdata = xxxxxxxx
ALUA = bfc00b08, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002c2, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         706 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002c2, readdata = xxxxxxxx
ALUA = bfc00b08, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         707 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00b0c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002c3, readdata = xxxxxxxx
ALUA = bfc00b0c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         707 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002c3, readdata = xxxxxxxx
ALUA = bfc00b0c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         708 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000002c3, readdata = xxxxxxxx
ALUA = bfc00b10, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002c4, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         708 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002c4, readdata = xxxxxxxx
ALUA = bfc00b10, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         709 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00b14, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002c5, readdata = xxxxxxxx
ALUA = bfc00b14, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         709 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002c5, readdata = xxxxxxxx
ALUA = bfc00b14, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         710 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000002c5, readdata = xxxxxxxx
ALUA = bfc00b18, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002c6, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         710 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002c6, readdata = xxxxxxxx
ALUA = bfc00b18, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         711 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00b1c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002c7, readdata = xxxxxxxx
ALUA = bfc00b1c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         711 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002c7, readdata = xxxxxxxx
ALUA = bfc00b1c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         712 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000002c7, readdata = xxxxxxxx
ALUA = bfc00b20, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002c8, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         712 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002c8, readdata = xxxxxxxx
ALUA = bfc00b20, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         713 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00b24, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002c9, readdata = xxxxxxxx
ALUA = bfc00b24, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         713 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002c9, readdata = xxxxxxxx
ALUA = bfc00b24, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         714 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000002c9, readdata = xxxxxxxx
ALUA = bfc00b28, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002ca, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         714 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002ca, readdata = xxxxxxxx
ALUA = bfc00b28, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         715 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00b2c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002cb, readdata = xxxxxxxx
ALUA = bfc00b2c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         715 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002cb, readdata = xxxxxxxx
ALUA = bfc00b2c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         716 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000002cb, readdata = xxxxxxxx
ALUA = bfc00b30, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002cc, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         716 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002cc, readdata = xxxxxxxx
ALUA = bfc00b30, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         717 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00b34, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002cd, readdata = xxxxxxxx
ALUA = bfc00b34, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         717 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002cd, readdata = xxxxxxxx
ALUA = bfc00b34, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         718 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000002cd, readdata = xxxxxxxx
ALUA = bfc00b38, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002ce, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         718 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002ce, readdata = xxxxxxxx
ALUA = bfc00b38, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         719 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00b3c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002cf, readdata = xxxxxxxx
ALUA = bfc00b3c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         719 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002cf, readdata = xxxxxxxx
ALUA = bfc00b3c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         720 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000002cf, readdata = xxxxxxxx
ALUA = bfc00b40, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002d0, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         720 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002d0, readdata = xxxxxxxx
ALUA = bfc00b40, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         721 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00b44, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002d1, readdata = xxxxxxxx
ALUA = bfc00b44, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         721 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002d1, readdata = xxxxxxxx
ALUA = bfc00b44, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         722 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000002d1, readdata = xxxxxxxx
ALUA = bfc00b48, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002d2, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         722 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002d2, readdata = xxxxxxxx
ALUA = bfc00b48, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         723 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00b4c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002d3, readdata = xxxxxxxx
ALUA = bfc00b4c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         723 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002d3, readdata = xxxxxxxx
ALUA = bfc00b4c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         724 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000002d3, readdata = xxxxxxxx
ALUA = bfc00b50, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002d4, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         724 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002d4, readdata = xxxxxxxx
ALUA = bfc00b50, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         725 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00b54, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002d5, readdata = xxxxxxxx
ALUA = bfc00b54, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         725 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002d5, readdata = xxxxxxxx
ALUA = bfc00b54, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         726 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000002d5, readdata = xxxxxxxx
ALUA = bfc00b58, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002d6, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         726 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002d6, readdata = xxxxxxxx
ALUA = bfc00b58, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         727 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00b5c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002d7, readdata = xxxxxxxx
ALUA = bfc00b5c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         727 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002d7, readdata = xxxxxxxx
ALUA = bfc00b5c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         728 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000002d7, readdata = xxxxxxxx
ALUA = bfc00b60, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002d8, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         728 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002d8, readdata = xxxxxxxx
ALUA = bfc00b60, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         729 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00b64, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002d9, readdata = xxxxxxxx
ALUA = bfc00b64, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         729 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002d9, readdata = xxxxxxxx
ALUA = bfc00b64, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         730 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000002d9, readdata = xxxxxxxx
ALUA = bfc00b68, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002da, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         730 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002da, readdata = xxxxxxxx
ALUA = bfc00b68, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         731 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00b6c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002db, readdata = xxxxxxxx
ALUA = bfc00b6c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         731 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002db, readdata = xxxxxxxx
ALUA = bfc00b6c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         732 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000002db, readdata = xxxxxxxx
ALUA = bfc00b70, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002dc, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         732 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002dc, readdata = xxxxxxxx
ALUA = bfc00b70, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         733 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00b74, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002dd, readdata = xxxxxxxx
ALUA = bfc00b74, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         733 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002dd, readdata = xxxxxxxx
ALUA = bfc00b74, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         734 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000002dd, readdata = xxxxxxxx
ALUA = bfc00b78, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002de, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         734 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002de, readdata = xxxxxxxx
ALUA = bfc00b78, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         735 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00b7c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002df, readdata = xxxxxxxx
ALUA = bfc00b7c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         735 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002df, readdata = xxxxxxxx
ALUA = bfc00b7c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         736 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000002df, readdata = xxxxxxxx
ALUA = bfc00b80, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002e0, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         736 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002e0, readdata = xxxxxxxx
ALUA = bfc00b80, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         737 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00b84, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002e1, readdata = xxxxxxxx
ALUA = bfc00b84, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         737 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002e1, readdata = xxxxxxxx
ALUA = bfc00b84, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         738 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000002e1, readdata = xxxxxxxx
ALUA = bfc00b88, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002e2, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         738 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002e2, readdata = xxxxxxxx
ALUA = bfc00b88, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         739 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00b8c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002e3, readdata = xxxxxxxx
ALUA = bfc00b8c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         739 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002e3, readdata = xxxxxxxx
ALUA = bfc00b8c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         740 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000002e3, readdata = xxxxxxxx
ALUA = bfc00b90, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002e4, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         740 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002e4, readdata = xxxxxxxx
ALUA = bfc00b90, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         741 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00b94, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002e5, readdata = xxxxxxxx
ALUA = bfc00b94, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         741 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002e5, readdata = xxxxxxxx
ALUA = bfc00b94, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         742 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000002e5, readdata = xxxxxxxx
ALUA = bfc00b98, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002e6, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         742 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002e6, readdata = xxxxxxxx
ALUA = bfc00b98, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         743 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00b9c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002e7, readdata = xxxxxxxx
ALUA = bfc00b9c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         743 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002e7, readdata = xxxxxxxx
ALUA = bfc00b9c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         744 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000002e7, readdata = xxxxxxxx
ALUA = bfc00ba0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002e8, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         744 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002e8, readdata = xxxxxxxx
ALUA = bfc00ba0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         745 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00ba4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002e9, readdata = xxxxxxxx
ALUA = bfc00ba4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         745 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002e9, readdata = xxxxxxxx
ALUA = bfc00ba4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         746 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000002e9, readdata = xxxxxxxx
ALUA = bfc00ba8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002ea, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         746 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002ea, readdata = xxxxxxxx
ALUA = bfc00ba8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         747 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00bac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002eb, readdata = xxxxxxxx
ALUA = bfc00bac, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         747 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002eb, readdata = xxxxxxxx
ALUA = bfc00bac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         748 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000002eb, readdata = xxxxxxxx
ALUA = bfc00bb0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002ec, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         748 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002ec, readdata = xxxxxxxx
ALUA = bfc00bb0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         749 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00bb4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002ed, readdata = xxxxxxxx
ALUA = bfc00bb4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         749 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002ed, readdata = xxxxxxxx
ALUA = bfc00bb4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         750 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000002ed, readdata = xxxxxxxx
ALUA = bfc00bb8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002ee, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         750 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002ee, readdata = xxxxxxxx
ALUA = bfc00bb8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         751 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00bbc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002ef, readdata = xxxxxxxx
ALUA = bfc00bbc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         751 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002ef, readdata = xxxxxxxx
ALUA = bfc00bbc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         752 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000002ef, readdata = xxxxxxxx
ALUA = bfc00bc0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002f0, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         752 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002f0, readdata = xxxxxxxx
ALUA = bfc00bc0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         753 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00bc4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002f1, readdata = xxxxxxxx
ALUA = bfc00bc4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         753 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002f1, readdata = xxxxxxxx
ALUA = bfc00bc4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         754 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000002f1, readdata = xxxxxxxx
ALUA = bfc00bc8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002f2, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         754 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002f2, readdata = xxxxxxxx
ALUA = bfc00bc8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         755 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00bcc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002f3, readdata = xxxxxxxx
ALUA = bfc00bcc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         755 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002f3, readdata = xxxxxxxx
ALUA = bfc00bcc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         756 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000002f3, readdata = xxxxxxxx
ALUA = bfc00bd0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002f4, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         756 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002f4, readdata = xxxxxxxx
ALUA = bfc00bd0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         757 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00bd4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002f5, readdata = xxxxxxxx
ALUA = bfc00bd4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         757 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002f5, readdata = xxxxxxxx
ALUA = bfc00bd4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         758 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000002f5, readdata = xxxxxxxx
ALUA = bfc00bd8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002f6, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         758 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002f6, readdata = xxxxxxxx
ALUA = bfc00bd8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         759 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00bdc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002f7, readdata = xxxxxxxx
ALUA = bfc00bdc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         759 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002f7, readdata = xxxxxxxx
ALUA = bfc00bdc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         760 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000002f7, readdata = xxxxxxxx
ALUA = bfc00be0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002f8, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         760 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002f8, readdata = xxxxxxxx
ALUA = bfc00be0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         761 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00be4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002f9, readdata = xxxxxxxx
ALUA = bfc00be4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         761 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002f9, readdata = xxxxxxxx
ALUA = bfc00be4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         762 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000002f9, readdata = xxxxxxxx
ALUA = bfc00be8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002fa, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         762 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002fa, readdata = xxxxxxxx
ALUA = bfc00be8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         763 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00bec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002fb, readdata = xxxxxxxx
ALUA = bfc00bec, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         763 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002fb, readdata = xxxxxxxx
ALUA = bfc00bec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         764 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000002fb, readdata = xxxxxxxx
ALUA = bfc00bf0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002fc, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         764 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002fc, readdata = xxxxxxxx
ALUA = bfc00bf0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         765 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00bf4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002fd, readdata = xxxxxxxx
ALUA = bfc00bf4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         765 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002fd, readdata = xxxxxxxx
ALUA = bfc00bf4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         766 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000002fd, readdata = xxxxxxxx
ALUA = bfc00bf8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002fe, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         766 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002fe, readdata = xxxxxxxx
ALUA = bfc00bf8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         767 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00bfc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000002ff, readdata = xxxxxxxx
ALUA = bfc00bfc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         767 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000002ff, readdata = xxxxxxxx
ALUA = bfc00bfc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         768 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000002ff, readdata = xxxxxxxx
ALUA = bfc00c00, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000300, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         768 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000300, readdata = xxxxxxxx
ALUA = bfc00c00, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         769 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00c04, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000301, readdata = xxxxxxxx
ALUA = bfc00c04, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         769 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000301, readdata = xxxxxxxx
ALUA = bfc00c04, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         770 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000301, readdata = xxxxxxxx
ALUA = bfc00c08, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000302, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         770 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000302, readdata = xxxxxxxx
ALUA = bfc00c08, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         771 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00c0c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000303, readdata = xxxxxxxx
ALUA = bfc00c0c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         771 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000303, readdata = xxxxxxxx
ALUA = bfc00c0c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         772 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000303, readdata = xxxxxxxx
ALUA = bfc00c10, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000304, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         772 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000304, readdata = xxxxxxxx
ALUA = bfc00c10, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         773 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00c14, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000305, readdata = xxxxxxxx
ALUA = bfc00c14, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         773 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000305, readdata = xxxxxxxx
ALUA = bfc00c14, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         774 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000305, readdata = xxxxxxxx
ALUA = bfc00c18, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000306, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         774 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000306, readdata = xxxxxxxx
ALUA = bfc00c18, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         775 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00c1c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000307, readdata = xxxxxxxx
ALUA = bfc00c1c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         775 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000307, readdata = xxxxxxxx
ALUA = bfc00c1c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         776 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000307, readdata = xxxxxxxx
ALUA = bfc00c20, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000308, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         776 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000308, readdata = xxxxxxxx
ALUA = bfc00c20, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         777 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00c24, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000309, readdata = xxxxxxxx
ALUA = bfc00c24, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         777 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000309, readdata = xxxxxxxx
ALUA = bfc00c24, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         778 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000309, readdata = xxxxxxxx
ALUA = bfc00c28, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000030a, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         778 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000030a, readdata = xxxxxxxx
ALUA = bfc00c28, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         779 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00c2c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000030b, readdata = xxxxxxxx
ALUA = bfc00c2c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         779 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000030b, readdata = xxxxxxxx
ALUA = bfc00c2c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         780 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000030b, readdata = xxxxxxxx
ALUA = bfc00c30, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000030c, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         780 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000030c, readdata = xxxxxxxx
ALUA = bfc00c30, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         781 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00c34, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000030d, readdata = xxxxxxxx
ALUA = bfc00c34, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         781 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000030d, readdata = xxxxxxxx
ALUA = bfc00c34, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         782 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000030d, readdata = xxxxxxxx
ALUA = bfc00c38, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000030e, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         782 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000030e, readdata = xxxxxxxx
ALUA = bfc00c38, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         783 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00c3c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000030f, readdata = xxxxxxxx
ALUA = bfc00c3c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         783 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000030f, readdata = xxxxxxxx
ALUA = bfc00c3c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         784 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000030f, readdata = xxxxxxxx
ALUA = bfc00c40, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000310, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         784 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000310, readdata = xxxxxxxx
ALUA = bfc00c40, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         785 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00c44, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000311, readdata = xxxxxxxx
ALUA = bfc00c44, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         785 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000311, readdata = xxxxxxxx
ALUA = bfc00c44, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         786 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000311, readdata = xxxxxxxx
ALUA = bfc00c48, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000312, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         786 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000312, readdata = xxxxxxxx
ALUA = bfc00c48, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         787 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00c4c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000313, readdata = xxxxxxxx
ALUA = bfc00c4c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         787 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000313, readdata = xxxxxxxx
ALUA = bfc00c4c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         788 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000313, readdata = xxxxxxxx
ALUA = bfc00c50, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000314, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         788 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000314, readdata = xxxxxxxx
ALUA = bfc00c50, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         789 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00c54, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000315, readdata = xxxxxxxx
ALUA = bfc00c54, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         789 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000315, readdata = xxxxxxxx
ALUA = bfc00c54, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         790 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000315, readdata = xxxxxxxx
ALUA = bfc00c58, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000316, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         790 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000316, readdata = xxxxxxxx
ALUA = bfc00c58, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         791 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00c5c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000317, readdata = xxxxxxxx
ALUA = bfc00c5c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         791 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000317, readdata = xxxxxxxx
ALUA = bfc00c5c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         792 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000317, readdata = xxxxxxxx
ALUA = bfc00c60, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000318, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         792 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000318, readdata = xxxxxxxx
ALUA = bfc00c60, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         793 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00c64, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000319, readdata = xxxxxxxx
ALUA = bfc00c64, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         793 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000319, readdata = xxxxxxxx
ALUA = bfc00c64, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         794 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000319, readdata = xxxxxxxx
ALUA = bfc00c68, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000031a, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         794 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000031a, readdata = xxxxxxxx
ALUA = bfc00c68, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         795 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00c6c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000031b, readdata = xxxxxxxx
ALUA = bfc00c6c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         795 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000031b, readdata = xxxxxxxx
ALUA = bfc00c6c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         796 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000031b, readdata = xxxxxxxx
ALUA = bfc00c70, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000031c, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         796 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000031c, readdata = xxxxxxxx
ALUA = bfc00c70, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         797 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00c74, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000031d, readdata = xxxxxxxx
ALUA = bfc00c74, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         797 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000031d, readdata = xxxxxxxx
ALUA = bfc00c74, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         798 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000031d, readdata = xxxxxxxx
ALUA = bfc00c78, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000031e, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         798 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000031e, readdata = xxxxxxxx
ALUA = bfc00c78, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         799 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00c7c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000031f, readdata = xxxxxxxx
ALUA = bfc00c7c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         799 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000031f, readdata = xxxxxxxx
ALUA = bfc00c7c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         800 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000031f, readdata = xxxxxxxx
ALUA = bfc00c80, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000320, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         800 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000320, readdata = xxxxxxxx
ALUA = bfc00c80, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         801 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00c84, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000321, readdata = xxxxxxxx
ALUA = bfc00c84, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         801 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000321, readdata = xxxxxxxx
ALUA = bfc00c84, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         802 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000321, readdata = xxxxxxxx
ALUA = bfc00c88, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000322, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         802 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000322, readdata = xxxxxxxx
ALUA = bfc00c88, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         803 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00c8c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000323, readdata = xxxxxxxx
ALUA = bfc00c8c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         803 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000323, readdata = xxxxxxxx
ALUA = bfc00c8c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         804 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000323, readdata = xxxxxxxx
ALUA = bfc00c90, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000324, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         804 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000324, readdata = xxxxxxxx
ALUA = bfc00c90, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         805 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00c94, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000325, readdata = xxxxxxxx
ALUA = bfc00c94, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         805 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000325, readdata = xxxxxxxx
ALUA = bfc00c94, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         806 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000325, readdata = xxxxxxxx
ALUA = bfc00c98, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000326, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         806 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000326, readdata = xxxxxxxx
ALUA = bfc00c98, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         807 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00c9c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000327, readdata = xxxxxxxx
ALUA = bfc00c9c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         807 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000327, readdata = xxxxxxxx
ALUA = bfc00c9c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         808 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000327, readdata = xxxxxxxx
ALUA = bfc00ca0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000328, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         808 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000328, readdata = xxxxxxxx
ALUA = bfc00ca0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         809 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00ca4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000329, readdata = xxxxxxxx
ALUA = bfc00ca4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         809 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000329, readdata = xxxxxxxx
ALUA = bfc00ca4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         810 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000329, readdata = xxxxxxxx
ALUA = bfc00ca8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000032a, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         810 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000032a, readdata = xxxxxxxx
ALUA = bfc00ca8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         811 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00cac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000032b, readdata = xxxxxxxx
ALUA = bfc00cac, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         811 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000032b, readdata = xxxxxxxx
ALUA = bfc00cac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         812 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000032b, readdata = xxxxxxxx
ALUA = bfc00cb0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000032c, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         812 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000032c, readdata = xxxxxxxx
ALUA = bfc00cb0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         813 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00cb4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000032d, readdata = xxxxxxxx
ALUA = bfc00cb4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         813 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000032d, readdata = xxxxxxxx
ALUA = bfc00cb4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         814 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000032d, readdata = xxxxxxxx
ALUA = bfc00cb8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000032e, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         814 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000032e, readdata = xxxxxxxx
ALUA = bfc00cb8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         815 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00cbc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000032f, readdata = xxxxxxxx
ALUA = bfc00cbc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         815 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000032f, readdata = xxxxxxxx
ALUA = bfc00cbc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         816 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000032f, readdata = xxxxxxxx
ALUA = bfc00cc0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000330, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         816 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000330, readdata = xxxxxxxx
ALUA = bfc00cc0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         817 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00cc4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000331, readdata = xxxxxxxx
ALUA = bfc00cc4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         817 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000331, readdata = xxxxxxxx
ALUA = bfc00cc4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         818 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000331, readdata = xxxxxxxx
ALUA = bfc00cc8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000332, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         818 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000332, readdata = xxxxxxxx
ALUA = bfc00cc8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         819 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00ccc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000333, readdata = xxxxxxxx
ALUA = bfc00ccc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         819 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000333, readdata = xxxxxxxx
ALUA = bfc00ccc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         820 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000333, readdata = xxxxxxxx
ALUA = bfc00cd0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000334, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         820 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000334, readdata = xxxxxxxx
ALUA = bfc00cd0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         821 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00cd4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000335, readdata = xxxxxxxx
ALUA = bfc00cd4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         821 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000335, readdata = xxxxxxxx
ALUA = bfc00cd4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         822 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000335, readdata = xxxxxxxx
ALUA = bfc00cd8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000336, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         822 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000336, readdata = xxxxxxxx
ALUA = bfc00cd8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         823 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00cdc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000337, readdata = xxxxxxxx
ALUA = bfc00cdc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         823 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000337, readdata = xxxxxxxx
ALUA = bfc00cdc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         824 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000337, readdata = xxxxxxxx
ALUA = bfc00ce0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000338, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         824 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000338, readdata = xxxxxxxx
ALUA = bfc00ce0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         825 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00ce4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000339, readdata = xxxxxxxx
ALUA = bfc00ce4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         825 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000339, readdata = xxxxxxxx
ALUA = bfc00ce4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         826 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000339, readdata = xxxxxxxx
ALUA = bfc00ce8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000033a, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         826 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000033a, readdata = xxxxxxxx
ALUA = bfc00ce8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         827 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00cec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000033b, readdata = xxxxxxxx
ALUA = bfc00cec, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         827 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000033b, readdata = xxxxxxxx
ALUA = bfc00cec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         828 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000033b, readdata = xxxxxxxx
ALUA = bfc00cf0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000033c, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         828 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000033c, readdata = xxxxxxxx
ALUA = bfc00cf0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         829 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00cf4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000033d, readdata = xxxxxxxx
ALUA = bfc00cf4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         829 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000033d, readdata = xxxxxxxx
ALUA = bfc00cf4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         830 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000033d, readdata = xxxxxxxx
ALUA = bfc00cf8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000033e, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         830 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000033e, readdata = xxxxxxxx
ALUA = bfc00cf8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         831 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00cfc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000033f, readdata = xxxxxxxx
ALUA = bfc00cfc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         831 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000033f, readdata = xxxxxxxx
ALUA = bfc00cfc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         832 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000033f, readdata = xxxxxxxx
ALUA = bfc00d00, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000340, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         832 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000340, readdata = xxxxxxxx
ALUA = bfc00d00, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         833 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00d04, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000341, readdata = xxxxxxxx
ALUA = bfc00d04, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         833 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000341, readdata = xxxxxxxx
ALUA = bfc00d04, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         834 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000341, readdata = xxxxxxxx
ALUA = bfc00d08, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000342, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         834 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000342, readdata = xxxxxxxx
ALUA = bfc00d08, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         835 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00d0c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000343, readdata = xxxxxxxx
ALUA = bfc00d0c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         835 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000343, readdata = xxxxxxxx
ALUA = bfc00d0c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         836 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000343, readdata = xxxxxxxx
ALUA = bfc00d10, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000344, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         836 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000344, readdata = xxxxxxxx
ALUA = bfc00d10, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         837 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00d14, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000345, readdata = xxxxxxxx
ALUA = bfc00d14, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         837 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000345, readdata = xxxxxxxx
ALUA = bfc00d14, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         838 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000345, readdata = xxxxxxxx
ALUA = bfc00d18, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000346, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         838 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000346, readdata = xxxxxxxx
ALUA = bfc00d18, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         839 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00d1c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000347, readdata = xxxxxxxx
ALUA = bfc00d1c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         839 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000347, readdata = xxxxxxxx
ALUA = bfc00d1c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         840 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000347, readdata = xxxxxxxx
ALUA = bfc00d20, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000348, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         840 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000348, readdata = xxxxxxxx
ALUA = bfc00d20, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         841 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00d24, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000349, readdata = xxxxxxxx
ALUA = bfc00d24, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         841 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000349, readdata = xxxxxxxx
ALUA = bfc00d24, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         842 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000349, readdata = xxxxxxxx
ALUA = bfc00d28, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000034a, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         842 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000034a, readdata = xxxxxxxx
ALUA = bfc00d28, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         843 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00d2c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000034b, readdata = xxxxxxxx
ALUA = bfc00d2c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         843 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000034b, readdata = xxxxxxxx
ALUA = bfc00d2c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         844 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000034b, readdata = xxxxxxxx
ALUA = bfc00d30, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000034c, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         844 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000034c, readdata = xxxxxxxx
ALUA = bfc00d30, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         845 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00d34, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000034d, readdata = xxxxxxxx
ALUA = bfc00d34, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         845 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000034d, readdata = xxxxxxxx
ALUA = bfc00d34, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         846 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000034d, readdata = xxxxxxxx
ALUA = bfc00d38, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000034e, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         846 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000034e, readdata = xxxxxxxx
ALUA = bfc00d38, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         847 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00d3c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000034f, readdata = xxxxxxxx
ALUA = bfc00d3c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         847 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000034f, readdata = xxxxxxxx
ALUA = bfc00d3c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         848 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000034f, readdata = xxxxxxxx
ALUA = bfc00d40, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000350, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         848 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000350, readdata = xxxxxxxx
ALUA = bfc00d40, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         849 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00d44, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000351, readdata = xxxxxxxx
ALUA = bfc00d44, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         849 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000351, readdata = xxxxxxxx
ALUA = bfc00d44, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         850 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000351, readdata = xxxxxxxx
ALUA = bfc00d48, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000352, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         850 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000352, readdata = xxxxxxxx
ALUA = bfc00d48, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         851 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00d4c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000353, readdata = xxxxxxxx
ALUA = bfc00d4c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         851 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000353, readdata = xxxxxxxx
ALUA = bfc00d4c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         852 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000353, readdata = xxxxxxxx
ALUA = bfc00d50, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000354, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         852 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000354, readdata = xxxxxxxx
ALUA = bfc00d50, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         853 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00d54, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000355, readdata = xxxxxxxx
ALUA = bfc00d54, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         853 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000355, readdata = xxxxxxxx
ALUA = bfc00d54, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         854 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000355, readdata = xxxxxxxx
ALUA = bfc00d58, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000356, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         854 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000356, readdata = xxxxxxxx
ALUA = bfc00d58, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         855 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00d5c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000357, readdata = xxxxxxxx
ALUA = bfc00d5c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         855 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000357, readdata = xxxxxxxx
ALUA = bfc00d5c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         856 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000357, readdata = xxxxxxxx
ALUA = bfc00d60, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000358, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         856 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000358, readdata = xxxxxxxx
ALUA = bfc00d60, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         857 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00d64, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000359, readdata = xxxxxxxx
ALUA = bfc00d64, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         857 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000359, readdata = xxxxxxxx
ALUA = bfc00d64, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         858 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000359, readdata = xxxxxxxx
ALUA = bfc00d68, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000035a, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         858 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000035a, readdata = xxxxxxxx
ALUA = bfc00d68, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         859 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00d6c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000035b, readdata = xxxxxxxx
ALUA = bfc00d6c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         859 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000035b, readdata = xxxxxxxx
ALUA = bfc00d6c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         860 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000035b, readdata = xxxxxxxx
ALUA = bfc00d70, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000035c, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         860 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000035c, readdata = xxxxxxxx
ALUA = bfc00d70, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         861 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00d74, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000035d, readdata = xxxxxxxx
ALUA = bfc00d74, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         861 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000035d, readdata = xxxxxxxx
ALUA = bfc00d74, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         862 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000035d, readdata = xxxxxxxx
ALUA = bfc00d78, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000035e, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         862 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000035e, readdata = xxxxxxxx
ALUA = bfc00d78, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         863 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00d7c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000035f, readdata = xxxxxxxx
ALUA = bfc00d7c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         863 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000035f, readdata = xxxxxxxx
ALUA = bfc00d7c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         864 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000035f, readdata = xxxxxxxx
ALUA = bfc00d80, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000360, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         864 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000360, readdata = xxxxxxxx
ALUA = bfc00d80, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         865 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00d84, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000361, readdata = xxxxxxxx
ALUA = bfc00d84, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         865 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000361, readdata = xxxxxxxx
ALUA = bfc00d84, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         866 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000361, readdata = xxxxxxxx
ALUA = bfc00d88, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000362, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         866 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000362, readdata = xxxxxxxx
ALUA = bfc00d88, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         867 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00d8c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000363, readdata = xxxxxxxx
ALUA = bfc00d8c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         867 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000363, readdata = xxxxxxxx
ALUA = bfc00d8c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         868 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000363, readdata = xxxxxxxx
ALUA = bfc00d90, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000364, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         868 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000364, readdata = xxxxxxxx
ALUA = bfc00d90, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         869 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00d94, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000365, readdata = xxxxxxxx
ALUA = bfc00d94, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         869 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000365, readdata = xxxxxxxx
ALUA = bfc00d94, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         870 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000365, readdata = xxxxxxxx
ALUA = bfc00d98, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000366, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         870 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000366, readdata = xxxxxxxx
ALUA = bfc00d98, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         871 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00d9c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000367, readdata = xxxxxxxx
ALUA = bfc00d9c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         871 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000367, readdata = xxxxxxxx
ALUA = bfc00d9c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         872 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000367, readdata = xxxxxxxx
ALUA = bfc00da0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000368, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         872 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000368, readdata = xxxxxxxx
ALUA = bfc00da0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         873 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00da4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000369, readdata = xxxxxxxx
ALUA = bfc00da4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         873 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000369, readdata = xxxxxxxx
ALUA = bfc00da4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         874 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000369, readdata = xxxxxxxx
ALUA = bfc00da8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000036a, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         874 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000036a, readdata = xxxxxxxx
ALUA = bfc00da8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         875 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00dac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000036b, readdata = xxxxxxxx
ALUA = bfc00dac, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         875 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000036b, readdata = xxxxxxxx
ALUA = bfc00dac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         876 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000036b, readdata = xxxxxxxx
ALUA = bfc00db0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000036c, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         876 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000036c, readdata = xxxxxxxx
ALUA = bfc00db0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         877 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00db4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000036d, readdata = xxxxxxxx
ALUA = bfc00db4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         877 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000036d, readdata = xxxxxxxx
ALUA = bfc00db4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         878 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000036d, readdata = xxxxxxxx
ALUA = bfc00db8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000036e, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         878 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000036e, readdata = xxxxxxxx
ALUA = bfc00db8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         879 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00dbc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000036f, readdata = xxxxxxxx
ALUA = bfc00dbc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         879 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000036f, readdata = xxxxxxxx
ALUA = bfc00dbc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         880 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000036f, readdata = xxxxxxxx
ALUA = bfc00dc0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000370, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         880 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000370, readdata = xxxxxxxx
ALUA = bfc00dc0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         881 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00dc4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000371, readdata = xxxxxxxx
ALUA = bfc00dc4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         881 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000371, readdata = xxxxxxxx
ALUA = bfc00dc4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         882 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000371, readdata = xxxxxxxx
ALUA = bfc00dc8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000372, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         882 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000372, readdata = xxxxxxxx
ALUA = bfc00dc8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         883 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00dcc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000373, readdata = xxxxxxxx
ALUA = bfc00dcc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         883 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000373, readdata = xxxxxxxx
ALUA = bfc00dcc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         884 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000373, readdata = xxxxxxxx
ALUA = bfc00dd0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000374, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         884 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000374, readdata = xxxxxxxx
ALUA = bfc00dd0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         885 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00dd4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000375, readdata = xxxxxxxx
ALUA = bfc00dd4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         885 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000375, readdata = xxxxxxxx
ALUA = bfc00dd4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         886 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000375, readdata = xxxxxxxx
ALUA = bfc00dd8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000376, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         886 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000376, readdata = xxxxxxxx
ALUA = bfc00dd8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         887 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00ddc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000377, readdata = xxxxxxxx
ALUA = bfc00ddc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         887 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000377, readdata = xxxxxxxx
ALUA = bfc00ddc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         888 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000377, readdata = xxxxxxxx
ALUA = bfc00de0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000378, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         888 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000378, readdata = xxxxxxxx
ALUA = bfc00de0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         889 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00de4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000379, readdata = xxxxxxxx
ALUA = bfc00de4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         889 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000379, readdata = xxxxxxxx
ALUA = bfc00de4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         890 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000379, readdata = xxxxxxxx
ALUA = bfc00de8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000037a, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         890 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000037a, readdata = xxxxxxxx
ALUA = bfc00de8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         891 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00dec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000037b, readdata = xxxxxxxx
ALUA = bfc00dec, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         891 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000037b, readdata = xxxxxxxx
ALUA = bfc00dec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         892 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000037b, readdata = xxxxxxxx
ALUA = bfc00df0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000037c, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         892 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000037c, readdata = xxxxxxxx
ALUA = bfc00df0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         893 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00df4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000037d, readdata = xxxxxxxx
ALUA = bfc00df4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         893 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000037d, readdata = xxxxxxxx
ALUA = bfc00df4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         894 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000037d, readdata = xxxxxxxx
ALUA = bfc00df8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000037e, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         894 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000037e, readdata = xxxxxxxx
ALUA = bfc00df8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         895 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00dfc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000037f, readdata = xxxxxxxx
ALUA = bfc00dfc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         895 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000037f, readdata = xxxxxxxx
ALUA = bfc00dfc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         896 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000037f, readdata = xxxxxxxx
ALUA = bfc00e00, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000380, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         896 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000380, readdata = xxxxxxxx
ALUA = bfc00e00, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         897 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00e04, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000381, readdata = xxxxxxxx
ALUA = bfc00e04, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         897 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000381, readdata = xxxxxxxx
ALUA = bfc00e04, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         898 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000381, readdata = xxxxxxxx
ALUA = bfc00e08, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000382, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         898 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000382, readdata = xxxxxxxx
ALUA = bfc00e08, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         899 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00e0c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000383, readdata = xxxxxxxx
ALUA = bfc00e0c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         899 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000383, readdata = xxxxxxxx
ALUA = bfc00e0c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         900 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000383, readdata = xxxxxxxx
ALUA = bfc00e10, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000384, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         900 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000384, readdata = xxxxxxxx
ALUA = bfc00e10, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         901 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00e14, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000385, readdata = xxxxxxxx
ALUA = bfc00e14, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         901 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000385, readdata = xxxxxxxx
ALUA = bfc00e14, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         902 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000385, readdata = xxxxxxxx
ALUA = bfc00e18, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000386, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         902 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000386, readdata = xxxxxxxx
ALUA = bfc00e18, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         903 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00e1c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000387, readdata = xxxxxxxx
ALUA = bfc00e1c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         903 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000387, readdata = xxxxxxxx
ALUA = bfc00e1c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         904 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000387, readdata = xxxxxxxx
ALUA = bfc00e20, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000388, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         904 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000388, readdata = xxxxxxxx
ALUA = bfc00e20, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         905 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00e24, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000389, readdata = xxxxxxxx
ALUA = bfc00e24, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         905 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000389, readdata = xxxxxxxx
ALUA = bfc00e24, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         906 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000389, readdata = xxxxxxxx
ALUA = bfc00e28, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000038a, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         906 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000038a, readdata = xxxxxxxx
ALUA = bfc00e28, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         907 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00e2c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000038b, readdata = xxxxxxxx
ALUA = bfc00e2c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         907 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000038b, readdata = xxxxxxxx
ALUA = bfc00e2c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         908 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000038b, readdata = xxxxxxxx
ALUA = bfc00e30, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000038c, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         908 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000038c, readdata = xxxxxxxx
ALUA = bfc00e30, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         909 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00e34, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000038d, readdata = xxxxxxxx
ALUA = bfc00e34, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         909 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000038d, readdata = xxxxxxxx
ALUA = bfc00e34, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         910 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000038d, readdata = xxxxxxxx
ALUA = bfc00e38, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000038e, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         910 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000038e, readdata = xxxxxxxx
ALUA = bfc00e38, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         911 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00e3c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000038f, readdata = xxxxxxxx
ALUA = bfc00e3c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         911 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000038f, readdata = xxxxxxxx
ALUA = bfc00e3c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         912 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000038f, readdata = xxxxxxxx
ALUA = bfc00e40, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000390, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         912 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000390, readdata = xxxxxxxx
ALUA = bfc00e40, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         913 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00e44, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000391, readdata = xxxxxxxx
ALUA = bfc00e44, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         913 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000391, readdata = xxxxxxxx
ALUA = bfc00e44, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         914 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000391, readdata = xxxxxxxx
ALUA = bfc00e48, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000392, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         914 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000392, readdata = xxxxxxxx
ALUA = bfc00e48, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         915 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00e4c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000393, readdata = xxxxxxxx
ALUA = bfc00e4c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         915 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000393, readdata = xxxxxxxx
ALUA = bfc00e4c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         916 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000393, readdata = xxxxxxxx
ALUA = bfc00e50, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000394, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         916 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000394, readdata = xxxxxxxx
ALUA = bfc00e50, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         917 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00e54, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000395, readdata = xxxxxxxx
ALUA = bfc00e54, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         917 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000395, readdata = xxxxxxxx
ALUA = bfc00e54, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         918 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000395, readdata = xxxxxxxx
ALUA = bfc00e58, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000396, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         918 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000396, readdata = xxxxxxxx
ALUA = bfc00e58, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         919 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00e5c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000397, readdata = xxxxxxxx
ALUA = bfc00e5c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         919 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000397, readdata = xxxxxxxx
ALUA = bfc00e5c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         920 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000397, readdata = xxxxxxxx
ALUA = bfc00e60, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000398, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         920 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000398, readdata = xxxxxxxx
ALUA = bfc00e60, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         921 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00e64, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000399, readdata = xxxxxxxx
ALUA = bfc00e64, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         921 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000399, readdata = xxxxxxxx
ALUA = bfc00e64, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         922 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000399, readdata = xxxxxxxx
ALUA = bfc00e68, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000039a, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         922 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000039a, readdata = xxxxxxxx
ALUA = bfc00e68, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         923 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00e6c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000039b, readdata = xxxxxxxx
ALUA = bfc00e6c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         923 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000039b, readdata = xxxxxxxx
ALUA = bfc00e6c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         924 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000039b, readdata = xxxxxxxx
ALUA = bfc00e70, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000039c, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         924 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000039c, readdata = xxxxxxxx
ALUA = bfc00e70, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         925 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00e74, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000039d, readdata = xxxxxxxx
ALUA = bfc00e74, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         925 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000039d, readdata = xxxxxxxx
ALUA = bfc00e74, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         926 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000039d, readdata = xxxxxxxx
ALUA = bfc00e78, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000039e, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         926 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000039e, readdata = xxxxxxxx
ALUA = bfc00e78, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         927 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00e7c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000039f, readdata = xxxxxxxx
ALUA = bfc00e7c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         927 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000039f, readdata = xxxxxxxx
ALUA = bfc00e7c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         928 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000039f, readdata = xxxxxxxx
ALUA = bfc00e80, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003a0, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         928 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003a0, readdata = xxxxxxxx
ALUA = bfc00e80, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         929 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00e84, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003a1, readdata = xxxxxxxx
ALUA = bfc00e84, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         929 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003a1, readdata = xxxxxxxx
ALUA = bfc00e84, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         930 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000003a1, readdata = xxxxxxxx
ALUA = bfc00e88, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003a2, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         930 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003a2, readdata = xxxxxxxx
ALUA = bfc00e88, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         931 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00e8c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003a3, readdata = xxxxxxxx
ALUA = bfc00e8c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         931 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003a3, readdata = xxxxxxxx
ALUA = bfc00e8c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         932 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000003a3, readdata = xxxxxxxx
ALUA = bfc00e90, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003a4, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         932 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003a4, readdata = xxxxxxxx
ALUA = bfc00e90, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         933 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00e94, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003a5, readdata = xxxxxxxx
ALUA = bfc00e94, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         933 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003a5, readdata = xxxxxxxx
ALUA = bfc00e94, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         934 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000003a5, readdata = xxxxxxxx
ALUA = bfc00e98, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003a6, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         934 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003a6, readdata = xxxxxxxx
ALUA = bfc00e98, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         935 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00e9c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003a7, readdata = xxxxxxxx
ALUA = bfc00e9c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         935 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003a7, readdata = xxxxxxxx
ALUA = bfc00e9c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         936 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000003a7, readdata = xxxxxxxx
ALUA = bfc00ea0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003a8, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         936 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003a8, readdata = xxxxxxxx
ALUA = bfc00ea0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         937 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00ea4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003a9, readdata = xxxxxxxx
ALUA = bfc00ea4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         937 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003a9, readdata = xxxxxxxx
ALUA = bfc00ea4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         938 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000003a9, readdata = xxxxxxxx
ALUA = bfc00ea8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003aa, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         938 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003aa, readdata = xxxxxxxx
ALUA = bfc00ea8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         939 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00eac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003ab, readdata = xxxxxxxx
ALUA = bfc00eac, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         939 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003ab, readdata = xxxxxxxx
ALUA = bfc00eac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         940 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000003ab, readdata = xxxxxxxx
ALUA = bfc00eb0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003ac, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         940 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003ac, readdata = xxxxxxxx
ALUA = bfc00eb0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         941 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00eb4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003ad, readdata = xxxxxxxx
ALUA = bfc00eb4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         941 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003ad, readdata = xxxxxxxx
ALUA = bfc00eb4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         942 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000003ad, readdata = xxxxxxxx
ALUA = bfc00eb8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003ae, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         942 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003ae, readdata = xxxxxxxx
ALUA = bfc00eb8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         943 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00ebc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003af, readdata = xxxxxxxx
ALUA = bfc00ebc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         943 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003af, readdata = xxxxxxxx
ALUA = bfc00ebc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         944 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000003af, readdata = xxxxxxxx
ALUA = bfc00ec0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003b0, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         944 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003b0, readdata = xxxxxxxx
ALUA = bfc00ec0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         945 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00ec4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003b1, readdata = xxxxxxxx
ALUA = bfc00ec4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         945 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003b1, readdata = xxxxxxxx
ALUA = bfc00ec4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         946 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000003b1, readdata = xxxxxxxx
ALUA = bfc00ec8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003b2, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         946 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003b2, readdata = xxxxxxxx
ALUA = bfc00ec8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         947 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00ecc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003b3, readdata = xxxxxxxx
ALUA = bfc00ecc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         947 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003b3, readdata = xxxxxxxx
ALUA = bfc00ecc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         948 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000003b3, readdata = xxxxxxxx
ALUA = bfc00ed0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003b4, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         948 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003b4, readdata = xxxxxxxx
ALUA = bfc00ed0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         949 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00ed4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003b5, readdata = xxxxxxxx
ALUA = bfc00ed4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         949 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003b5, readdata = xxxxxxxx
ALUA = bfc00ed4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         950 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000003b5, readdata = xxxxxxxx
ALUA = bfc00ed8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003b6, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         950 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003b6, readdata = xxxxxxxx
ALUA = bfc00ed8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         951 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00edc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003b7, readdata = xxxxxxxx
ALUA = bfc00edc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         951 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003b7, readdata = xxxxxxxx
ALUA = bfc00edc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         952 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000003b7, readdata = xxxxxxxx
ALUA = bfc00ee0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003b8, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         952 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003b8, readdata = xxxxxxxx
ALUA = bfc00ee0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         953 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00ee4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003b9, readdata = xxxxxxxx
ALUA = bfc00ee4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         953 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003b9, readdata = xxxxxxxx
ALUA = bfc00ee4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         954 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000003b9, readdata = xxxxxxxx
ALUA = bfc00ee8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003ba, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         954 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003ba, readdata = xxxxxxxx
ALUA = bfc00ee8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         955 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00eec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003bb, readdata = xxxxxxxx
ALUA = bfc00eec, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         955 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003bb, readdata = xxxxxxxx
ALUA = bfc00eec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         956 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000003bb, readdata = xxxxxxxx
ALUA = bfc00ef0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003bc, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         956 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003bc, readdata = xxxxxxxx
ALUA = bfc00ef0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         957 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00ef4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003bd, readdata = xxxxxxxx
ALUA = bfc00ef4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         957 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003bd, readdata = xxxxxxxx
ALUA = bfc00ef4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         958 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000003bd, readdata = xxxxxxxx
ALUA = bfc00ef8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003be, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         958 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003be, readdata = xxxxxxxx
ALUA = bfc00ef8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         959 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00efc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003bf, readdata = xxxxxxxx
ALUA = bfc00efc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         959 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003bf, readdata = xxxxxxxx
ALUA = bfc00efc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         960 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000003bf, readdata = xxxxxxxx
ALUA = bfc00f00, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003c0, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         960 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003c0, readdata = xxxxxxxx
ALUA = bfc00f00, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         961 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00f04, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003c1, readdata = xxxxxxxx
ALUA = bfc00f04, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         961 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003c1, readdata = xxxxxxxx
ALUA = bfc00f04, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         962 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000003c1, readdata = xxxxxxxx
ALUA = bfc00f08, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003c2, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         962 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003c2, readdata = xxxxxxxx
ALUA = bfc00f08, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         963 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00f0c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003c3, readdata = xxxxxxxx
ALUA = bfc00f0c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         963 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003c3, readdata = xxxxxxxx
ALUA = bfc00f0c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         964 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000003c3, readdata = xxxxxxxx
ALUA = bfc00f10, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003c4, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         964 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003c4, readdata = xxxxxxxx
ALUA = bfc00f10, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         965 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00f14, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003c5, readdata = xxxxxxxx
ALUA = bfc00f14, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         965 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003c5, readdata = xxxxxxxx
ALUA = bfc00f14, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         966 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000003c5, readdata = xxxxxxxx
ALUA = bfc00f18, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003c6, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         966 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003c6, readdata = xxxxxxxx
ALUA = bfc00f18, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         967 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00f1c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003c7, readdata = xxxxxxxx
ALUA = bfc00f1c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         967 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003c7, readdata = xxxxxxxx
ALUA = bfc00f1c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         968 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000003c7, readdata = xxxxxxxx
ALUA = bfc00f20, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003c8, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         968 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003c8, readdata = xxxxxxxx
ALUA = bfc00f20, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         969 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00f24, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003c9, readdata = xxxxxxxx
ALUA = bfc00f24, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         969 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003c9, readdata = xxxxxxxx
ALUA = bfc00f24, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         970 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000003c9, readdata = xxxxxxxx
ALUA = bfc00f28, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003ca, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         970 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003ca, readdata = xxxxxxxx
ALUA = bfc00f28, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         971 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00f2c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003cb, readdata = xxxxxxxx
ALUA = bfc00f2c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         971 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003cb, readdata = xxxxxxxx
ALUA = bfc00f2c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         972 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000003cb, readdata = xxxxxxxx
ALUA = bfc00f30, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003cc, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         972 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003cc, readdata = xxxxxxxx
ALUA = bfc00f30, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         973 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00f34, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003cd, readdata = xxxxxxxx
ALUA = bfc00f34, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         973 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003cd, readdata = xxxxxxxx
ALUA = bfc00f34, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         974 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000003cd, readdata = xxxxxxxx
ALUA = bfc00f38, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003ce, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         974 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003ce, readdata = xxxxxxxx
ALUA = bfc00f38, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         975 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00f3c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003cf, readdata = xxxxxxxx
ALUA = bfc00f3c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         975 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003cf, readdata = xxxxxxxx
ALUA = bfc00f3c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         976 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000003cf, readdata = xxxxxxxx
ALUA = bfc00f40, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003d0, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         976 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003d0, readdata = xxxxxxxx
ALUA = bfc00f40, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         977 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00f44, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003d1, readdata = xxxxxxxx
ALUA = bfc00f44, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         977 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003d1, readdata = xxxxxxxx
ALUA = bfc00f44, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         978 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000003d1, readdata = xxxxxxxx
ALUA = bfc00f48, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003d2, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         978 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003d2, readdata = xxxxxxxx
ALUA = bfc00f48, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         979 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00f4c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003d3, readdata = xxxxxxxx
ALUA = bfc00f4c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         979 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003d3, readdata = xxxxxxxx
ALUA = bfc00f4c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         980 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000003d3, readdata = xxxxxxxx
ALUA = bfc00f50, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003d4, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         980 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003d4, readdata = xxxxxxxx
ALUA = bfc00f50, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         981 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00f54, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003d5, readdata = xxxxxxxx
ALUA = bfc00f54, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         981 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003d5, readdata = xxxxxxxx
ALUA = bfc00f54, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         982 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000003d5, readdata = xxxxxxxx
ALUA = bfc00f58, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003d6, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         982 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003d6, readdata = xxxxxxxx
ALUA = bfc00f58, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         983 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00f5c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003d7, readdata = xxxxxxxx
ALUA = bfc00f5c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         983 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003d7, readdata = xxxxxxxx
ALUA = bfc00f5c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         984 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000003d7, readdata = xxxxxxxx
ALUA = bfc00f60, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003d8, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         984 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003d8, readdata = xxxxxxxx
ALUA = bfc00f60, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         985 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00f64, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003d9, readdata = xxxxxxxx
ALUA = bfc00f64, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         985 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003d9, readdata = xxxxxxxx
ALUA = bfc00f64, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         986 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000003d9, readdata = xxxxxxxx
ALUA = bfc00f68, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003da, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         986 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003da, readdata = xxxxxxxx
ALUA = bfc00f68, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         987 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00f6c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003db, readdata = xxxxxxxx
ALUA = bfc00f6c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         987 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003db, readdata = xxxxxxxx
ALUA = bfc00f6c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         988 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000003db, readdata = xxxxxxxx
ALUA = bfc00f70, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003dc, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         988 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003dc, readdata = xxxxxxxx
ALUA = bfc00f70, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         989 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00f74, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003dd, readdata = xxxxxxxx
ALUA = bfc00f74, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         989 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003dd, readdata = xxxxxxxx
ALUA = bfc00f74, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         990 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000003dd, readdata = xxxxxxxx
ALUA = bfc00f78, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003de, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         990 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003de, readdata = xxxxxxxx
ALUA = bfc00f78, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         991 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00f7c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003df, readdata = xxxxxxxx
ALUA = bfc00f7c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         991 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003df, readdata = xxxxxxxx
ALUA = bfc00f7c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         992 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000003df, readdata = xxxxxxxx
ALUA = bfc00f80, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003e0, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         992 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003e0, readdata = xxxxxxxx
ALUA = bfc00f80, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         993 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00f84, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003e1, readdata = xxxxxxxx
ALUA = bfc00f84, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         993 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003e1, readdata = xxxxxxxx
ALUA = bfc00f84, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         994 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000003e1, readdata = xxxxxxxx
ALUA = bfc00f88, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003e2, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         994 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003e2, readdata = xxxxxxxx
ALUA = bfc00f88, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         995 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00f8c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003e3, readdata = xxxxxxxx
ALUA = bfc00f8c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         995 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003e3, readdata = xxxxxxxx
ALUA = bfc00f8c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         996 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000003e3, readdata = xxxxxxxx
ALUA = bfc00f90, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003e4, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         996 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003e4, readdata = xxxxxxxx
ALUA = bfc00f90, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         997 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00f94, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003e5, readdata = xxxxxxxx
ALUA = bfc00f94, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         997 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003e5, readdata = xxxxxxxx
ALUA = bfc00f94, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         998 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000003e5, readdata = xxxxxxxx
ALUA = bfc00f98, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003e6, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         998 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003e6, readdata = xxxxxxxx
ALUA = bfc00f98, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         999 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00f9c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003e7, readdata = xxxxxxxx
ALUA = bfc00f9c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction         999 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003e7, readdata = xxxxxxxx
ALUA = bfc00f9c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1000 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000003e7, readdata = xxxxxxxx
ALUA = bfc00fa0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003e8, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1000 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003e8, readdata = xxxxxxxx
ALUA = bfc00fa0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1001 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00fa4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003e9, readdata = xxxxxxxx
ALUA = bfc00fa4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1001 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003e9, readdata = xxxxxxxx
ALUA = bfc00fa4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1002 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000003e9, readdata = xxxxxxxx
ALUA = bfc00fa8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003ea, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1002 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003ea, readdata = xxxxxxxx
ALUA = bfc00fa8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1003 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00fac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003eb, readdata = xxxxxxxx
ALUA = bfc00fac, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1003 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003eb, readdata = xxxxxxxx
ALUA = bfc00fac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1004 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000003eb, readdata = xxxxxxxx
ALUA = bfc00fb0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003ec, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1004 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003ec, readdata = xxxxxxxx
ALUA = bfc00fb0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1005 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00fb4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003ed, readdata = xxxxxxxx
ALUA = bfc00fb4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1005 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003ed, readdata = xxxxxxxx
ALUA = bfc00fb4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1006 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000003ed, readdata = xxxxxxxx
ALUA = bfc00fb8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003ee, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1006 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003ee, readdata = xxxxxxxx
ALUA = bfc00fb8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1007 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00fbc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003ef, readdata = xxxxxxxx
ALUA = bfc00fbc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1007 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003ef, readdata = xxxxxxxx
ALUA = bfc00fbc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1008 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000003ef, readdata = xxxxxxxx
ALUA = bfc00fc0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003f0, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1008 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003f0, readdata = xxxxxxxx
ALUA = bfc00fc0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1009 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00fc4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003f1, readdata = xxxxxxxx
ALUA = bfc00fc4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1009 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003f1, readdata = xxxxxxxx
ALUA = bfc00fc4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1010 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000003f1, readdata = xxxxxxxx
ALUA = bfc00fc8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003f2, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1010 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003f2, readdata = xxxxxxxx
ALUA = bfc00fc8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1011 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00fcc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003f3, readdata = xxxxxxxx
ALUA = bfc00fcc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1011 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003f3, readdata = xxxxxxxx
ALUA = bfc00fcc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1012 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000003f3, readdata = xxxxxxxx
ALUA = bfc00fd0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003f4, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1012 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003f4, readdata = xxxxxxxx
ALUA = bfc00fd0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1013 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00fd4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003f5, readdata = xxxxxxxx
ALUA = bfc00fd4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1013 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003f5, readdata = xxxxxxxx
ALUA = bfc00fd4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1014 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000003f5, readdata = xxxxxxxx
ALUA = bfc00fd8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003f6, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1014 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003f6, readdata = xxxxxxxx
ALUA = bfc00fd8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1015 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00fdc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003f7, readdata = xxxxxxxx
ALUA = bfc00fdc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1015 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003f7, readdata = xxxxxxxx
ALUA = bfc00fdc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1016 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000003f7, readdata = xxxxxxxx
ALUA = bfc00fe0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003f8, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1016 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003f8, readdata = xxxxxxxx
ALUA = bfc00fe0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1017 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00fe4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003f9, readdata = xxxxxxxx
ALUA = bfc00fe4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1017 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003f9, readdata = xxxxxxxx
ALUA = bfc00fe4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1018 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000003f9, readdata = xxxxxxxx
ALUA = bfc00fe8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003fa, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1018 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003fa, readdata = xxxxxxxx
ALUA = bfc00fe8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1019 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00fec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003fb, readdata = xxxxxxxx
ALUA = bfc00fec, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1019 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003fb, readdata = xxxxxxxx
ALUA = bfc00fec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1020 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000003fb, readdata = xxxxxxxx
ALUA = bfc00ff0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003fc, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1020 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003fc, readdata = xxxxxxxx
ALUA = bfc00ff0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1021 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00ff4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003fd, readdata = xxxxxxxx
ALUA = bfc00ff4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1021 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003fd, readdata = xxxxxxxx
ALUA = bfc00ff4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1022 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000003fd, readdata = xxxxxxxx
ALUA = bfc00ff8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003fe, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1022 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003fe, readdata = xxxxxxxx
ALUA = bfc00ff8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1023 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc00ffc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000003ff, readdata = xxxxxxxx
ALUA = bfc00ffc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1023 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000003ff, readdata = xxxxxxxx
ALUA = bfc00ffc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1024 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000003ff, readdata = xxxxxxxx
ALUA = bfc01000, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000400, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1024 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000400, readdata = xxxxxxxx
ALUA = bfc01000, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1025 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01004, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000401, readdata = xxxxxxxx
ALUA = bfc01004, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1025 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000401, readdata = xxxxxxxx
ALUA = bfc01004, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1026 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000401, readdata = xxxxxxxx
ALUA = bfc01008, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000402, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1026 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000402, readdata = xxxxxxxx
ALUA = bfc01008, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1027 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0100c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000403, readdata = xxxxxxxx
ALUA = bfc0100c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1027 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000403, readdata = xxxxxxxx
ALUA = bfc0100c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1028 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000403, readdata = xxxxxxxx
ALUA = bfc01010, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000404, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1028 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000404, readdata = xxxxxxxx
ALUA = bfc01010, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1029 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01014, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000405, readdata = xxxxxxxx
ALUA = bfc01014, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1029 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000405, readdata = xxxxxxxx
ALUA = bfc01014, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1030 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000405, readdata = xxxxxxxx
ALUA = bfc01018, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000406, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1030 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000406, readdata = xxxxxxxx
ALUA = bfc01018, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1031 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0101c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000407, readdata = xxxxxxxx
ALUA = bfc0101c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1031 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000407, readdata = xxxxxxxx
ALUA = bfc0101c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1032 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000407, readdata = xxxxxxxx
ALUA = bfc01020, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000408, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1032 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000408, readdata = xxxxxxxx
ALUA = bfc01020, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1033 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01024, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000409, readdata = xxxxxxxx
ALUA = bfc01024, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1033 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000409, readdata = xxxxxxxx
ALUA = bfc01024, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1034 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000409, readdata = xxxxxxxx
ALUA = bfc01028, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000040a, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1034 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000040a, readdata = xxxxxxxx
ALUA = bfc01028, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1035 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0102c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000040b, readdata = xxxxxxxx
ALUA = bfc0102c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1035 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000040b, readdata = xxxxxxxx
ALUA = bfc0102c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1036 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000040b, readdata = xxxxxxxx
ALUA = bfc01030, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000040c, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1036 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000040c, readdata = xxxxxxxx
ALUA = bfc01030, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1037 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01034, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000040d, readdata = xxxxxxxx
ALUA = bfc01034, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1037 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000040d, readdata = xxxxxxxx
ALUA = bfc01034, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1038 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000040d, readdata = xxxxxxxx
ALUA = bfc01038, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000040e, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1038 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000040e, readdata = xxxxxxxx
ALUA = bfc01038, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1039 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0103c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000040f, readdata = xxxxxxxx
ALUA = bfc0103c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1039 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000040f, readdata = xxxxxxxx
ALUA = bfc0103c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1040 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000040f, readdata = xxxxxxxx
ALUA = bfc01040, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000410, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1040 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000410, readdata = xxxxxxxx
ALUA = bfc01040, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1041 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01044, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000411, readdata = xxxxxxxx
ALUA = bfc01044, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1041 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000411, readdata = xxxxxxxx
ALUA = bfc01044, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1042 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000411, readdata = xxxxxxxx
ALUA = bfc01048, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000412, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1042 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000412, readdata = xxxxxxxx
ALUA = bfc01048, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1043 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0104c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000413, readdata = xxxxxxxx
ALUA = bfc0104c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1043 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000413, readdata = xxxxxxxx
ALUA = bfc0104c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1044 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000413, readdata = xxxxxxxx
ALUA = bfc01050, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000414, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1044 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000414, readdata = xxxxxxxx
ALUA = bfc01050, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1045 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01054, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000415, readdata = xxxxxxxx
ALUA = bfc01054, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1045 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000415, readdata = xxxxxxxx
ALUA = bfc01054, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1046 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000415, readdata = xxxxxxxx
ALUA = bfc01058, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000416, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1046 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000416, readdata = xxxxxxxx
ALUA = bfc01058, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1047 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0105c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000417, readdata = xxxxxxxx
ALUA = bfc0105c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1047 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000417, readdata = xxxxxxxx
ALUA = bfc0105c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1048 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000417, readdata = xxxxxxxx
ALUA = bfc01060, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000418, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1048 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000418, readdata = xxxxxxxx
ALUA = bfc01060, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1049 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01064, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000419, readdata = xxxxxxxx
ALUA = bfc01064, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1049 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000419, readdata = xxxxxxxx
ALUA = bfc01064, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1050 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000419, readdata = xxxxxxxx
ALUA = bfc01068, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000041a, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1050 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000041a, readdata = xxxxxxxx
ALUA = bfc01068, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1051 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0106c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000041b, readdata = xxxxxxxx
ALUA = bfc0106c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1051 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000041b, readdata = xxxxxxxx
ALUA = bfc0106c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1052 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000041b, readdata = xxxxxxxx
ALUA = bfc01070, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000041c, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1052 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000041c, readdata = xxxxxxxx
ALUA = bfc01070, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1053 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01074, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000041d, readdata = xxxxxxxx
ALUA = bfc01074, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1053 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000041d, readdata = xxxxxxxx
ALUA = bfc01074, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1054 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000041d, readdata = xxxxxxxx
ALUA = bfc01078, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000041e, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1054 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000041e, readdata = xxxxxxxx
ALUA = bfc01078, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1055 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0107c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000041f, readdata = xxxxxxxx
ALUA = bfc0107c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1055 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000041f, readdata = xxxxxxxx
ALUA = bfc0107c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1056 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000041f, readdata = xxxxxxxx
ALUA = bfc01080, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000420, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1056 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000420, readdata = xxxxxxxx
ALUA = bfc01080, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1057 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01084, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000421, readdata = xxxxxxxx
ALUA = bfc01084, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1057 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000421, readdata = xxxxxxxx
ALUA = bfc01084, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1058 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000421, readdata = xxxxxxxx
ALUA = bfc01088, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000422, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1058 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000422, readdata = xxxxxxxx
ALUA = bfc01088, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1059 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0108c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000423, readdata = xxxxxxxx
ALUA = bfc0108c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1059 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000423, readdata = xxxxxxxx
ALUA = bfc0108c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1060 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000423, readdata = xxxxxxxx
ALUA = bfc01090, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000424, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1060 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000424, readdata = xxxxxxxx
ALUA = bfc01090, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1061 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01094, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000425, readdata = xxxxxxxx
ALUA = bfc01094, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1061 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000425, readdata = xxxxxxxx
ALUA = bfc01094, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1062 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000425, readdata = xxxxxxxx
ALUA = bfc01098, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000426, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1062 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000426, readdata = xxxxxxxx
ALUA = bfc01098, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1063 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0109c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000427, readdata = xxxxxxxx
ALUA = bfc0109c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1063 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000427, readdata = xxxxxxxx
ALUA = bfc0109c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1064 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000427, readdata = xxxxxxxx
ALUA = bfc010a0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000428, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1064 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000428, readdata = xxxxxxxx
ALUA = bfc010a0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1065 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc010a4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000429, readdata = xxxxxxxx
ALUA = bfc010a4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1065 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000429, readdata = xxxxxxxx
ALUA = bfc010a4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1066 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000429, readdata = xxxxxxxx
ALUA = bfc010a8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000042a, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1066 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000042a, readdata = xxxxxxxx
ALUA = bfc010a8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1067 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc010ac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000042b, readdata = xxxxxxxx
ALUA = bfc010ac, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1067 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000042b, readdata = xxxxxxxx
ALUA = bfc010ac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1068 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000042b, readdata = xxxxxxxx
ALUA = bfc010b0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000042c, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1068 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000042c, readdata = xxxxxxxx
ALUA = bfc010b0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1069 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc010b4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000042d, readdata = xxxxxxxx
ALUA = bfc010b4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1069 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000042d, readdata = xxxxxxxx
ALUA = bfc010b4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1070 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000042d, readdata = xxxxxxxx
ALUA = bfc010b8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000042e, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1070 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000042e, readdata = xxxxxxxx
ALUA = bfc010b8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1071 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc010bc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000042f, readdata = xxxxxxxx
ALUA = bfc010bc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1071 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000042f, readdata = xxxxxxxx
ALUA = bfc010bc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1072 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000042f, readdata = xxxxxxxx
ALUA = bfc010c0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000430, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1072 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000430, readdata = xxxxxxxx
ALUA = bfc010c0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1073 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc010c4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000431, readdata = xxxxxxxx
ALUA = bfc010c4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1073 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000431, readdata = xxxxxxxx
ALUA = bfc010c4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1074 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000431, readdata = xxxxxxxx
ALUA = bfc010c8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000432, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1074 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000432, readdata = xxxxxxxx
ALUA = bfc010c8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1075 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc010cc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000433, readdata = xxxxxxxx
ALUA = bfc010cc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1075 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000433, readdata = xxxxxxxx
ALUA = bfc010cc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1076 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000433, readdata = xxxxxxxx
ALUA = bfc010d0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000434, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1076 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000434, readdata = xxxxxxxx
ALUA = bfc010d0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1077 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc010d4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000435, readdata = xxxxxxxx
ALUA = bfc010d4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1077 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000435, readdata = xxxxxxxx
ALUA = bfc010d4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1078 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000435, readdata = xxxxxxxx
ALUA = bfc010d8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000436, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1078 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000436, readdata = xxxxxxxx
ALUA = bfc010d8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1079 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc010dc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000437, readdata = xxxxxxxx
ALUA = bfc010dc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1079 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000437, readdata = xxxxxxxx
ALUA = bfc010dc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1080 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000437, readdata = xxxxxxxx
ALUA = bfc010e0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000438, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1080 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000438, readdata = xxxxxxxx
ALUA = bfc010e0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1081 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc010e4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000439, readdata = xxxxxxxx
ALUA = bfc010e4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1081 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000439, readdata = xxxxxxxx
ALUA = bfc010e4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1082 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000439, readdata = xxxxxxxx
ALUA = bfc010e8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000043a, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1082 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000043a, readdata = xxxxxxxx
ALUA = bfc010e8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1083 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc010ec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000043b, readdata = xxxxxxxx
ALUA = bfc010ec, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1083 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000043b, readdata = xxxxxxxx
ALUA = bfc010ec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1084 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000043b, readdata = xxxxxxxx
ALUA = bfc010f0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000043c, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1084 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000043c, readdata = xxxxxxxx
ALUA = bfc010f0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1085 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc010f4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000043d, readdata = xxxxxxxx
ALUA = bfc010f4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1085 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000043d, readdata = xxxxxxxx
ALUA = bfc010f4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1086 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000043d, readdata = xxxxxxxx
ALUA = bfc010f8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000043e, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1086 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000043e, readdata = xxxxxxxx
ALUA = bfc010f8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1087 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc010fc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000043f, readdata = xxxxxxxx
ALUA = bfc010fc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1087 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000043f, readdata = xxxxxxxx
ALUA = bfc010fc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1088 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000043f, readdata = xxxxxxxx
ALUA = bfc01100, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000440, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1088 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000440, readdata = xxxxxxxx
ALUA = bfc01100, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1089 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01104, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000441, readdata = xxxxxxxx
ALUA = bfc01104, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1089 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000441, readdata = xxxxxxxx
ALUA = bfc01104, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1090 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000441, readdata = xxxxxxxx
ALUA = bfc01108, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000442, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1090 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000442, readdata = xxxxxxxx
ALUA = bfc01108, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1091 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0110c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000443, readdata = xxxxxxxx
ALUA = bfc0110c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1091 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000443, readdata = xxxxxxxx
ALUA = bfc0110c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1092 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000443, readdata = xxxxxxxx
ALUA = bfc01110, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000444, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1092 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000444, readdata = xxxxxxxx
ALUA = bfc01110, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1093 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01114, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000445, readdata = xxxxxxxx
ALUA = bfc01114, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1093 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000445, readdata = xxxxxxxx
ALUA = bfc01114, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1094 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000445, readdata = xxxxxxxx
ALUA = bfc01118, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000446, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1094 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000446, readdata = xxxxxxxx
ALUA = bfc01118, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1095 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0111c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000447, readdata = xxxxxxxx
ALUA = bfc0111c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1095 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000447, readdata = xxxxxxxx
ALUA = bfc0111c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1096 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000447, readdata = xxxxxxxx
ALUA = bfc01120, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000448, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1096 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000448, readdata = xxxxxxxx
ALUA = bfc01120, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1097 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01124, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000449, readdata = xxxxxxxx
ALUA = bfc01124, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1097 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000449, readdata = xxxxxxxx
ALUA = bfc01124, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1098 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000449, readdata = xxxxxxxx
ALUA = bfc01128, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000044a, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1098 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000044a, readdata = xxxxxxxx
ALUA = bfc01128, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1099 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0112c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000044b, readdata = xxxxxxxx
ALUA = bfc0112c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1099 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000044b, readdata = xxxxxxxx
ALUA = bfc0112c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1100 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000044b, readdata = xxxxxxxx
ALUA = bfc01130, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000044c, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1100 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000044c, readdata = xxxxxxxx
ALUA = bfc01130, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1101 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01134, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000044d, readdata = xxxxxxxx
ALUA = bfc01134, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1101 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000044d, readdata = xxxxxxxx
ALUA = bfc01134, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1102 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000044d, readdata = xxxxxxxx
ALUA = bfc01138, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000044e, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1102 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000044e, readdata = xxxxxxxx
ALUA = bfc01138, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1103 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0113c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000044f, readdata = xxxxxxxx
ALUA = bfc0113c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1103 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000044f, readdata = xxxxxxxx
ALUA = bfc0113c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1104 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000044f, readdata = xxxxxxxx
ALUA = bfc01140, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000450, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1104 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000450, readdata = xxxxxxxx
ALUA = bfc01140, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1105 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01144, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000451, readdata = xxxxxxxx
ALUA = bfc01144, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1105 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000451, readdata = xxxxxxxx
ALUA = bfc01144, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1106 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000451, readdata = xxxxxxxx
ALUA = bfc01148, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000452, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1106 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000452, readdata = xxxxxxxx
ALUA = bfc01148, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1107 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0114c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000453, readdata = xxxxxxxx
ALUA = bfc0114c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1107 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000453, readdata = xxxxxxxx
ALUA = bfc0114c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1108 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000453, readdata = xxxxxxxx
ALUA = bfc01150, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000454, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1108 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000454, readdata = xxxxxxxx
ALUA = bfc01150, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1109 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01154, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000455, readdata = xxxxxxxx
ALUA = bfc01154, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1109 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000455, readdata = xxxxxxxx
ALUA = bfc01154, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1110 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000455, readdata = xxxxxxxx
ALUA = bfc01158, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000456, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1110 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000456, readdata = xxxxxxxx
ALUA = bfc01158, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1111 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0115c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000457, readdata = xxxxxxxx
ALUA = bfc0115c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1111 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000457, readdata = xxxxxxxx
ALUA = bfc0115c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1112 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000457, readdata = xxxxxxxx
ALUA = bfc01160, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000458, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1112 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000458, readdata = xxxxxxxx
ALUA = bfc01160, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1113 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01164, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000459, readdata = xxxxxxxx
ALUA = bfc01164, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1113 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000459, readdata = xxxxxxxx
ALUA = bfc01164, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1114 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000459, readdata = xxxxxxxx
ALUA = bfc01168, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000045a, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1114 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000045a, readdata = xxxxxxxx
ALUA = bfc01168, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1115 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0116c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000045b, readdata = xxxxxxxx
ALUA = bfc0116c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1115 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000045b, readdata = xxxxxxxx
ALUA = bfc0116c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1116 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000045b, readdata = xxxxxxxx
ALUA = bfc01170, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000045c, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1116 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000045c, readdata = xxxxxxxx
ALUA = bfc01170, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1117 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01174, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000045d, readdata = xxxxxxxx
ALUA = bfc01174, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1117 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000045d, readdata = xxxxxxxx
ALUA = bfc01174, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1118 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000045d, readdata = xxxxxxxx
ALUA = bfc01178, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000045e, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1118 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000045e, readdata = xxxxxxxx
ALUA = bfc01178, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1119 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0117c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000045f, readdata = xxxxxxxx
ALUA = bfc0117c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1119 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000045f, readdata = xxxxxxxx
ALUA = bfc0117c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1120 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000045f, readdata = xxxxxxxx
ALUA = bfc01180, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000460, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1120 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000460, readdata = xxxxxxxx
ALUA = bfc01180, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1121 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01184, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000461, readdata = xxxxxxxx
ALUA = bfc01184, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1121 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000461, readdata = xxxxxxxx
ALUA = bfc01184, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1122 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000461, readdata = xxxxxxxx
ALUA = bfc01188, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000462, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1122 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000462, readdata = xxxxxxxx
ALUA = bfc01188, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1123 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0118c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000463, readdata = xxxxxxxx
ALUA = bfc0118c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1123 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000463, readdata = xxxxxxxx
ALUA = bfc0118c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1124 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000463, readdata = xxxxxxxx
ALUA = bfc01190, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000464, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1124 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000464, readdata = xxxxxxxx
ALUA = bfc01190, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1125 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01194, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000465, readdata = xxxxxxxx
ALUA = bfc01194, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1125 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000465, readdata = xxxxxxxx
ALUA = bfc01194, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1126 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000465, readdata = xxxxxxxx
ALUA = bfc01198, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000466, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1126 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000466, readdata = xxxxxxxx
ALUA = bfc01198, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1127 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0119c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000467, readdata = xxxxxxxx
ALUA = bfc0119c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1127 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000467, readdata = xxxxxxxx
ALUA = bfc0119c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1128 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000467, readdata = xxxxxxxx
ALUA = bfc011a0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000468, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1128 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000468, readdata = xxxxxxxx
ALUA = bfc011a0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1129 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc011a4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000469, readdata = xxxxxxxx
ALUA = bfc011a4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1129 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000469, readdata = xxxxxxxx
ALUA = bfc011a4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1130 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000469, readdata = xxxxxxxx
ALUA = bfc011a8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000046a, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1130 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000046a, readdata = xxxxxxxx
ALUA = bfc011a8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1131 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc011ac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000046b, readdata = xxxxxxxx
ALUA = bfc011ac, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1131 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000046b, readdata = xxxxxxxx
ALUA = bfc011ac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1132 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000046b, readdata = xxxxxxxx
ALUA = bfc011b0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000046c, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1132 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000046c, readdata = xxxxxxxx
ALUA = bfc011b0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1133 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc011b4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000046d, readdata = xxxxxxxx
ALUA = bfc011b4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1133 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000046d, readdata = xxxxxxxx
ALUA = bfc011b4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1134 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000046d, readdata = xxxxxxxx
ALUA = bfc011b8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000046e, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1134 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000046e, readdata = xxxxxxxx
ALUA = bfc011b8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1135 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc011bc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000046f, readdata = xxxxxxxx
ALUA = bfc011bc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1135 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000046f, readdata = xxxxxxxx
ALUA = bfc011bc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1136 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000046f, readdata = xxxxxxxx
ALUA = bfc011c0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000470, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1136 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000470, readdata = xxxxxxxx
ALUA = bfc011c0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1137 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc011c4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000471, readdata = xxxxxxxx
ALUA = bfc011c4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1137 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000471, readdata = xxxxxxxx
ALUA = bfc011c4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1138 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000471, readdata = xxxxxxxx
ALUA = bfc011c8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000472, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1138 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000472, readdata = xxxxxxxx
ALUA = bfc011c8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1139 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc011cc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000473, readdata = xxxxxxxx
ALUA = bfc011cc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1139 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000473, readdata = xxxxxxxx
ALUA = bfc011cc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1140 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000473, readdata = xxxxxxxx
ALUA = bfc011d0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000474, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1140 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000474, readdata = xxxxxxxx
ALUA = bfc011d0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1141 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc011d4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000475, readdata = xxxxxxxx
ALUA = bfc011d4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1141 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000475, readdata = xxxxxxxx
ALUA = bfc011d4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1142 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000475, readdata = xxxxxxxx
ALUA = bfc011d8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000476, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1142 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000476, readdata = xxxxxxxx
ALUA = bfc011d8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1143 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc011dc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000477, readdata = xxxxxxxx
ALUA = bfc011dc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1143 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000477, readdata = xxxxxxxx
ALUA = bfc011dc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1144 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000477, readdata = xxxxxxxx
ALUA = bfc011e0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000478, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1144 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000478, readdata = xxxxxxxx
ALUA = bfc011e0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1145 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc011e4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000479, readdata = xxxxxxxx
ALUA = bfc011e4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1145 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000479, readdata = xxxxxxxx
ALUA = bfc011e4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1146 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000479, readdata = xxxxxxxx
ALUA = bfc011e8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000047a, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1146 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000047a, readdata = xxxxxxxx
ALUA = bfc011e8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1147 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc011ec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000047b, readdata = xxxxxxxx
ALUA = bfc011ec, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1147 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000047b, readdata = xxxxxxxx
ALUA = bfc011ec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1148 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000047b, readdata = xxxxxxxx
ALUA = bfc011f0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000047c, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1148 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000047c, readdata = xxxxxxxx
ALUA = bfc011f0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1149 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc011f4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000047d, readdata = xxxxxxxx
ALUA = bfc011f4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1149 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000047d, readdata = xxxxxxxx
ALUA = bfc011f4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1150 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000047d, readdata = xxxxxxxx
ALUA = bfc011f8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000047e, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1150 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000047e, readdata = xxxxxxxx
ALUA = bfc011f8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1151 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc011fc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000047f, readdata = xxxxxxxx
ALUA = bfc011fc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1151 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000047f, readdata = xxxxxxxx
ALUA = bfc011fc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1152 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000047f, readdata = xxxxxxxx
ALUA = bfc01200, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000480, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1152 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000480, readdata = xxxxxxxx
ALUA = bfc01200, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1153 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01204, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000481, readdata = xxxxxxxx
ALUA = bfc01204, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1153 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000481, readdata = xxxxxxxx
ALUA = bfc01204, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1154 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000481, readdata = xxxxxxxx
ALUA = bfc01208, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000482, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1154 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000482, readdata = xxxxxxxx
ALUA = bfc01208, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1155 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0120c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000483, readdata = xxxxxxxx
ALUA = bfc0120c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1155 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000483, readdata = xxxxxxxx
ALUA = bfc0120c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1156 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000483, readdata = xxxxxxxx
ALUA = bfc01210, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000484, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1156 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000484, readdata = xxxxxxxx
ALUA = bfc01210, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1157 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01214, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000485, readdata = xxxxxxxx
ALUA = bfc01214, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1157 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000485, readdata = xxxxxxxx
ALUA = bfc01214, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1158 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000485, readdata = xxxxxxxx
ALUA = bfc01218, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000486, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1158 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000486, readdata = xxxxxxxx
ALUA = bfc01218, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1159 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0121c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000487, readdata = xxxxxxxx
ALUA = bfc0121c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1159 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000487, readdata = xxxxxxxx
ALUA = bfc0121c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1160 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000487, readdata = xxxxxxxx
ALUA = bfc01220, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000488, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1160 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000488, readdata = xxxxxxxx
ALUA = bfc01220, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1161 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01224, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000489, readdata = xxxxxxxx
ALUA = bfc01224, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1161 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000489, readdata = xxxxxxxx
ALUA = bfc01224, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1162 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000489, readdata = xxxxxxxx
ALUA = bfc01228, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000048a, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1162 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000048a, readdata = xxxxxxxx
ALUA = bfc01228, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1163 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0122c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000048b, readdata = xxxxxxxx
ALUA = bfc0122c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1163 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000048b, readdata = xxxxxxxx
ALUA = bfc0122c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1164 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000048b, readdata = xxxxxxxx
ALUA = bfc01230, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000048c, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1164 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000048c, readdata = xxxxxxxx
ALUA = bfc01230, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1165 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01234, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000048d, readdata = xxxxxxxx
ALUA = bfc01234, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1165 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000048d, readdata = xxxxxxxx
ALUA = bfc01234, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1166 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000048d, readdata = xxxxxxxx
ALUA = bfc01238, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000048e, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1166 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000048e, readdata = xxxxxxxx
ALUA = bfc01238, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1167 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0123c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000048f, readdata = xxxxxxxx
ALUA = bfc0123c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1167 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000048f, readdata = xxxxxxxx
ALUA = bfc0123c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1168 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000048f, readdata = xxxxxxxx
ALUA = bfc01240, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000490, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1168 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000490, readdata = xxxxxxxx
ALUA = bfc01240, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1169 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01244, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000491, readdata = xxxxxxxx
ALUA = bfc01244, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1169 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000491, readdata = xxxxxxxx
ALUA = bfc01244, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1170 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000491, readdata = xxxxxxxx
ALUA = bfc01248, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000492, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1170 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000492, readdata = xxxxxxxx
ALUA = bfc01248, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1171 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0124c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000493, readdata = xxxxxxxx
ALUA = bfc0124c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1171 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000493, readdata = xxxxxxxx
ALUA = bfc0124c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1172 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000493, readdata = xxxxxxxx
ALUA = bfc01250, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000494, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1172 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000494, readdata = xxxxxxxx
ALUA = bfc01250, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1173 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01254, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000495, readdata = xxxxxxxx
ALUA = bfc01254, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1173 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000495, readdata = xxxxxxxx
ALUA = bfc01254, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1174 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000495, readdata = xxxxxxxx
ALUA = bfc01258, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000496, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1174 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000496, readdata = xxxxxxxx
ALUA = bfc01258, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1175 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0125c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000497, readdata = xxxxxxxx
ALUA = bfc0125c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1175 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000497, readdata = xxxxxxxx
ALUA = bfc0125c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1176 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000497, readdata = xxxxxxxx
ALUA = bfc01260, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000498, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1176 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000498, readdata = xxxxxxxx
ALUA = bfc01260, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1177 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01264, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000499, readdata = xxxxxxxx
ALUA = bfc01264, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1177 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000499, readdata = xxxxxxxx
ALUA = bfc01264, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1178 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000499, readdata = xxxxxxxx
ALUA = bfc01268, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000049a, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1178 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000049a, readdata = xxxxxxxx
ALUA = bfc01268, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1179 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0126c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000049b, readdata = xxxxxxxx
ALUA = bfc0126c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1179 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000049b, readdata = xxxxxxxx
ALUA = bfc0126c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1180 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000049b, readdata = xxxxxxxx
ALUA = bfc01270, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000049c, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1180 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000049c, readdata = xxxxxxxx
ALUA = bfc01270, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1181 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01274, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000049d, readdata = xxxxxxxx
ALUA = bfc01274, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1181 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000049d, readdata = xxxxxxxx
ALUA = bfc01274, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1182 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000049d, readdata = xxxxxxxx
ALUA = bfc01278, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000049e, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1182 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000049e, readdata = xxxxxxxx
ALUA = bfc01278, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1183 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0127c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000049f, readdata = xxxxxxxx
ALUA = bfc0127c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1183 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000049f, readdata = xxxxxxxx
ALUA = bfc0127c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1184 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000049f, readdata = xxxxxxxx
ALUA = bfc01280, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004a0, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1184 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004a0, readdata = xxxxxxxx
ALUA = bfc01280, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1185 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01284, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004a1, readdata = xxxxxxxx
ALUA = bfc01284, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1185 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004a1, readdata = xxxxxxxx
ALUA = bfc01284, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1186 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000004a1, readdata = xxxxxxxx
ALUA = bfc01288, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004a2, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1186 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004a2, readdata = xxxxxxxx
ALUA = bfc01288, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1187 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0128c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004a3, readdata = xxxxxxxx
ALUA = bfc0128c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1187 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004a3, readdata = xxxxxxxx
ALUA = bfc0128c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1188 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000004a3, readdata = xxxxxxxx
ALUA = bfc01290, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004a4, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1188 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004a4, readdata = xxxxxxxx
ALUA = bfc01290, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1189 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01294, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004a5, readdata = xxxxxxxx
ALUA = bfc01294, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1189 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004a5, readdata = xxxxxxxx
ALUA = bfc01294, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1190 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000004a5, readdata = xxxxxxxx
ALUA = bfc01298, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004a6, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1190 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004a6, readdata = xxxxxxxx
ALUA = bfc01298, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1191 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0129c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004a7, readdata = xxxxxxxx
ALUA = bfc0129c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1191 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004a7, readdata = xxxxxxxx
ALUA = bfc0129c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1192 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000004a7, readdata = xxxxxxxx
ALUA = bfc012a0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004a8, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1192 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004a8, readdata = xxxxxxxx
ALUA = bfc012a0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1193 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc012a4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004a9, readdata = xxxxxxxx
ALUA = bfc012a4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1193 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004a9, readdata = xxxxxxxx
ALUA = bfc012a4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1194 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000004a9, readdata = xxxxxxxx
ALUA = bfc012a8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004aa, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1194 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004aa, readdata = xxxxxxxx
ALUA = bfc012a8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1195 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc012ac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004ab, readdata = xxxxxxxx
ALUA = bfc012ac, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1195 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004ab, readdata = xxxxxxxx
ALUA = bfc012ac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1196 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000004ab, readdata = xxxxxxxx
ALUA = bfc012b0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004ac, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1196 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004ac, readdata = xxxxxxxx
ALUA = bfc012b0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1197 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc012b4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004ad, readdata = xxxxxxxx
ALUA = bfc012b4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1197 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004ad, readdata = xxxxxxxx
ALUA = bfc012b4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1198 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000004ad, readdata = xxxxxxxx
ALUA = bfc012b8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004ae, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1198 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004ae, readdata = xxxxxxxx
ALUA = bfc012b8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1199 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc012bc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004af, readdata = xxxxxxxx
ALUA = bfc012bc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1199 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004af, readdata = xxxxxxxx
ALUA = bfc012bc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1200 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000004af, readdata = xxxxxxxx
ALUA = bfc012c0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004b0, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1200 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004b0, readdata = xxxxxxxx
ALUA = bfc012c0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1201 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc012c4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004b1, readdata = xxxxxxxx
ALUA = bfc012c4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1201 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004b1, readdata = xxxxxxxx
ALUA = bfc012c4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1202 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000004b1, readdata = xxxxxxxx
ALUA = bfc012c8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004b2, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1202 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004b2, readdata = xxxxxxxx
ALUA = bfc012c8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1203 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc012cc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004b3, readdata = xxxxxxxx
ALUA = bfc012cc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1203 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004b3, readdata = xxxxxxxx
ALUA = bfc012cc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1204 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000004b3, readdata = xxxxxxxx
ALUA = bfc012d0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004b4, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1204 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004b4, readdata = xxxxxxxx
ALUA = bfc012d0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1205 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc012d4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004b5, readdata = xxxxxxxx
ALUA = bfc012d4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1205 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004b5, readdata = xxxxxxxx
ALUA = bfc012d4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1206 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000004b5, readdata = xxxxxxxx
ALUA = bfc012d8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004b6, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1206 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004b6, readdata = xxxxxxxx
ALUA = bfc012d8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1207 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc012dc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004b7, readdata = xxxxxxxx
ALUA = bfc012dc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1207 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004b7, readdata = xxxxxxxx
ALUA = bfc012dc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1208 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000004b7, readdata = xxxxxxxx
ALUA = bfc012e0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004b8, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1208 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004b8, readdata = xxxxxxxx
ALUA = bfc012e0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1209 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc012e4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004b9, readdata = xxxxxxxx
ALUA = bfc012e4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1209 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004b9, readdata = xxxxxxxx
ALUA = bfc012e4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1210 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000004b9, readdata = xxxxxxxx
ALUA = bfc012e8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004ba, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1210 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004ba, readdata = xxxxxxxx
ALUA = bfc012e8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1211 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc012ec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004bb, readdata = xxxxxxxx
ALUA = bfc012ec, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1211 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004bb, readdata = xxxxxxxx
ALUA = bfc012ec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1212 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000004bb, readdata = xxxxxxxx
ALUA = bfc012f0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004bc, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1212 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004bc, readdata = xxxxxxxx
ALUA = bfc012f0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1213 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc012f4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004bd, readdata = xxxxxxxx
ALUA = bfc012f4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1213 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004bd, readdata = xxxxxxxx
ALUA = bfc012f4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1214 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000004bd, readdata = xxxxxxxx
ALUA = bfc012f8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004be, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1214 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004be, readdata = xxxxxxxx
ALUA = bfc012f8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1215 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc012fc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004bf, readdata = xxxxxxxx
ALUA = bfc012fc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1215 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004bf, readdata = xxxxxxxx
ALUA = bfc012fc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1216 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000004bf, readdata = xxxxxxxx
ALUA = bfc01300, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004c0, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1216 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004c0, readdata = xxxxxxxx
ALUA = bfc01300, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1217 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01304, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004c1, readdata = xxxxxxxx
ALUA = bfc01304, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1217 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004c1, readdata = xxxxxxxx
ALUA = bfc01304, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1218 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000004c1, readdata = xxxxxxxx
ALUA = bfc01308, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004c2, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1218 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004c2, readdata = xxxxxxxx
ALUA = bfc01308, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1219 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0130c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004c3, readdata = xxxxxxxx
ALUA = bfc0130c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1219 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004c3, readdata = xxxxxxxx
ALUA = bfc0130c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1220 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000004c3, readdata = xxxxxxxx
ALUA = bfc01310, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004c4, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1220 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004c4, readdata = xxxxxxxx
ALUA = bfc01310, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1221 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01314, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004c5, readdata = xxxxxxxx
ALUA = bfc01314, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1221 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004c5, readdata = xxxxxxxx
ALUA = bfc01314, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1222 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000004c5, readdata = xxxxxxxx
ALUA = bfc01318, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004c6, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1222 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004c6, readdata = xxxxxxxx
ALUA = bfc01318, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1223 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0131c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004c7, readdata = xxxxxxxx
ALUA = bfc0131c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1223 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004c7, readdata = xxxxxxxx
ALUA = bfc0131c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1224 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000004c7, readdata = xxxxxxxx
ALUA = bfc01320, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004c8, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1224 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004c8, readdata = xxxxxxxx
ALUA = bfc01320, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1225 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01324, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004c9, readdata = xxxxxxxx
ALUA = bfc01324, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1225 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004c9, readdata = xxxxxxxx
ALUA = bfc01324, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1226 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000004c9, readdata = xxxxxxxx
ALUA = bfc01328, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004ca, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1226 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004ca, readdata = xxxxxxxx
ALUA = bfc01328, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1227 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0132c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004cb, readdata = xxxxxxxx
ALUA = bfc0132c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1227 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004cb, readdata = xxxxxxxx
ALUA = bfc0132c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1228 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000004cb, readdata = xxxxxxxx
ALUA = bfc01330, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004cc, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1228 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004cc, readdata = xxxxxxxx
ALUA = bfc01330, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1229 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01334, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004cd, readdata = xxxxxxxx
ALUA = bfc01334, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1229 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004cd, readdata = xxxxxxxx
ALUA = bfc01334, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1230 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000004cd, readdata = xxxxxxxx
ALUA = bfc01338, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004ce, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1230 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004ce, readdata = xxxxxxxx
ALUA = bfc01338, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1231 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0133c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004cf, readdata = xxxxxxxx
ALUA = bfc0133c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1231 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004cf, readdata = xxxxxxxx
ALUA = bfc0133c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1232 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000004cf, readdata = xxxxxxxx
ALUA = bfc01340, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004d0, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1232 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004d0, readdata = xxxxxxxx
ALUA = bfc01340, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1233 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01344, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004d1, readdata = xxxxxxxx
ALUA = bfc01344, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1233 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004d1, readdata = xxxxxxxx
ALUA = bfc01344, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1234 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000004d1, readdata = xxxxxxxx
ALUA = bfc01348, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004d2, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1234 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004d2, readdata = xxxxxxxx
ALUA = bfc01348, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1235 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0134c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004d3, readdata = xxxxxxxx
ALUA = bfc0134c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1235 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004d3, readdata = xxxxxxxx
ALUA = bfc0134c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1236 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000004d3, readdata = xxxxxxxx
ALUA = bfc01350, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004d4, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1236 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004d4, readdata = xxxxxxxx
ALUA = bfc01350, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1237 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01354, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004d5, readdata = xxxxxxxx
ALUA = bfc01354, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1237 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004d5, readdata = xxxxxxxx
ALUA = bfc01354, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1238 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000004d5, readdata = xxxxxxxx
ALUA = bfc01358, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004d6, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1238 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004d6, readdata = xxxxxxxx
ALUA = bfc01358, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1239 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0135c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004d7, readdata = xxxxxxxx
ALUA = bfc0135c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1239 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004d7, readdata = xxxxxxxx
ALUA = bfc0135c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1240 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000004d7, readdata = xxxxxxxx
ALUA = bfc01360, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004d8, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1240 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004d8, readdata = xxxxxxxx
ALUA = bfc01360, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1241 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01364, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004d9, readdata = xxxxxxxx
ALUA = bfc01364, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1241 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004d9, readdata = xxxxxxxx
ALUA = bfc01364, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1242 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000004d9, readdata = xxxxxxxx
ALUA = bfc01368, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004da, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1242 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004da, readdata = xxxxxxxx
ALUA = bfc01368, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1243 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0136c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004db, readdata = xxxxxxxx
ALUA = bfc0136c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1243 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004db, readdata = xxxxxxxx
ALUA = bfc0136c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1244 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000004db, readdata = xxxxxxxx
ALUA = bfc01370, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004dc, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1244 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004dc, readdata = xxxxxxxx
ALUA = bfc01370, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1245 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01374, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004dd, readdata = xxxxxxxx
ALUA = bfc01374, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1245 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004dd, readdata = xxxxxxxx
ALUA = bfc01374, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1246 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000004dd, readdata = xxxxxxxx
ALUA = bfc01378, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004de, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1246 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004de, readdata = xxxxxxxx
ALUA = bfc01378, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1247 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0137c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004df, readdata = xxxxxxxx
ALUA = bfc0137c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1247 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004df, readdata = xxxxxxxx
ALUA = bfc0137c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1248 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000004df, readdata = xxxxxxxx
ALUA = bfc01380, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004e0, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1248 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004e0, readdata = xxxxxxxx
ALUA = bfc01380, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1249 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01384, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004e1, readdata = xxxxxxxx
ALUA = bfc01384, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1249 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004e1, readdata = xxxxxxxx
ALUA = bfc01384, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1250 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000004e1, readdata = xxxxxxxx
ALUA = bfc01388, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004e2, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1250 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004e2, readdata = xxxxxxxx
ALUA = bfc01388, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1251 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0138c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004e3, readdata = xxxxxxxx
ALUA = bfc0138c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1251 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004e3, readdata = xxxxxxxx
ALUA = bfc0138c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1252 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000004e3, readdata = xxxxxxxx
ALUA = bfc01390, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004e4, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1252 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004e4, readdata = xxxxxxxx
ALUA = bfc01390, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1253 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01394, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004e5, readdata = xxxxxxxx
ALUA = bfc01394, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1253 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004e5, readdata = xxxxxxxx
ALUA = bfc01394, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1254 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000004e5, readdata = xxxxxxxx
ALUA = bfc01398, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004e6, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1254 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004e6, readdata = xxxxxxxx
ALUA = bfc01398, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1255 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0139c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004e7, readdata = xxxxxxxx
ALUA = bfc0139c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1255 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004e7, readdata = xxxxxxxx
ALUA = bfc0139c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1256 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000004e7, readdata = xxxxxxxx
ALUA = bfc013a0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004e8, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1256 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004e8, readdata = xxxxxxxx
ALUA = bfc013a0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1257 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc013a4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004e9, readdata = xxxxxxxx
ALUA = bfc013a4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1257 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004e9, readdata = xxxxxxxx
ALUA = bfc013a4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1258 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000004e9, readdata = xxxxxxxx
ALUA = bfc013a8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004ea, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1258 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004ea, readdata = xxxxxxxx
ALUA = bfc013a8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1259 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc013ac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004eb, readdata = xxxxxxxx
ALUA = bfc013ac, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1259 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004eb, readdata = xxxxxxxx
ALUA = bfc013ac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1260 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000004eb, readdata = xxxxxxxx
ALUA = bfc013b0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004ec, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1260 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004ec, readdata = xxxxxxxx
ALUA = bfc013b0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1261 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc013b4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004ed, readdata = xxxxxxxx
ALUA = bfc013b4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1261 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004ed, readdata = xxxxxxxx
ALUA = bfc013b4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1262 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000004ed, readdata = xxxxxxxx
ALUA = bfc013b8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004ee, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1262 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004ee, readdata = xxxxxxxx
ALUA = bfc013b8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1263 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc013bc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004ef, readdata = xxxxxxxx
ALUA = bfc013bc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1263 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004ef, readdata = xxxxxxxx
ALUA = bfc013bc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1264 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000004ef, readdata = xxxxxxxx
ALUA = bfc013c0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004f0, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1264 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004f0, readdata = xxxxxxxx
ALUA = bfc013c0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1265 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc013c4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004f1, readdata = xxxxxxxx
ALUA = bfc013c4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1265 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004f1, readdata = xxxxxxxx
ALUA = bfc013c4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1266 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000004f1, readdata = xxxxxxxx
ALUA = bfc013c8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004f2, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1266 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004f2, readdata = xxxxxxxx
ALUA = bfc013c8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1267 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc013cc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004f3, readdata = xxxxxxxx
ALUA = bfc013cc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1267 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004f3, readdata = xxxxxxxx
ALUA = bfc013cc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1268 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000004f3, readdata = xxxxxxxx
ALUA = bfc013d0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004f4, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1268 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004f4, readdata = xxxxxxxx
ALUA = bfc013d0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1269 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc013d4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004f5, readdata = xxxxxxxx
ALUA = bfc013d4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1269 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004f5, readdata = xxxxxxxx
ALUA = bfc013d4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1270 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000004f5, readdata = xxxxxxxx
ALUA = bfc013d8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004f6, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1270 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004f6, readdata = xxxxxxxx
ALUA = bfc013d8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1271 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc013dc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004f7, readdata = xxxxxxxx
ALUA = bfc013dc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1271 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004f7, readdata = xxxxxxxx
ALUA = bfc013dc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1272 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000004f7, readdata = xxxxxxxx
ALUA = bfc013e0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004f8, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1272 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004f8, readdata = xxxxxxxx
ALUA = bfc013e0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1273 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc013e4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004f9, readdata = xxxxxxxx
ALUA = bfc013e4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1273 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004f9, readdata = xxxxxxxx
ALUA = bfc013e4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1274 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000004f9, readdata = xxxxxxxx
ALUA = bfc013e8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004fa, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1274 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004fa, readdata = xxxxxxxx
ALUA = bfc013e8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1275 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc013ec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004fb, readdata = xxxxxxxx
ALUA = bfc013ec, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1275 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004fb, readdata = xxxxxxxx
ALUA = bfc013ec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1276 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000004fb, readdata = xxxxxxxx
ALUA = bfc013f0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004fc, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1276 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004fc, readdata = xxxxxxxx
ALUA = bfc013f0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1277 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc013f4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004fd, readdata = xxxxxxxx
ALUA = bfc013f4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1277 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004fd, readdata = xxxxxxxx
ALUA = bfc013f4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1278 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000004fd, readdata = xxxxxxxx
ALUA = bfc013f8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004fe, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1278 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004fe, readdata = xxxxxxxx
ALUA = bfc013f8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1279 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc013fc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000004ff, readdata = xxxxxxxx
ALUA = bfc013fc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1279 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000004ff, readdata = xxxxxxxx
ALUA = bfc013fc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1280 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000004ff, readdata = xxxxxxxx
ALUA = bfc01400, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000500, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1280 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000500, readdata = xxxxxxxx
ALUA = bfc01400, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1281 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01404, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000501, readdata = xxxxxxxx
ALUA = bfc01404, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1281 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000501, readdata = xxxxxxxx
ALUA = bfc01404, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1282 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000501, readdata = xxxxxxxx
ALUA = bfc01408, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000502, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1282 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000502, readdata = xxxxxxxx
ALUA = bfc01408, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1283 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0140c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000503, readdata = xxxxxxxx
ALUA = bfc0140c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1283 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000503, readdata = xxxxxxxx
ALUA = bfc0140c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1284 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000503, readdata = xxxxxxxx
ALUA = bfc01410, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000504, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1284 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000504, readdata = xxxxxxxx
ALUA = bfc01410, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1285 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01414, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000505, readdata = xxxxxxxx
ALUA = bfc01414, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1285 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000505, readdata = xxxxxxxx
ALUA = bfc01414, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1286 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000505, readdata = xxxxxxxx
ALUA = bfc01418, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000506, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1286 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000506, readdata = xxxxxxxx
ALUA = bfc01418, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1287 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0141c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000507, readdata = xxxxxxxx
ALUA = bfc0141c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1287 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000507, readdata = xxxxxxxx
ALUA = bfc0141c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1288 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000507, readdata = xxxxxxxx
ALUA = bfc01420, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000508, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1288 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000508, readdata = xxxxxxxx
ALUA = bfc01420, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1289 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01424, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000509, readdata = xxxxxxxx
ALUA = bfc01424, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1289 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000509, readdata = xxxxxxxx
ALUA = bfc01424, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1290 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000509, readdata = xxxxxxxx
ALUA = bfc01428, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000050a, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1290 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000050a, readdata = xxxxxxxx
ALUA = bfc01428, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1291 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0142c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000050b, readdata = xxxxxxxx
ALUA = bfc0142c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1291 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000050b, readdata = xxxxxxxx
ALUA = bfc0142c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1292 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000050b, readdata = xxxxxxxx
ALUA = bfc01430, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000050c, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1292 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000050c, readdata = xxxxxxxx
ALUA = bfc01430, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1293 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01434, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000050d, readdata = xxxxxxxx
ALUA = bfc01434, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1293 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000050d, readdata = xxxxxxxx
ALUA = bfc01434, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1294 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000050d, readdata = xxxxxxxx
ALUA = bfc01438, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000050e, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1294 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000050e, readdata = xxxxxxxx
ALUA = bfc01438, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1295 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0143c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000050f, readdata = xxxxxxxx
ALUA = bfc0143c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1295 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000050f, readdata = xxxxxxxx
ALUA = bfc0143c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1296 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000050f, readdata = xxxxxxxx
ALUA = bfc01440, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000510, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1296 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000510, readdata = xxxxxxxx
ALUA = bfc01440, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1297 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01444, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000511, readdata = xxxxxxxx
ALUA = bfc01444, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1297 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000511, readdata = xxxxxxxx
ALUA = bfc01444, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1298 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000511, readdata = xxxxxxxx
ALUA = bfc01448, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000512, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1298 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000512, readdata = xxxxxxxx
ALUA = bfc01448, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1299 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0144c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000513, readdata = xxxxxxxx
ALUA = bfc0144c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1299 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000513, readdata = xxxxxxxx
ALUA = bfc0144c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1300 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000513, readdata = xxxxxxxx
ALUA = bfc01450, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000514, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1300 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000514, readdata = xxxxxxxx
ALUA = bfc01450, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1301 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01454, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000515, readdata = xxxxxxxx
ALUA = bfc01454, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1301 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000515, readdata = xxxxxxxx
ALUA = bfc01454, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1302 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000515, readdata = xxxxxxxx
ALUA = bfc01458, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000516, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1302 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000516, readdata = xxxxxxxx
ALUA = bfc01458, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1303 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0145c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000517, readdata = xxxxxxxx
ALUA = bfc0145c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1303 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000517, readdata = xxxxxxxx
ALUA = bfc0145c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1304 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000517, readdata = xxxxxxxx
ALUA = bfc01460, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000518, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1304 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000518, readdata = xxxxxxxx
ALUA = bfc01460, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1305 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01464, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000519, readdata = xxxxxxxx
ALUA = bfc01464, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1305 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000519, readdata = xxxxxxxx
ALUA = bfc01464, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1306 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000519, readdata = xxxxxxxx
ALUA = bfc01468, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000051a, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1306 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000051a, readdata = xxxxxxxx
ALUA = bfc01468, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1307 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0146c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000051b, readdata = xxxxxxxx
ALUA = bfc0146c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1307 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000051b, readdata = xxxxxxxx
ALUA = bfc0146c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1308 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000051b, readdata = xxxxxxxx
ALUA = bfc01470, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000051c, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1308 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000051c, readdata = xxxxxxxx
ALUA = bfc01470, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1309 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01474, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000051d, readdata = xxxxxxxx
ALUA = bfc01474, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1309 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000051d, readdata = xxxxxxxx
ALUA = bfc01474, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1310 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000051d, readdata = xxxxxxxx
ALUA = bfc01478, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000051e, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1310 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000051e, readdata = xxxxxxxx
ALUA = bfc01478, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1311 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0147c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000051f, readdata = xxxxxxxx
ALUA = bfc0147c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1311 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000051f, readdata = xxxxxxxx
ALUA = bfc0147c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1312 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000051f, readdata = xxxxxxxx
ALUA = bfc01480, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000520, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1312 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000520, readdata = xxxxxxxx
ALUA = bfc01480, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1313 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01484, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000521, readdata = xxxxxxxx
ALUA = bfc01484, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1313 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000521, readdata = xxxxxxxx
ALUA = bfc01484, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1314 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000521, readdata = xxxxxxxx
ALUA = bfc01488, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000522, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1314 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000522, readdata = xxxxxxxx
ALUA = bfc01488, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1315 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0148c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000523, readdata = xxxxxxxx
ALUA = bfc0148c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1315 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000523, readdata = xxxxxxxx
ALUA = bfc0148c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1316 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000523, readdata = xxxxxxxx
ALUA = bfc01490, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000524, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1316 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000524, readdata = xxxxxxxx
ALUA = bfc01490, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1317 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01494, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000525, readdata = xxxxxxxx
ALUA = bfc01494, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1317 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000525, readdata = xxxxxxxx
ALUA = bfc01494, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1318 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000525, readdata = xxxxxxxx
ALUA = bfc01498, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000526, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1318 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000526, readdata = xxxxxxxx
ALUA = bfc01498, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1319 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0149c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000527, readdata = xxxxxxxx
ALUA = bfc0149c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1319 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000527, readdata = xxxxxxxx
ALUA = bfc0149c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1320 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000527, readdata = xxxxxxxx
ALUA = bfc014a0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000528, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1320 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000528, readdata = xxxxxxxx
ALUA = bfc014a0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1321 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc014a4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000529, readdata = xxxxxxxx
ALUA = bfc014a4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1321 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000529, readdata = xxxxxxxx
ALUA = bfc014a4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1322 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000529, readdata = xxxxxxxx
ALUA = bfc014a8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000052a, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1322 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000052a, readdata = xxxxxxxx
ALUA = bfc014a8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1323 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc014ac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000052b, readdata = xxxxxxxx
ALUA = bfc014ac, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1323 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000052b, readdata = xxxxxxxx
ALUA = bfc014ac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1324 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000052b, readdata = xxxxxxxx
ALUA = bfc014b0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000052c, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1324 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000052c, readdata = xxxxxxxx
ALUA = bfc014b0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1325 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc014b4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000052d, readdata = xxxxxxxx
ALUA = bfc014b4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1325 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000052d, readdata = xxxxxxxx
ALUA = bfc014b4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1326 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000052d, readdata = xxxxxxxx
ALUA = bfc014b8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000052e, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1326 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000052e, readdata = xxxxxxxx
ALUA = bfc014b8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1327 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc014bc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000052f, readdata = xxxxxxxx
ALUA = bfc014bc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1327 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000052f, readdata = xxxxxxxx
ALUA = bfc014bc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1328 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000052f, readdata = xxxxxxxx
ALUA = bfc014c0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000530, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1328 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000530, readdata = xxxxxxxx
ALUA = bfc014c0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1329 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc014c4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000531, readdata = xxxxxxxx
ALUA = bfc014c4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1329 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000531, readdata = xxxxxxxx
ALUA = bfc014c4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1330 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000531, readdata = xxxxxxxx
ALUA = bfc014c8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000532, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1330 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000532, readdata = xxxxxxxx
ALUA = bfc014c8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1331 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc014cc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000533, readdata = xxxxxxxx
ALUA = bfc014cc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1331 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000533, readdata = xxxxxxxx
ALUA = bfc014cc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1332 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000533, readdata = xxxxxxxx
ALUA = bfc014d0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000534, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1332 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000534, readdata = xxxxxxxx
ALUA = bfc014d0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1333 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc014d4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000535, readdata = xxxxxxxx
ALUA = bfc014d4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1333 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000535, readdata = xxxxxxxx
ALUA = bfc014d4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1334 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000535, readdata = xxxxxxxx
ALUA = bfc014d8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000536, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1334 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000536, readdata = xxxxxxxx
ALUA = bfc014d8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1335 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc014dc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000537, readdata = xxxxxxxx
ALUA = bfc014dc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1335 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000537, readdata = xxxxxxxx
ALUA = bfc014dc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1336 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000537, readdata = xxxxxxxx
ALUA = bfc014e0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000538, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1336 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000538, readdata = xxxxxxxx
ALUA = bfc014e0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1337 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc014e4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000539, readdata = xxxxxxxx
ALUA = bfc014e4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1337 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000539, readdata = xxxxxxxx
ALUA = bfc014e4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1338 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000539, readdata = xxxxxxxx
ALUA = bfc014e8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000053a, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1338 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000053a, readdata = xxxxxxxx
ALUA = bfc014e8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1339 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc014ec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000053b, readdata = xxxxxxxx
ALUA = bfc014ec, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1339 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000053b, readdata = xxxxxxxx
ALUA = bfc014ec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1340 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000053b, readdata = xxxxxxxx
ALUA = bfc014f0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000053c, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1340 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000053c, readdata = xxxxxxxx
ALUA = bfc014f0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1341 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc014f4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000053d, readdata = xxxxxxxx
ALUA = bfc014f4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1341 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000053d, readdata = xxxxxxxx
ALUA = bfc014f4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1342 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000053d, readdata = xxxxxxxx
ALUA = bfc014f8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000053e, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1342 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000053e, readdata = xxxxxxxx
ALUA = bfc014f8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1343 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc014fc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000053f, readdata = xxxxxxxx
ALUA = bfc014fc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1343 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000053f, readdata = xxxxxxxx
ALUA = bfc014fc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1344 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000053f, readdata = xxxxxxxx
ALUA = bfc01500, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000540, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1344 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000540, readdata = xxxxxxxx
ALUA = bfc01500, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1345 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01504, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000541, readdata = xxxxxxxx
ALUA = bfc01504, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1345 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000541, readdata = xxxxxxxx
ALUA = bfc01504, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1346 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000541, readdata = xxxxxxxx
ALUA = bfc01508, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000542, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1346 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000542, readdata = xxxxxxxx
ALUA = bfc01508, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1347 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0150c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000543, readdata = xxxxxxxx
ALUA = bfc0150c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1347 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000543, readdata = xxxxxxxx
ALUA = bfc0150c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1348 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000543, readdata = xxxxxxxx
ALUA = bfc01510, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000544, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1348 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000544, readdata = xxxxxxxx
ALUA = bfc01510, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1349 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01514, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000545, readdata = xxxxxxxx
ALUA = bfc01514, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1349 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000545, readdata = xxxxxxxx
ALUA = bfc01514, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1350 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000545, readdata = xxxxxxxx
ALUA = bfc01518, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000546, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1350 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000546, readdata = xxxxxxxx
ALUA = bfc01518, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1351 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0151c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000547, readdata = xxxxxxxx
ALUA = bfc0151c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1351 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000547, readdata = xxxxxxxx
ALUA = bfc0151c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1352 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000547, readdata = xxxxxxxx
ALUA = bfc01520, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000548, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1352 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000548, readdata = xxxxxxxx
ALUA = bfc01520, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1353 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01524, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000549, readdata = xxxxxxxx
ALUA = bfc01524, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1353 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000549, readdata = xxxxxxxx
ALUA = bfc01524, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1354 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000549, readdata = xxxxxxxx
ALUA = bfc01528, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000054a, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1354 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000054a, readdata = xxxxxxxx
ALUA = bfc01528, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1355 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0152c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000054b, readdata = xxxxxxxx
ALUA = bfc0152c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1355 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000054b, readdata = xxxxxxxx
ALUA = bfc0152c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1356 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000054b, readdata = xxxxxxxx
ALUA = bfc01530, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000054c, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1356 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000054c, readdata = xxxxxxxx
ALUA = bfc01530, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1357 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01534, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000054d, readdata = xxxxxxxx
ALUA = bfc01534, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1357 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000054d, readdata = xxxxxxxx
ALUA = bfc01534, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1358 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000054d, readdata = xxxxxxxx
ALUA = bfc01538, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000054e, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1358 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000054e, readdata = xxxxxxxx
ALUA = bfc01538, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1359 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0153c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000054f, readdata = xxxxxxxx
ALUA = bfc0153c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1359 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000054f, readdata = xxxxxxxx
ALUA = bfc0153c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1360 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000054f, readdata = xxxxxxxx
ALUA = bfc01540, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000550, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1360 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000550, readdata = xxxxxxxx
ALUA = bfc01540, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1361 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01544, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000551, readdata = xxxxxxxx
ALUA = bfc01544, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1361 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000551, readdata = xxxxxxxx
ALUA = bfc01544, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1362 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000551, readdata = xxxxxxxx
ALUA = bfc01548, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000552, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1362 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000552, readdata = xxxxxxxx
ALUA = bfc01548, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1363 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0154c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000553, readdata = xxxxxxxx
ALUA = bfc0154c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1363 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000553, readdata = xxxxxxxx
ALUA = bfc0154c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1364 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000553, readdata = xxxxxxxx
ALUA = bfc01550, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000554, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1364 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000554, readdata = xxxxxxxx
ALUA = bfc01550, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1365 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01554, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000555, readdata = xxxxxxxx
ALUA = bfc01554, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1365 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000555, readdata = xxxxxxxx
ALUA = bfc01554, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1366 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000555, readdata = xxxxxxxx
ALUA = bfc01558, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000556, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1366 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000556, readdata = xxxxxxxx
ALUA = bfc01558, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1367 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0155c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000557, readdata = xxxxxxxx
ALUA = bfc0155c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1367 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000557, readdata = xxxxxxxx
ALUA = bfc0155c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1368 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000557, readdata = xxxxxxxx
ALUA = bfc01560, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000558, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1368 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000558, readdata = xxxxxxxx
ALUA = bfc01560, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1369 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01564, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000559, readdata = xxxxxxxx
ALUA = bfc01564, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1369 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000559, readdata = xxxxxxxx
ALUA = bfc01564, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1370 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000559, readdata = xxxxxxxx
ALUA = bfc01568, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000055a, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1370 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000055a, readdata = xxxxxxxx
ALUA = bfc01568, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1371 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0156c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000055b, readdata = xxxxxxxx
ALUA = bfc0156c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1371 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000055b, readdata = xxxxxxxx
ALUA = bfc0156c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1372 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000055b, readdata = xxxxxxxx
ALUA = bfc01570, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000055c, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1372 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000055c, readdata = xxxxxxxx
ALUA = bfc01570, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1373 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01574, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000055d, readdata = xxxxxxxx
ALUA = bfc01574, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1373 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000055d, readdata = xxxxxxxx
ALUA = bfc01574, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1374 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000055d, readdata = xxxxxxxx
ALUA = bfc01578, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000055e, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1374 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000055e, readdata = xxxxxxxx
ALUA = bfc01578, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1375 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0157c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000055f, readdata = xxxxxxxx
ALUA = bfc0157c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1375 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000055f, readdata = xxxxxxxx
ALUA = bfc0157c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1376 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000055f, readdata = xxxxxxxx
ALUA = bfc01580, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000560, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1376 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000560, readdata = xxxxxxxx
ALUA = bfc01580, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1377 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01584, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000561, readdata = xxxxxxxx
ALUA = bfc01584, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1377 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000561, readdata = xxxxxxxx
ALUA = bfc01584, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1378 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000561, readdata = xxxxxxxx
ALUA = bfc01588, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000562, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1378 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000562, readdata = xxxxxxxx
ALUA = bfc01588, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1379 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0158c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000563, readdata = xxxxxxxx
ALUA = bfc0158c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1379 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000563, readdata = xxxxxxxx
ALUA = bfc0158c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1380 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000563, readdata = xxxxxxxx
ALUA = bfc01590, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000564, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1380 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000564, readdata = xxxxxxxx
ALUA = bfc01590, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1381 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01594, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000565, readdata = xxxxxxxx
ALUA = bfc01594, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1381 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000565, readdata = xxxxxxxx
ALUA = bfc01594, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1382 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000565, readdata = xxxxxxxx
ALUA = bfc01598, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000566, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1382 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000566, readdata = xxxxxxxx
ALUA = bfc01598, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1383 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0159c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000567, readdata = xxxxxxxx
ALUA = bfc0159c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1383 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000567, readdata = xxxxxxxx
ALUA = bfc0159c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1384 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000567, readdata = xxxxxxxx
ALUA = bfc015a0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000568, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1384 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000568, readdata = xxxxxxxx
ALUA = bfc015a0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1385 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc015a4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000569, readdata = xxxxxxxx
ALUA = bfc015a4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1385 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000569, readdata = xxxxxxxx
ALUA = bfc015a4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1386 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000569, readdata = xxxxxxxx
ALUA = bfc015a8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000056a, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1386 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000056a, readdata = xxxxxxxx
ALUA = bfc015a8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1387 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc015ac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000056b, readdata = xxxxxxxx
ALUA = bfc015ac, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1387 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000056b, readdata = xxxxxxxx
ALUA = bfc015ac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1388 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000056b, readdata = xxxxxxxx
ALUA = bfc015b0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000056c, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1388 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000056c, readdata = xxxxxxxx
ALUA = bfc015b0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1389 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc015b4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000056d, readdata = xxxxxxxx
ALUA = bfc015b4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1389 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000056d, readdata = xxxxxxxx
ALUA = bfc015b4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1390 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000056d, readdata = xxxxxxxx
ALUA = bfc015b8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000056e, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1390 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000056e, readdata = xxxxxxxx
ALUA = bfc015b8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1391 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc015bc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000056f, readdata = xxxxxxxx
ALUA = bfc015bc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1391 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000056f, readdata = xxxxxxxx
ALUA = bfc015bc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1392 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000056f, readdata = xxxxxxxx
ALUA = bfc015c0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000570, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1392 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000570, readdata = xxxxxxxx
ALUA = bfc015c0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1393 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc015c4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000571, readdata = xxxxxxxx
ALUA = bfc015c4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1393 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000571, readdata = xxxxxxxx
ALUA = bfc015c4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1394 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000571, readdata = xxxxxxxx
ALUA = bfc015c8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000572, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1394 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000572, readdata = xxxxxxxx
ALUA = bfc015c8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1395 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc015cc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000573, readdata = xxxxxxxx
ALUA = bfc015cc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1395 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000573, readdata = xxxxxxxx
ALUA = bfc015cc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1396 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000573, readdata = xxxxxxxx
ALUA = bfc015d0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000574, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1396 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000574, readdata = xxxxxxxx
ALUA = bfc015d0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1397 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc015d4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000575, readdata = xxxxxxxx
ALUA = bfc015d4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1397 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000575, readdata = xxxxxxxx
ALUA = bfc015d4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1398 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000575, readdata = xxxxxxxx
ALUA = bfc015d8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000576, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1398 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000576, readdata = xxxxxxxx
ALUA = bfc015d8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1399 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc015dc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000577, readdata = xxxxxxxx
ALUA = bfc015dc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1399 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000577, readdata = xxxxxxxx
ALUA = bfc015dc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1400 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000577, readdata = xxxxxxxx
ALUA = bfc015e0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000578, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1400 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000578, readdata = xxxxxxxx
ALUA = bfc015e0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1401 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc015e4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000579, readdata = xxxxxxxx
ALUA = bfc015e4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1401 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000579, readdata = xxxxxxxx
ALUA = bfc015e4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1402 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000579, readdata = xxxxxxxx
ALUA = bfc015e8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000057a, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1402 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000057a, readdata = xxxxxxxx
ALUA = bfc015e8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1403 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc015ec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000057b, readdata = xxxxxxxx
ALUA = bfc015ec, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1403 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000057b, readdata = xxxxxxxx
ALUA = bfc015ec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1404 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000057b, readdata = xxxxxxxx
ALUA = bfc015f0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000057c, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1404 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000057c, readdata = xxxxxxxx
ALUA = bfc015f0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1405 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc015f4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000057d, readdata = xxxxxxxx
ALUA = bfc015f4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1405 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000057d, readdata = xxxxxxxx
ALUA = bfc015f4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1406 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000057d, readdata = xxxxxxxx
ALUA = bfc015f8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000057e, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1406 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000057e, readdata = xxxxxxxx
ALUA = bfc015f8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1407 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc015fc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000057f, readdata = xxxxxxxx
ALUA = bfc015fc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1407 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000057f, readdata = xxxxxxxx
ALUA = bfc015fc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1408 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000057f, readdata = xxxxxxxx
ALUA = bfc01600, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000580, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1408 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000580, readdata = xxxxxxxx
ALUA = bfc01600, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1409 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01604, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000581, readdata = xxxxxxxx
ALUA = bfc01604, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1409 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000581, readdata = xxxxxxxx
ALUA = bfc01604, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1410 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000581, readdata = xxxxxxxx
ALUA = bfc01608, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000582, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1410 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000582, readdata = xxxxxxxx
ALUA = bfc01608, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1411 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0160c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000583, readdata = xxxxxxxx
ALUA = bfc0160c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1411 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000583, readdata = xxxxxxxx
ALUA = bfc0160c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1412 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000583, readdata = xxxxxxxx
ALUA = bfc01610, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000584, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1412 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000584, readdata = xxxxxxxx
ALUA = bfc01610, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1413 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01614, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000585, readdata = xxxxxxxx
ALUA = bfc01614, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1413 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000585, readdata = xxxxxxxx
ALUA = bfc01614, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1414 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000585, readdata = xxxxxxxx
ALUA = bfc01618, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000586, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1414 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000586, readdata = xxxxxxxx
ALUA = bfc01618, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1415 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0161c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000587, readdata = xxxxxxxx
ALUA = bfc0161c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1415 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000587, readdata = xxxxxxxx
ALUA = bfc0161c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1416 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000587, readdata = xxxxxxxx
ALUA = bfc01620, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000588, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1416 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000588, readdata = xxxxxxxx
ALUA = bfc01620, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1417 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01624, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000589, readdata = xxxxxxxx
ALUA = bfc01624, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1417 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000589, readdata = xxxxxxxx
ALUA = bfc01624, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1418 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000589, readdata = xxxxxxxx
ALUA = bfc01628, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000058a, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1418 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000058a, readdata = xxxxxxxx
ALUA = bfc01628, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1419 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0162c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000058b, readdata = xxxxxxxx
ALUA = bfc0162c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1419 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000058b, readdata = xxxxxxxx
ALUA = bfc0162c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1420 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000058b, readdata = xxxxxxxx
ALUA = bfc01630, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000058c, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1420 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000058c, readdata = xxxxxxxx
ALUA = bfc01630, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1421 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01634, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000058d, readdata = xxxxxxxx
ALUA = bfc01634, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1421 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000058d, readdata = xxxxxxxx
ALUA = bfc01634, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1422 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000058d, readdata = xxxxxxxx
ALUA = bfc01638, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000058e, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1422 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000058e, readdata = xxxxxxxx
ALUA = bfc01638, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1423 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0163c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000058f, readdata = xxxxxxxx
ALUA = bfc0163c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1423 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000058f, readdata = xxxxxxxx
ALUA = bfc0163c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1424 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000058f, readdata = xxxxxxxx
ALUA = bfc01640, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000590, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1424 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000590, readdata = xxxxxxxx
ALUA = bfc01640, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1425 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01644, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000591, readdata = xxxxxxxx
ALUA = bfc01644, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1425 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000591, readdata = xxxxxxxx
ALUA = bfc01644, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1426 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000591, readdata = xxxxxxxx
ALUA = bfc01648, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000592, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1426 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000592, readdata = xxxxxxxx
ALUA = bfc01648, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1427 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0164c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000593, readdata = xxxxxxxx
ALUA = bfc0164c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1427 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000593, readdata = xxxxxxxx
ALUA = bfc0164c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1428 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000593, readdata = xxxxxxxx
ALUA = bfc01650, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000594, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1428 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000594, readdata = xxxxxxxx
ALUA = bfc01650, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1429 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01654, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000595, readdata = xxxxxxxx
ALUA = bfc01654, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1429 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000595, readdata = xxxxxxxx
ALUA = bfc01654, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1430 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000595, readdata = xxxxxxxx
ALUA = bfc01658, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000596, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1430 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000596, readdata = xxxxxxxx
ALUA = bfc01658, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1431 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0165c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000597, readdata = xxxxxxxx
ALUA = bfc0165c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1431 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000597, readdata = xxxxxxxx
ALUA = bfc0165c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1432 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000597, readdata = xxxxxxxx
ALUA = bfc01660, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000598, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1432 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000598, readdata = xxxxxxxx
ALUA = bfc01660, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1433 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01664, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000599, readdata = xxxxxxxx
ALUA = bfc01664, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1433 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000599, readdata = xxxxxxxx
ALUA = bfc01664, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1434 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000599, readdata = xxxxxxxx
ALUA = bfc01668, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000059a, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1434 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000059a, readdata = xxxxxxxx
ALUA = bfc01668, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1435 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0166c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000059b, readdata = xxxxxxxx
ALUA = bfc0166c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1435 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000059b, readdata = xxxxxxxx
ALUA = bfc0166c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1436 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000059b, readdata = xxxxxxxx
ALUA = bfc01670, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000059c, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1436 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000059c, readdata = xxxxxxxx
ALUA = bfc01670, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1437 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01674, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000059d, readdata = xxxxxxxx
ALUA = bfc01674, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1437 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000059d, readdata = xxxxxxxx
ALUA = bfc01674, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1438 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000059d, readdata = xxxxxxxx
ALUA = bfc01678, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000059e, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1438 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000059e, readdata = xxxxxxxx
ALUA = bfc01678, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1439 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0167c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000059f, readdata = xxxxxxxx
ALUA = bfc0167c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1439 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000059f, readdata = xxxxxxxx
ALUA = bfc0167c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1440 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000059f, readdata = xxxxxxxx
ALUA = bfc01680, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005a0, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1440 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005a0, readdata = xxxxxxxx
ALUA = bfc01680, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1441 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01684, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005a1, readdata = xxxxxxxx
ALUA = bfc01684, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1441 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005a1, readdata = xxxxxxxx
ALUA = bfc01684, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1442 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000005a1, readdata = xxxxxxxx
ALUA = bfc01688, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005a2, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1442 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005a2, readdata = xxxxxxxx
ALUA = bfc01688, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1443 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0168c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005a3, readdata = xxxxxxxx
ALUA = bfc0168c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1443 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005a3, readdata = xxxxxxxx
ALUA = bfc0168c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1444 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000005a3, readdata = xxxxxxxx
ALUA = bfc01690, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005a4, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1444 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005a4, readdata = xxxxxxxx
ALUA = bfc01690, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1445 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01694, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005a5, readdata = xxxxxxxx
ALUA = bfc01694, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1445 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005a5, readdata = xxxxxxxx
ALUA = bfc01694, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1446 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000005a5, readdata = xxxxxxxx
ALUA = bfc01698, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005a6, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1446 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005a6, readdata = xxxxxxxx
ALUA = bfc01698, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1447 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0169c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005a7, readdata = xxxxxxxx
ALUA = bfc0169c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1447 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005a7, readdata = xxxxxxxx
ALUA = bfc0169c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1448 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000005a7, readdata = xxxxxxxx
ALUA = bfc016a0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005a8, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1448 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005a8, readdata = xxxxxxxx
ALUA = bfc016a0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1449 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc016a4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005a9, readdata = xxxxxxxx
ALUA = bfc016a4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1449 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005a9, readdata = xxxxxxxx
ALUA = bfc016a4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1450 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000005a9, readdata = xxxxxxxx
ALUA = bfc016a8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005aa, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1450 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005aa, readdata = xxxxxxxx
ALUA = bfc016a8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1451 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc016ac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005ab, readdata = xxxxxxxx
ALUA = bfc016ac, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1451 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005ab, readdata = xxxxxxxx
ALUA = bfc016ac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1452 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000005ab, readdata = xxxxxxxx
ALUA = bfc016b0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005ac, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1452 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005ac, readdata = xxxxxxxx
ALUA = bfc016b0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1453 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc016b4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005ad, readdata = xxxxxxxx
ALUA = bfc016b4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1453 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005ad, readdata = xxxxxxxx
ALUA = bfc016b4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1454 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000005ad, readdata = xxxxxxxx
ALUA = bfc016b8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005ae, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1454 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005ae, readdata = xxxxxxxx
ALUA = bfc016b8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1455 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc016bc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005af, readdata = xxxxxxxx
ALUA = bfc016bc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1455 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005af, readdata = xxxxxxxx
ALUA = bfc016bc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1456 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000005af, readdata = xxxxxxxx
ALUA = bfc016c0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005b0, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1456 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005b0, readdata = xxxxxxxx
ALUA = bfc016c0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1457 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc016c4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005b1, readdata = xxxxxxxx
ALUA = bfc016c4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1457 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005b1, readdata = xxxxxxxx
ALUA = bfc016c4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1458 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000005b1, readdata = xxxxxxxx
ALUA = bfc016c8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005b2, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1458 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005b2, readdata = xxxxxxxx
ALUA = bfc016c8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1459 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc016cc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005b3, readdata = xxxxxxxx
ALUA = bfc016cc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1459 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005b3, readdata = xxxxxxxx
ALUA = bfc016cc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1460 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000005b3, readdata = xxxxxxxx
ALUA = bfc016d0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005b4, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1460 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005b4, readdata = xxxxxxxx
ALUA = bfc016d0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1461 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc016d4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005b5, readdata = xxxxxxxx
ALUA = bfc016d4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1461 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005b5, readdata = xxxxxxxx
ALUA = bfc016d4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1462 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000005b5, readdata = xxxxxxxx
ALUA = bfc016d8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005b6, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1462 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005b6, readdata = xxxxxxxx
ALUA = bfc016d8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1463 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc016dc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005b7, readdata = xxxxxxxx
ALUA = bfc016dc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1463 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005b7, readdata = xxxxxxxx
ALUA = bfc016dc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1464 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000005b7, readdata = xxxxxxxx
ALUA = bfc016e0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005b8, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1464 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005b8, readdata = xxxxxxxx
ALUA = bfc016e0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1465 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc016e4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005b9, readdata = xxxxxxxx
ALUA = bfc016e4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1465 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005b9, readdata = xxxxxxxx
ALUA = bfc016e4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1466 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000005b9, readdata = xxxxxxxx
ALUA = bfc016e8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005ba, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1466 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005ba, readdata = xxxxxxxx
ALUA = bfc016e8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1467 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc016ec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005bb, readdata = xxxxxxxx
ALUA = bfc016ec, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1467 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005bb, readdata = xxxxxxxx
ALUA = bfc016ec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1468 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000005bb, readdata = xxxxxxxx
ALUA = bfc016f0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005bc, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1468 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005bc, readdata = xxxxxxxx
ALUA = bfc016f0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1469 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc016f4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005bd, readdata = xxxxxxxx
ALUA = bfc016f4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1469 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005bd, readdata = xxxxxxxx
ALUA = bfc016f4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1470 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000005bd, readdata = xxxxxxxx
ALUA = bfc016f8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005be, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1470 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005be, readdata = xxxxxxxx
ALUA = bfc016f8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1471 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc016fc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005bf, readdata = xxxxxxxx
ALUA = bfc016fc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1471 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005bf, readdata = xxxxxxxx
ALUA = bfc016fc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1472 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000005bf, readdata = xxxxxxxx
ALUA = bfc01700, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005c0, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1472 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005c0, readdata = xxxxxxxx
ALUA = bfc01700, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1473 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01704, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005c1, readdata = xxxxxxxx
ALUA = bfc01704, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1473 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005c1, readdata = xxxxxxxx
ALUA = bfc01704, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1474 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000005c1, readdata = xxxxxxxx
ALUA = bfc01708, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005c2, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1474 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005c2, readdata = xxxxxxxx
ALUA = bfc01708, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1475 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0170c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005c3, readdata = xxxxxxxx
ALUA = bfc0170c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1475 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005c3, readdata = xxxxxxxx
ALUA = bfc0170c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1476 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000005c3, readdata = xxxxxxxx
ALUA = bfc01710, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005c4, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1476 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005c4, readdata = xxxxxxxx
ALUA = bfc01710, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1477 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01714, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005c5, readdata = xxxxxxxx
ALUA = bfc01714, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1477 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005c5, readdata = xxxxxxxx
ALUA = bfc01714, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1478 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000005c5, readdata = xxxxxxxx
ALUA = bfc01718, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005c6, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1478 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005c6, readdata = xxxxxxxx
ALUA = bfc01718, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1479 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0171c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005c7, readdata = xxxxxxxx
ALUA = bfc0171c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1479 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005c7, readdata = xxxxxxxx
ALUA = bfc0171c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1480 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000005c7, readdata = xxxxxxxx
ALUA = bfc01720, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005c8, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1480 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005c8, readdata = xxxxxxxx
ALUA = bfc01720, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1481 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01724, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005c9, readdata = xxxxxxxx
ALUA = bfc01724, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1481 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005c9, readdata = xxxxxxxx
ALUA = bfc01724, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1482 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000005c9, readdata = xxxxxxxx
ALUA = bfc01728, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005ca, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1482 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005ca, readdata = xxxxxxxx
ALUA = bfc01728, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1483 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0172c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005cb, readdata = xxxxxxxx
ALUA = bfc0172c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1483 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005cb, readdata = xxxxxxxx
ALUA = bfc0172c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1484 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000005cb, readdata = xxxxxxxx
ALUA = bfc01730, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005cc, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1484 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005cc, readdata = xxxxxxxx
ALUA = bfc01730, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1485 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01734, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005cd, readdata = xxxxxxxx
ALUA = bfc01734, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1485 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005cd, readdata = xxxxxxxx
ALUA = bfc01734, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1486 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000005cd, readdata = xxxxxxxx
ALUA = bfc01738, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005ce, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1486 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005ce, readdata = xxxxxxxx
ALUA = bfc01738, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1487 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0173c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005cf, readdata = xxxxxxxx
ALUA = bfc0173c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1487 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005cf, readdata = xxxxxxxx
ALUA = bfc0173c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1488 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000005cf, readdata = xxxxxxxx
ALUA = bfc01740, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005d0, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1488 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005d0, readdata = xxxxxxxx
ALUA = bfc01740, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1489 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01744, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005d1, readdata = xxxxxxxx
ALUA = bfc01744, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1489 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005d1, readdata = xxxxxxxx
ALUA = bfc01744, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1490 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000005d1, readdata = xxxxxxxx
ALUA = bfc01748, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005d2, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1490 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005d2, readdata = xxxxxxxx
ALUA = bfc01748, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1491 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0174c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005d3, readdata = xxxxxxxx
ALUA = bfc0174c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1491 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005d3, readdata = xxxxxxxx
ALUA = bfc0174c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1492 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000005d3, readdata = xxxxxxxx
ALUA = bfc01750, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005d4, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1492 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005d4, readdata = xxxxxxxx
ALUA = bfc01750, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1493 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01754, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005d5, readdata = xxxxxxxx
ALUA = bfc01754, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1493 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005d5, readdata = xxxxxxxx
ALUA = bfc01754, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1494 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000005d5, readdata = xxxxxxxx
ALUA = bfc01758, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005d6, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1494 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005d6, readdata = xxxxxxxx
ALUA = bfc01758, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1495 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0175c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005d7, readdata = xxxxxxxx
ALUA = bfc0175c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1495 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005d7, readdata = xxxxxxxx
ALUA = bfc0175c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1496 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000005d7, readdata = xxxxxxxx
ALUA = bfc01760, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005d8, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1496 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005d8, readdata = xxxxxxxx
ALUA = bfc01760, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1497 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01764, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005d9, readdata = xxxxxxxx
ALUA = bfc01764, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1497 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005d9, readdata = xxxxxxxx
ALUA = bfc01764, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1498 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000005d9, readdata = xxxxxxxx
ALUA = bfc01768, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005da, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1498 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005da, readdata = xxxxxxxx
ALUA = bfc01768, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1499 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0176c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005db, readdata = xxxxxxxx
ALUA = bfc0176c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1499 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005db, readdata = xxxxxxxx
ALUA = bfc0176c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1500 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000005db, readdata = xxxxxxxx
ALUA = bfc01770, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005dc, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1500 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005dc, readdata = xxxxxxxx
ALUA = bfc01770, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1501 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01774, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005dd, readdata = xxxxxxxx
ALUA = bfc01774, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1501 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005dd, readdata = xxxxxxxx
ALUA = bfc01774, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1502 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000005dd, readdata = xxxxxxxx
ALUA = bfc01778, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005de, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1502 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005de, readdata = xxxxxxxx
ALUA = bfc01778, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1503 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0177c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005df, readdata = xxxxxxxx
ALUA = bfc0177c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1503 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005df, readdata = xxxxxxxx
ALUA = bfc0177c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1504 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000005df, readdata = xxxxxxxx
ALUA = bfc01780, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005e0, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1504 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005e0, readdata = xxxxxxxx
ALUA = bfc01780, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1505 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01784, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005e1, readdata = xxxxxxxx
ALUA = bfc01784, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1505 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005e1, readdata = xxxxxxxx
ALUA = bfc01784, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1506 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000005e1, readdata = xxxxxxxx
ALUA = bfc01788, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005e2, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1506 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005e2, readdata = xxxxxxxx
ALUA = bfc01788, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1507 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0178c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005e3, readdata = xxxxxxxx
ALUA = bfc0178c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1507 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005e3, readdata = xxxxxxxx
ALUA = bfc0178c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1508 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000005e3, readdata = xxxxxxxx
ALUA = bfc01790, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005e4, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1508 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005e4, readdata = xxxxxxxx
ALUA = bfc01790, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1509 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01794, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005e5, readdata = xxxxxxxx
ALUA = bfc01794, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1509 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005e5, readdata = xxxxxxxx
ALUA = bfc01794, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1510 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000005e5, readdata = xxxxxxxx
ALUA = bfc01798, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005e6, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1510 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005e6, readdata = xxxxxxxx
ALUA = bfc01798, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1511 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0179c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005e7, readdata = xxxxxxxx
ALUA = bfc0179c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1511 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005e7, readdata = xxxxxxxx
ALUA = bfc0179c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1512 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000005e7, readdata = xxxxxxxx
ALUA = bfc017a0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005e8, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1512 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005e8, readdata = xxxxxxxx
ALUA = bfc017a0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1513 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc017a4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005e9, readdata = xxxxxxxx
ALUA = bfc017a4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1513 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005e9, readdata = xxxxxxxx
ALUA = bfc017a4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1514 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000005e9, readdata = xxxxxxxx
ALUA = bfc017a8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005ea, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1514 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005ea, readdata = xxxxxxxx
ALUA = bfc017a8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1515 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc017ac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005eb, readdata = xxxxxxxx
ALUA = bfc017ac, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1515 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005eb, readdata = xxxxxxxx
ALUA = bfc017ac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1516 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000005eb, readdata = xxxxxxxx
ALUA = bfc017b0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005ec, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1516 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005ec, readdata = xxxxxxxx
ALUA = bfc017b0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1517 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc017b4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005ed, readdata = xxxxxxxx
ALUA = bfc017b4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1517 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005ed, readdata = xxxxxxxx
ALUA = bfc017b4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1518 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000005ed, readdata = xxxxxxxx
ALUA = bfc017b8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005ee, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1518 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005ee, readdata = xxxxxxxx
ALUA = bfc017b8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1519 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc017bc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005ef, readdata = xxxxxxxx
ALUA = bfc017bc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1519 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005ef, readdata = xxxxxxxx
ALUA = bfc017bc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1520 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000005ef, readdata = xxxxxxxx
ALUA = bfc017c0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005f0, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1520 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005f0, readdata = xxxxxxxx
ALUA = bfc017c0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1521 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc017c4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005f1, readdata = xxxxxxxx
ALUA = bfc017c4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1521 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005f1, readdata = xxxxxxxx
ALUA = bfc017c4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1522 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000005f1, readdata = xxxxxxxx
ALUA = bfc017c8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005f2, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1522 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005f2, readdata = xxxxxxxx
ALUA = bfc017c8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1523 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc017cc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005f3, readdata = xxxxxxxx
ALUA = bfc017cc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1523 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005f3, readdata = xxxxxxxx
ALUA = bfc017cc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1524 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000005f3, readdata = xxxxxxxx
ALUA = bfc017d0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005f4, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1524 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005f4, readdata = xxxxxxxx
ALUA = bfc017d0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1525 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc017d4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005f5, readdata = xxxxxxxx
ALUA = bfc017d4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1525 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005f5, readdata = xxxxxxxx
ALUA = bfc017d4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1526 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000005f5, readdata = xxxxxxxx
ALUA = bfc017d8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005f6, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1526 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005f6, readdata = xxxxxxxx
ALUA = bfc017d8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1527 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc017dc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005f7, readdata = xxxxxxxx
ALUA = bfc017dc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1527 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005f7, readdata = xxxxxxxx
ALUA = bfc017dc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1528 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000005f7, readdata = xxxxxxxx
ALUA = bfc017e0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005f8, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1528 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005f8, readdata = xxxxxxxx
ALUA = bfc017e0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1529 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc017e4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005f9, readdata = xxxxxxxx
ALUA = bfc017e4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1529 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005f9, readdata = xxxxxxxx
ALUA = bfc017e4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1530 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000005f9, readdata = xxxxxxxx
ALUA = bfc017e8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005fa, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1530 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005fa, readdata = xxxxxxxx
ALUA = bfc017e8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1531 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc017ec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005fb, readdata = xxxxxxxx
ALUA = bfc017ec, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1531 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005fb, readdata = xxxxxxxx
ALUA = bfc017ec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1532 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000005fb, readdata = xxxxxxxx
ALUA = bfc017f0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005fc, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1532 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005fc, readdata = xxxxxxxx
ALUA = bfc017f0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1533 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc017f4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005fd, readdata = xxxxxxxx
ALUA = bfc017f4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1533 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005fd, readdata = xxxxxxxx
ALUA = bfc017f4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1534 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000005fd, readdata = xxxxxxxx
ALUA = bfc017f8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005fe, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1534 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005fe, readdata = xxxxxxxx
ALUA = bfc017f8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1535 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc017fc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000005ff, readdata = xxxxxxxx
ALUA = bfc017fc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1535 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000005ff, readdata = xxxxxxxx
ALUA = bfc017fc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1536 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000005ff, readdata = xxxxxxxx
ALUA = bfc01800, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000600, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1536 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000600, readdata = xxxxxxxx
ALUA = bfc01800, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1537 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01804, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000601, readdata = xxxxxxxx
ALUA = bfc01804, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1537 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000601, readdata = xxxxxxxx
ALUA = bfc01804, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1538 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000601, readdata = xxxxxxxx
ALUA = bfc01808, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000602, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1538 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000602, readdata = xxxxxxxx
ALUA = bfc01808, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1539 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0180c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000603, readdata = xxxxxxxx
ALUA = bfc0180c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1539 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000603, readdata = xxxxxxxx
ALUA = bfc0180c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1540 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000603, readdata = xxxxxxxx
ALUA = bfc01810, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000604, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1540 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000604, readdata = xxxxxxxx
ALUA = bfc01810, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1541 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01814, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000605, readdata = xxxxxxxx
ALUA = bfc01814, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1541 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000605, readdata = xxxxxxxx
ALUA = bfc01814, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1542 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000605, readdata = xxxxxxxx
ALUA = bfc01818, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000606, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1542 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000606, readdata = xxxxxxxx
ALUA = bfc01818, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1543 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0181c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000607, readdata = xxxxxxxx
ALUA = bfc0181c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1543 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000607, readdata = xxxxxxxx
ALUA = bfc0181c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1544 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000607, readdata = xxxxxxxx
ALUA = bfc01820, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000608, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1544 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000608, readdata = xxxxxxxx
ALUA = bfc01820, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1545 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01824, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000609, readdata = xxxxxxxx
ALUA = bfc01824, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1545 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000609, readdata = xxxxxxxx
ALUA = bfc01824, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1546 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000609, readdata = xxxxxxxx
ALUA = bfc01828, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000060a, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1546 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000060a, readdata = xxxxxxxx
ALUA = bfc01828, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1547 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0182c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000060b, readdata = xxxxxxxx
ALUA = bfc0182c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1547 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000060b, readdata = xxxxxxxx
ALUA = bfc0182c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1548 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000060b, readdata = xxxxxxxx
ALUA = bfc01830, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000060c, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1548 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000060c, readdata = xxxxxxxx
ALUA = bfc01830, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1549 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01834, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000060d, readdata = xxxxxxxx
ALUA = bfc01834, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1549 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000060d, readdata = xxxxxxxx
ALUA = bfc01834, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1550 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000060d, readdata = xxxxxxxx
ALUA = bfc01838, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000060e, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1550 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000060e, readdata = xxxxxxxx
ALUA = bfc01838, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1551 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0183c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000060f, readdata = xxxxxxxx
ALUA = bfc0183c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1551 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000060f, readdata = xxxxxxxx
ALUA = bfc0183c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1552 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000060f, readdata = xxxxxxxx
ALUA = bfc01840, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000610, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1552 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000610, readdata = xxxxxxxx
ALUA = bfc01840, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1553 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01844, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000611, readdata = xxxxxxxx
ALUA = bfc01844, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1553 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000611, readdata = xxxxxxxx
ALUA = bfc01844, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1554 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000611, readdata = xxxxxxxx
ALUA = bfc01848, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000612, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1554 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000612, readdata = xxxxxxxx
ALUA = bfc01848, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1555 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0184c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000613, readdata = xxxxxxxx
ALUA = bfc0184c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1555 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000613, readdata = xxxxxxxx
ALUA = bfc0184c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1556 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000613, readdata = xxxxxxxx
ALUA = bfc01850, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000614, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1556 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000614, readdata = xxxxxxxx
ALUA = bfc01850, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1557 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01854, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000615, readdata = xxxxxxxx
ALUA = bfc01854, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1557 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000615, readdata = xxxxxxxx
ALUA = bfc01854, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1558 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000615, readdata = xxxxxxxx
ALUA = bfc01858, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000616, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1558 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000616, readdata = xxxxxxxx
ALUA = bfc01858, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1559 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0185c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000617, readdata = xxxxxxxx
ALUA = bfc0185c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1559 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000617, readdata = xxxxxxxx
ALUA = bfc0185c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1560 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000617, readdata = xxxxxxxx
ALUA = bfc01860, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000618, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1560 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000618, readdata = xxxxxxxx
ALUA = bfc01860, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1561 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01864, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000619, readdata = xxxxxxxx
ALUA = bfc01864, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1561 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000619, readdata = xxxxxxxx
ALUA = bfc01864, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1562 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000619, readdata = xxxxxxxx
ALUA = bfc01868, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000061a, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1562 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000061a, readdata = xxxxxxxx
ALUA = bfc01868, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1563 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0186c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000061b, readdata = xxxxxxxx
ALUA = bfc0186c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1563 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000061b, readdata = xxxxxxxx
ALUA = bfc0186c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1564 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000061b, readdata = xxxxxxxx
ALUA = bfc01870, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000061c, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1564 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000061c, readdata = xxxxxxxx
ALUA = bfc01870, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1565 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01874, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000061d, readdata = xxxxxxxx
ALUA = bfc01874, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1565 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000061d, readdata = xxxxxxxx
ALUA = bfc01874, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1566 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000061d, readdata = xxxxxxxx
ALUA = bfc01878, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000061e, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1566 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000061e, readdata = xxxxxxxx
ALUA = bfc01878, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1567 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0187c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000061f, readdata = xxxxxxxx
ALUA = bfc0187c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1567 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000061f, readdata = xxxxxxxx
ALUA = bfc0187c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1568 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000061f, readdata = xxxxxxxx
ALUA = bfc01880, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000620, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1568 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000620, readdata = xxxxxxxx
ALUA = bfc01880, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1569 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01884, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000621, readdata = xxxxxxxx
ALUA = bfc01884, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1569 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000621, readdata = xxxxxxxx
ALUA = bfc01884, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1570 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000621, readdata = xxxxxxxx
ALUA = bfc01888, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000622, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1570 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000622, readdata = xxxxxxxx
ALUA = bfc01888, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1571 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0188c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000623, readdata = xxxxxxxx
ALUA = bfc0188c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1571 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000623, readdata = xxxxxxxx
ALUA = bfc0188c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1572 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000623, readdata = xxxxxxxx
ALUA = bfc01890, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000624, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1572 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000624, readdata = xxxxxxxx
ALUA = bfc01890, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1573 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01894, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000625, readdata = xxxxxxxx
ALUA = bfc01894, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1573 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000625, readdata = xxxxxxxx
ALUA = bfc01894, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1574 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000625, readdata = xxxxxxxx
ALUA = bfc01898, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000626, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1574 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000626, readdata = xxxxxxxx
ALUA = bfc01898, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1575 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0189c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000627, readdata = xxxxxxxx
ALUA = bfc0189c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1575 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000627, readdata = xxxxxxxx
ALUA = bfc0189c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1576 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000627, readdata = xxxxxxxx
ALUA = bfc018a0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000628, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1576 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000628, readdata = xxxxxxxx
ALUA = bfc018a0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1577 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc018a4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000629, readdata = xxxxxxxx
ALUA = bfc018a4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1577 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000629, readdata = xxxxxxxx
ALUA = bfc018a4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1578 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000629, readdata = xxxxxxxx
ALUA = bfc018a8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000062a, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1578 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000062a, readdata = xxxxxxxx
ALUA = bfc018a8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1579 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc018ac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000062b, readdata = xxxxxxxx
ALUA = bfc018ac, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1579 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000062b, readdata = xxxxxxxx
ALUA = bfc018ac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1580 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000062b, readdata = xxxxxxxx
ALUA = bfc018b0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000062c, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1580 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000062c, readdata = xxxxxxxx
ALUA = bfc018b0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1581 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc018b4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000062d, readdata = xxxxxxxx
ALUA = bfc018b4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1581 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000062d, readdata = xxxxxxxx
ALUA = bfc018b4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1582 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000062d, readdata = xxxxxxxx
ALUA = bfc018b8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000062e, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1582 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000062e, readdata = xxxxxxxx
ALUA = bfc018b8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1583 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc018bc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000062f, readdata = xxxxxxxx
ALUA = bfc018bc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1583 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000062f, readdata = xxxxxxxx
ALUA = bfc018bc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1584 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000062f, readdata = xxxxxxxx
ALUA = bfc018c0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000630, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1584 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000630, readdata = xxxxxxxx
ALUA = bfc018c0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1585 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc018c4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000631, readdata = xxxxxxxx
ALUA = bfc018c4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1585 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000631, readdata = xxxxxxxx
ALUA = bfc018c4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1586 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000631, readdata = xxxxxxxx
ALUA = bfc018c8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000632, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1586 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000632, readdata = xxxxxxxx
ALUA = bfc018c8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1587 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc018cc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000633, readdata = xxxxxxxx
ALUA = bfc018cc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1587 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000633, readdata = xxxxxxxx
ALUA = bfc018cc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1588 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000633, readdata = xxxxxxxx
ALUA = bfc018d0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000634, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1588 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000634, readdata = xxxxxxxx
ALUA = bfc018d0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1589 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc018d4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000635, readdata = xxxxxxxx
ALUA = bfc018d4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1589 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000635, readdata = xxxxxxxx
ALUA = bfc018d4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1590 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000635, readdata = xxxxxxxx
ALUA = bfc018d8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000636, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1590 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000636, readdata = xxxxxxxx
ALUA = bfc018d8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1591 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc018dc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000637, readdata = xxxxxxxx
ALUA = bfc018dc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1591 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000637, readdata = xxxxxxxx
ALUA = bfc018dc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1592 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000637, readdata = xxxxxxxx
ALUA = bfc018e0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000638, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1592 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000638, readdata = xxxxxxxx
ALUA = bfc018e0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1593 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc018e4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000639, readdata = xxxxxxxx
ALUA = bfc018e4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1593 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000639, readdata = xxxxxxxx
ALUA = bfc018e4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1594 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000639, readdata = xxxxxxxx
ALUA = bfc018e8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000063a, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1594 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000063a, readdata = xxxxxxxx
ALUA = bfc018e8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1595 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc018ec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000063b, readdata = xxxxxxxx
ALUA = bfc018ec, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1595 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000063b, readdata = xxxxxxxx
ALUA = bfc018ec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1596 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000063b, readdata = xxxxxxxx
ALUA = bfc018f0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000063c, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1596 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000063c, readdata = xxxxxxxx
ALUA = bfc018f0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1597 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc018f4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000063d, readdata = xxxxxxxx
ALUA = bfc018f4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1597 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000063d, readdata = xxxxxxxx
ALUA = bfc018f4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1598 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000063d, readdata = xxxxxxxx
ALUA = bfc018f8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000063e, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1598 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000063e, readdata = xxxxxxxx
ALUA = bfc018f8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1599 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc018fc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000063f, readdata = xxxxxxxx
ALUA = bfc018fc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1599 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000063f, readdata = xxxxxxxx
ALUA = bfc018fc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1600 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000063f, readdata = xxxxxxxx
ALUA = bfc01900, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000640, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1600 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000640, readdata = xxxxxxxx
ALUA = bfc01900, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1601 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01904, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000641, readdata = xxxxxxxx
ALUA = bfc01904, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1601 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000641, readdata = xxxxxxxx
ALUA = bfc01904, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1602 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000641, readdata = xxxxxxxx
ALUA = bfc01908, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000642, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1602 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000642, readdata = xxxxxxxx
ALUA = bfc01908, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1603 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0190c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000643, readdata = xxxxxxxx
ALUA = bfc0190c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1603 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000643, readdata = xxxxxxxx
ALUA = bfc0190c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1604 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000643, readdata = xxxxxxxx
ALUA = bfc01910, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000644, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1604 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000644, readdata = xxxxxxxx
ALUA = bfc01910, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1605 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01914, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000645, readdata = xxxxxxxx
ALUA = bfc01914, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1605 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000645, readdata = xxxxxxxx
ALUA = bfc01914, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1606 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000645, readdata = xxxxxxxx
ALUA = bfc01918, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000646, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1606 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000646, readdata = xxxxxxxx
ALUA = bfc01918, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1607 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0191c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000647, readdata = xxxxxxxx
ALUA = bfc0191c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1607 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000647, readdata = xxxxxxxx
ALUA = bfc0191c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1608 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000647, readdata = xxxxxxxx
ALUA = bfc01920, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000648, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1608 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000648, readdata = xxxxxxxx
ALUA = bfc01920, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1609 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01924, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000649, readdata = xxxxxxxx
ALUA = bfc01924, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1609 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000649, readdata = xxxxxxxx
ALUA = bfc01924, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1610 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000649, readdata = xxxxxxxx
ALUA = bfc01928, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000064a, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1610 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000064a, readdata = xxxxxxxx
ALUA = bfc01928, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1611 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0192c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000064b, readdata = xxxxxxxx
ALUA = bfc0192c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1611 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000064b, readdata = xxxxxxxx
ALUA = bfc0192c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1612 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000064b, readdata = xxxxxxxx
ALUA = bfc01930, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000064c, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1612 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000064c, readdata = xxxxxxxx
ALUA = bfc01930, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1613 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01934, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000064d, readdata = xxxxxxxx
ALUA = bfc01934, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1613 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000064d, readdata = xxxxxxxx
ALUA = bfc01934, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1614 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000064d, readdata = xxxxxxxx
ALUA = bfc01938, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000064e, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1614 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000064e, readdata = xxxxxxxx
ALUA = bfc01938, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1615 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0193c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000064f, readdata = xxxxxxxx
ALUA = bfc0193c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1615 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000064f, readdata = xxxxxxxx
ALUA = bfc0193c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1616 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000064f, readdata = xxxxxxxx
ALUA = bfc01940, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000650, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1616 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000650, readdata = xxxxxxxx
ALUA = bfc01940, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1617 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01944, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000651, readdata = xxxxxxxx
ALUA = bfc01944, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1617 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000651, readdata = xxxxxxxx
ALUA = bfc01944, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1618 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000651, readdata = xxxxxxxx
ALUA = bfc01948, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000652, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1618 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000652, readdata = xxxxxxxx
ALUA = bfc01948, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1619 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0194c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000653, readdata = xxxxxxxx
ALUA = bfc0194c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1619 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000653, readdata = xxxxxxxx
ALUA = bfc0194c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1620 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000653, readdata = xxxxxxxx
ALUA = bfc01950, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000654, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1620 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000654, readdata = xxxxxxxx
ALUA = bfc01950, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1621 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01954, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000655, readdata = xxxxxxxx
ALUA = bfc01954, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1621 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000655, readdata = xxxxxxxx
ALUA = bfc01954, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1622 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000655, readdata = xxxxxxxx
ALUA = bfc01958, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000656, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1622 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000656, readdata = xxxxxxxx
ALUA = bfc01958, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1623 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0195c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000657, readdata = xxxxxxxx
ALUA = bfc0195c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1623 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000657, readdata = xxxxxxxx
ALUA = bfc0195c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1624 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000657, readdata = xxxxxxxx
ALUA = bfc01960, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000658, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1624 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000658, readdata = xxxxxxxx
ALUA = bfc01960, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1625 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01964, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000659, readdata = xxxxxxxx
ALUA = bfc01964, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1625 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000659, readdata = xxxxxxxx
ALUA = bfc01964, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1626 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000659, readdata = xxxxxxxx
ALUA = bfc01968, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000065a, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1626 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000065a, readdata = xxxxxxxx
ALUA = bfc01968, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1627 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0196c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000065b, readdata = xxxxxxxx
ALUA = bfc0196c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1627 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000065b, readdata = xxxxxxxx
ALUA = bfc0196c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1628 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000065b, readdata = xxxxxxxx
ALUA = bfc01970, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000065c, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1628 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000065c, readdata = xxxxxxxx
ALUA = bfc01970, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1629 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01974, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000065d, readdata = xxxxxxxx
ALUA = bfc01974, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1629 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000065d, readdata = xxxxxxxx
ALUA = bfc01974, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1630 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000065d, readdata = xxxxxxxx
ALUA = bfc01978, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000065e, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1630 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000065e, readdata = xxxxxxxx
ALUA = bfc01978, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1631 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0197c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000065f, readdata = xxxxxxxx
ALUA = bfc0197c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1631 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000065f, readdata = xxxxxxxx
ALUA = bfc0197c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1632 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000065f, readdata = xxxxxxxx
ALUA = bfc01980, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000660, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1632 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000660, readdata = xxxxxxxx
ALUA = bfc01980, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1633 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01984, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000661, readdata = xxxxxxxx
ALUA = bfc01984, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1633 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000661, readdata = xxxxxxxx
ALUA = bfc01984, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1634 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000661, readdata = xxxxxxxx
ALUA = bfc01988, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000662, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1634 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000662, readdata = xxxxxxxx
ALUA = bfc01988, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1635 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0198c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000663, readdata = xxxxxxxx
ALUA = bfc0198c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1635 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000663, readdata = xxxxxxxx
ALUA = bfc0198c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1636 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000663, readdata = xxxxxxxx
ALUA = bfc01990, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000664, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1636 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000664, readdata = xxxxxxxx
ALUA = bfc01990, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1637 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01994, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000665, readdata = xxxxxxxx
ALUA = bfc01994, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1637 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000665, readdata = xxxxxxxx
ALUA = bfc01994, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1638 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000665, readdata = xxxxxxxx
ALUA = bfc01998, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000666, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1638 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000666, readdata = xxxxxxxx
ALUA = bfc01998, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1639 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc0199c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000667, readdata = xxxxxxxx
ALUA = bfc0199c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1639 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000667, readdata = xxxxxxxx
ALUA = bfc0199c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1640 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000667, readdata = xxxxxxxx
ALUA = bfc019a0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000668, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1640 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000668, readdata = xxxxxxxx
ALUA = bfc019a0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1641 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc019a4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000669, readdata = xxxxxxxx
ALUA = bfc019a4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1641 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000669, readdata = xxxxxxxx
ALUA = bfc019a4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1642 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000669, readdata = xxxxxxxx
ALUA = bfc019a8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000066a, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1642 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000066a, readdata = xxxxxxxx
ALUA = bfc019a8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1643 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc019ac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000066b, readdata = xxxxxxxx
ALUA = bfc019ac, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1643 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000066b, readdata = xxxxxxxx
ALUA = bfc019ac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1644 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000066b, readdata = xxxxxxxx
ALUA = bfc019b0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000066c, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1644 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000066c, readdata = xxxxxxxx
ALUA = bfc019b0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1645 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc019b4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000066d, readdata = xxxxxxxx
ALUA = bfc019b4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1645 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000066d, readdata = xxxxxxxx
ALUA = bfc019b4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1646 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000066d, readdata = xxxxxxxx
ALUA = bfc019b8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000066e, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1646 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000066e, readdata = xxxxxxxx
ALUA = bfc019b8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1647 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc019bc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000066f, readdata = xxxxxxxx
ALUA = bfc019bc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1647 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000066f, readdata = xxxxxxxx
ALUA = bfc019bc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1648 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000066f, readdata = xxxxxxxx
ALUA = bfc019c0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000670, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1648 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000670, readdata = xxxxxxxx
ALUA = bfc019c0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1649 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc019c4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000671, readdata = xxxxxxxx
ALUA = bfc019c4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1649 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000671, readdata = xxxxxxxx
ALUA = bfc019c4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1650 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000671, readdata = xxxxxxxx
ALUA = bfc019c8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000672, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1650 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000672, readdata = xxxxxxxx
ALUA = bfc019c8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1651 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc019cc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000673, readdata = xxxxxxxx
ALUA = bfc019cc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1651 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000673, readdata = xxxxxxxx
ALUA = bfc019cc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1652 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000673, readdata = xxxxxxxx
ALUA = bfc019d0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000674, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1652 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000674, readdata = xxxxxxxx
ALUA = bfc019d0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1653 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc019d4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000675, readdata = xxxxxxxx
ALUA = bfc019d4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1653 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000675, readdata = xxxxxxxx
ALUA = bfc019d4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1654 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000675, readdata = xxxxxxxx
ALUA = bfc019d8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000676, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1654 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000676, readdata = xxxxxxxx
ALUA = bfc019d8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1655 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc019dc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000677, readdata = xxxxxxxx
ALUA = bfc019dc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1655 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000677, readdata = xxxxxxxx
ALUA = bfc019dc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1656 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000677, readdata = xxxxxxxx
ALUA = bfc019e0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000678, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1656 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000678, readdata = xxxxxxxx
ALUA = bfc019e0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1657 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc019e4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000679, readdata = xxxxxxxx
ALUA = bfc019e4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1657 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000679, readdata = xxxxxxxx
ALUA = bfc019e4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1658 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000679, readdata = xxxxxxxx
ALUA = bfc019e8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000067a, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1658 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000067a, readdata = xxxxxxxx
ALUA = bfc019e8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1659 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc019ec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000067b, readdata = xxxxxxxx
ALUA = bfc019ec, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1659 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000067b, readdata = xxxxxxxx
ALUA = bfc019ec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1660 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000067b, readdata = xxxxxxxx
ALUA = bfc019f0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000067c, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1660 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000067c, readdata = xxxxxxxx
ALUA = bfc019f0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1661 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc019f4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000067d, readdata = xxxxxxxx
ALUA = bfc019f4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1661 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000067d, readdata = xxxxxxxx
ALUA = bfc019f4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1662 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000067d, readdata = xxxxxxxx
ALUA = bfc019f8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000067e, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1662 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000067e, readdata = xxxxxxxx
ALUA = bfc019f8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1663 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc019fc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000067f, readdata = xxxxxxxx
ALUA = bfc019fc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1663 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000067f, readdata = xxxxxxxx
ALUA = bfc019fc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1664 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000067f, readdata = xxxxxxxx
ALUA = bfc01a00, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000680, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1664 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000680, readdata = xxxxxxxx
ALUA = bfc01a00, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1665 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01a04, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000681, readdata = xxxxxxxx
ALUA = bfc01a04, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1665 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000681, readdata = xxxxxxxx
ALUA = bfc01a04, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1666 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000681, readdata = xxxxxxxx
ALUA = bfc01a08, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000682, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1666 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000682, readdata = xxxxxxxx
ALUA = bfc01a08, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1667 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01a0c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000683, readdata = xxxxxxxx
ALUA = bfc01a0c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1667 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000683, readdata = xxxxxxxx
ALUA = bfc01a0c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1668 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000683, readdata = xxxxxxxx
ALUA = bfc01a10, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000684, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1668 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000684, readdata = xxxxxxxx
ALUA = bfc01a10, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1669 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01a14, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000685, readdata = xxxxxxxx
ALUA = bfc01a14, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1669 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000685, readdata = xxxxxxxx
ALUA = bfc01a14, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1670 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000685, readdata = xxxxxxxx
ALUA = bfc01a18, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000686, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1670 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000686, readdata = xxxxxxxx
ALUA = bfc01a18, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1671 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01a1c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000687, readdata = xxxxxxxx
ALUA = bfc01a1c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1671 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000687, readdata = xxxxxxxx
ALUA = bfc01a1c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1672 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000687, readdata = xxxxxxxx
ALUA = bfc01a20, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000688, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1672 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000688, readdata = xxxxxxxx
ALUA = bfc01a20, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1673 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01a24, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000689, readdata = xxxxxxxx
ALUA = bfc01a24, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1673 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000689, readdata = xxxxxxxx
ALUA = bfc01a24, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1674 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000689, readdata = xxxxxxxx
ALUA = bfc01a28, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000068a, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1674 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000068a, readdata = xxxxxxxx
ALUA = bfc01a28, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1675 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01a2c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000068b, readdata = xxxxxxxx
ALUA = bfc01a2c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1675 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000068b, readdata = xxxxxxxx
ALUA = bfc01a2c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1676 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000068b, readdata = xxxxxxxx
ALUA = bfc01a30, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000068c, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1676 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000068c, readdata = xxxxxxxx
ALUA = bfc01a30, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1677 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01a34, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000068d, readdata = xxxxxxxx
ALUA = bfc01a34, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1677 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000068d, readdata = xxxxxxxx
ALUA = bfc01a34, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1678 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000068d, readdata = xxxxxxxx
ALUA = bfc01a38, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000068e, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1678 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000068e, readdata = xxxxxxxx
ALUA = bfc01a38, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1679 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01a3c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000068f, readdata = xxxxxxxx
ALUA = bfc01a3c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1679 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000068f, readdata = xxxxxxxx
ALUA = bfc01a3c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1680 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000068f, readdata = xxxxxxxx
ALUA = bfc01a40, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000690, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1680 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000690, readdata = xxxxxxxx
ALUA = bfc01a40, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1681 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01a44, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000691, readdata = xxxxxxxx
ALUA = bfc01a44, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1681 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000691, readdata = xxxxxxxx
ALUA = bfc01a44, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1682 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000691, readdata = xxxxxxxx
ALUA = bfc01a48, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000692, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1682 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000692, readdata = xxxxxxxx
ALUA = bfc01a48, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1683 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01a4c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000693, readdata = xxxxxxxx
ALUA = bfc01a4c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1683 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000693, readdata = xxxxxxxx
ALUA = bfc01a4c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1684 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000693, readdata = xxxxxxxx
ALUA = bfc01a50, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000694, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1684 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000694, readdata = xxxxxxxx
ALUA = bfc01a50, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1685 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01a54, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000695, readdata = xxxxxxxx
ALUA = bfc01a54, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1685 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000695, readdata = xxxxxxxx
ALUA = bfc01a54, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1686 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000695, readdata = xxxxxxxx
ALUA = bfc01a58, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000696, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1686 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000696, readdata = xxxxxxxx
ALUA = bfc01a58, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1687 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01a5c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000697, readdata = xxxxxxxx
ALUA = bfc01a5c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1687 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000697, readdata = xxxxxxxx
ALUA = bfc01a5c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1688 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000697, readdata = xxxxxxxx
ALUA = bfc01a60, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000698, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1688 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000698, readdata = xxxxxxxx
ALUA = bfc01a60, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1689 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01a64, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000699, readdata = xxxxxxxx
ALUA = bfc01a64, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1689 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000699, readdata = xxxxxxxx
ALUA = bfc01a64, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1690 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000699, readdata = xxxxxxxx
ALUA = bfc01a68, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000069a, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1690 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000069a, readdata = xxxxxxxx
ALUA = bfc01a68, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1691 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01a6c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000069b, readdata = xxxxxxxx
ALUA = bfc01a6c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1691 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000069b, readdata = xxxxxxxx
ALUA = bfc01a6c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1692 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000069b, readdata = xxxxxxxx
ALUA = bfc01a70, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000069c, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1692 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000069c, readdata = xxxxxxxx
ALUA = bfc01a70, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1693 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01a74, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000069d, readdata = xxxxxxxx
ALUA = bfc01a74, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1693 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000069d, readdata = xxxxxxxx
ALUA = bfc01a74, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1694 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000069d, readdata = xxxxxxxx
ALUA = bfc01a78, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000069e, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1694 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000069e, readdata = xxxxxxxx
ALUA = bfc01a78, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1695 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01a7c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000069f, readdata = xxxxxxxx
ALUA = bfc01a7c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1695 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000069f, readdata = xxxxxxxx
ALUA = bfc01a7c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1696 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000069f, readdata = xxxxxxxx
ALUA = bfc01a80, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006a0, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1696 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006a0, readdata = xxxxxxxx
ALUA = bfc01a80, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1697 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01a84, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006a1, readdata = xxxxxxxx
ALUA = bfc01a84, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1697 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006a1, readdata = xxxxxxxx
ALUA = bfc01a84, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1698 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000006a1, readdata = xxxxxxxx
ALUA = bfc01a88, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006a2, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1698 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006a2, readdata = xxxxxxxx
ALUA = bfc01a88, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1699 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01a8c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006a3, readdata = xxxxxxxx
ALUA = bfc01a8c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1699 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006a3, readdata = xxxxxxxx
ALUA = bfc01a8c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1700 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000006a3, readdata = xxxxxxxx
ALUA = bfc01a90, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006a4, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1700 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006a4, readdata = xxxxxxxx
ALUA = bfc01a90, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1701 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01a94, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006a5, readdata = xxxxxxxx
ALUA = bfc01a94, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1701 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006a5, readdata = xxxxxxxx
ALUA = bfc01a94, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1702 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000006a5, readdata = xxxxxxxx
ALUA = bfc01a98, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006a6, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1702 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006a6, readdata = xxxxxxxx
ALUA = bfc01a98, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1703 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01a9c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006a7, readdata = xxxxxxxx
ALUA = bfc01a9c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1703 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006a7, readdata = xxxxxxxx
ALUA = bfc01a9c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1704 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000006a7, readdata = xxxxxxxx
ALUA = bfc01aa0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006a8, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1704 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006a8, readdata = xxxxxxxx
ALUA = bfc01aa0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1705 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01aa4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006a9, readdata = xxxxxxxx
ALUA = bfc01aa4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1705 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006a9, readdata = xxxxxxxx
ALUA = bfc01aa4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1706 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000006a9, readdata = xxxxxxxx
ALUA = bfc01aa8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006aa, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1706 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006aa, readdata = xxxxxxxx
ALUA = bfc01aa8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1707 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01aac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006ab, readdata = xxxxxxxx
ALUA = bfc01aac, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1707 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006ab, readdata = xxxxxxxx
ALUA = bfc01aac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1708 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000006ab, readdata = xxxxxxxx
ALUA = bfc01ab0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006ac, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1708 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006ac, readdata = xxxxxxxx
ALUA = bfc01ab0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1709 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01ab4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006ad, readdata = xxxxxxxx
ALUA = bfc01ab4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1709 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006ad, readdata = xxxxxxxx
ALUA = bfc01ab4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1710 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000006ad, readdata = xxxxxxxx
ALUA = bfc01ab8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006ae, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1710 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006ae, readdata = xxxxxxxx
ALUA = bfc01ab8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1711 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01abc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006af, readdata = xxxxxxxx
ALUA = bfc01abc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1711 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006af, readdata = xxxxxxxx
ALUA = bfc01abc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1712 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000006af, readdata = xxxxxxxx
ALUA = bfc01ac0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006b0, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1712 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006b0, readdata = xxxxxxxx
ALUA = bfc01ac0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1713 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01ac4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006b1, readdata = xxxxxxxx
ALUA = bfc01ac4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1713 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006b1, readdata = xxxxxxxx
ALUA = bfc01ac4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1714 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000006b1, readdata = xxxxxxxx
ALUA = bfc01ac8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006b2, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1714 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006b2, readdata = xxxxxxxx
ALUA = bfc01ac8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1715 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01acc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006b3, readdata = xxxxxxxx
ALUA = bfc01acc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1715 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006b3, readdata = xxxxxxxx
ALUA = bfc01acc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1716 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000006b3, readdata = xxxxxxxx
ALUA = bfc01ad0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006b4, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1716 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006b4, readdata = xxxxxxxx
ALUA = bfc01ad0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1717 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01ad4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006b5, readdata = xxxxxxxx
ALUA = bfc01ad4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1717 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006b5, readdata = xxxxxxxx
ALUA = bfc01ad4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1718 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000006b5, readdata = xxxxxxxx
ALUA = bfc01ad8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006b6, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1718 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006b6, readdata = xxxxxxxx
ALUA = bfc01ad8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1719 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01adc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006b7, readdata = xxxxxxxx
ALUA = bfc01adc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1719 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006b7, readdata = xxxxxxxx
ALUA = bfc01adc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1720 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000006b7, readdata = xxxxxxxx
ALUA = bfc01ae0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006b8, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1720 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006b8, readdata = xxxxxxxx
ALUA = bfc01ae0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1721 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01ae4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006b9, readdata = xxxxxxxx
ALUA = bfc01ae4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1721 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006b9, readdata = xxxxxxxx
ALUA = bfc01ae4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1722 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000006b9, readdata = xxxxxxxx
ALUA = bfc01ae8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006ba, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1722 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006ba, readdata = xxxxxxxx
ALUA = bfc01ae8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1723 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01aec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006bb, readdata = xxxxxxxx
ALUA = bfc01aec, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1723 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006bb, readdata = xxxxxxxx
ALUA = bfc01aec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1724 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000006bb, readdata = xxxxxxxx
ALUA = bfc01af0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006bc, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1724 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006bc, readdata = xxxxxxxx
ALUA = bfc01af0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1725 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01af4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006bd, readdata = xxxxxxxx
ALUA = bfc01af4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1725 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006bd, readdata = xxxxxxxx
ALUA = bfc01af4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1726 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000006bd, readdata = xxxxxxxx
ALUA = bfc01af8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006be, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1726 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006be, readdata = xxxxxxxx
ALUA = bfc01af8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1727 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01afc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006bf, readdata = xxxxxxxx
ALUA = bfc01afc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1727 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006bf, readdata = xxxxxxxx
ALUA = bfc01afc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1728 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000006bf, readdata = xxxxxxxx
ALUA = bfc01b00, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006c0, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1728 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006c0, readdata = xxxxxxxx
ALUA = bfc01b00, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1729 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01b04, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006c1, readdata = xxxxxxxx
ALUA = bfc01b04, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1729 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006c1, readdata = xxxxxxxx
ALUA = bfc01b04, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1730 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000006c1, readdata = xxxxxxxx
ALUA = bfc01b08, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006c2, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1730 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006c2, readdata = xxxxxxxx
ALUA = bfc01b08, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1731 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01b0c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006c3, readdata = xxxxxxxx
ALUA = bfc01b0c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1731 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006c3, readdata = xxxxxxxx
ALUA = bfc01b0c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1732 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000006c3, readdata = xxxxxxxx
ALUA = bfc01b10, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006c4, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1732 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006c4, readdata = xxxxxxxx
ALUA = bfc01b10, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1733 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01b14, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006c5, readdata = xxxxxxxx
ALUA = bfc01b14, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1733 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006c5, readdata = xxxxxxxx
ALUA = bfc01b14, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1734 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000006c5, readdata = xxxxxxxx
ALUA = bfc01b18, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006c6, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1734 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006c6, readdata = xxxxxxxx
ALUA = bfc01b18, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1735 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01b1c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006c7, readdata = xxxxxxxx
ALUA = bfc01b1c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1735 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006c7, readdata = xxxxxxxx
ALUA = bfc01b1c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1736 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000006c7, readdata = xxxxxxxx
ALUA = bfc01b20, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006c8, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1736 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006c8, readdata = xxxxxxxx
ALUA = bfc01b20, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1737 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01b24, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006c9, readdata = xxxxxxxx
ALUA = bfc01b24, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1737 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006c9, readdata = xxxxxxxx
ALUA = bfc01b24, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1738 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000006c9, readdata = xxxxxxxx
ALUA = bfc01b28, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006ca, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1738 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006ca, readdata = xxxxxxxx
ALUA = bfc01b28, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1739 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01b2c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006cb, readdata = xxxxxxxx
ALUA = bfc01b2c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1739 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006cb, readdata = xxxxxxxx
ALUA = bfc01b2c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1740 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000006cb, readdata = xxxxxxxx
ALUA = bfc01b30, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006cc, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1740 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006cc, readdata = xxxxxxxx
ALUA = bfc01b30, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1741 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01b34, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006cd, readdata = xxxxxxxx
ALUA = bfc01b34, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1741 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006cd, readdata = xxxxxxxx
ALUA = bfc01b34, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1742 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000006cd, readdata = xxxxxxxx
ALUA = bfc01b38, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006ce, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1742 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006ce, readdata = xxxxxxxx
ALUA = bfc01b38, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1743 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01b3c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006cf, readdata = xxxxxxxx
ALUA = bfc01b3c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1743 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006cf, readdata = xxxxxxxx
ALUA = bfc01b3c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1744 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000006cf, readdata = xxxxxxxx
ALUA = bfc01b40, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006d0, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1744 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006d0, readdata = xxxxxxxx
ALUA = bfc01b40, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1745 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01b44, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006d1, readdata = xxxxxxxx
ALUA = bfc01b44, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1745 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006d1, readdata = xxxxxxxx
ALUA = bfc01b44, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1746 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000006d1, readdata = xxxxxxxx
ALUA = bfc01b48, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006d2, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1746 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006d2, readdata = xxxxxxxx
ALUA = bfc01b48, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1747 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01b4c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006d3, readdata = xxxxxxxx
ALUA = bfc01b4c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1747 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006d3, readdata = xxxxxxxx
ALUA = bfc01b4c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1748 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000006d3, readdata = xxxxxxxx
ALUA = bfc01b50, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006d4, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1748 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006d4, readdata = xxxxxxxx
ALUA = bfc01b50, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1749 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01b54, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006d5, readdata = xxxxxxxx
ALUA = bfc01b54, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1749 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006d5, readdata = xxxxxxxx
ALUA = bfc01b54, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1750 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000006d5, readdata = xxxxxxxx
ALUA = bfc01b58, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006d6, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1750 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006d6, readdata = xxxxxxxx
ALUA = bfc01b58, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1751 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01b5c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006d7, readdata = xxxxxxxx
ALUA = bfc01b5c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1751 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006d7, readdata = xxxxxxxx
ALUA = bfc01b5c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1752 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000006d7, readdata = xxxxxxxx
ALUA = bfc01b60, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006d8, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1752 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006d8, readdata = xxxxxxxx
ALUA = bfc01b60, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1753 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01b64, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006d9, readdata = xxxxxxxx
ALUA = bfc01b64, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1753 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006d9, readdata = xxxxxxxx
ALUA = bfc01b64, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1754 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000006d9, readdata = xxxxxxxx
ALUA = bfc01b68, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006da, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1754 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006da, readdata = xxxxxxxx
ALUA = bfc01b68, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1755 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01b6c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006db, readdata = xxxxxxxx
ALUA = bfc01b6c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1755 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006db, readdata = xxxxxxxx
ALUA = bfc01b6c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1756 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000006db, readdata = xxxxxxxx
ALUA = bfc01b70, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006dc, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1756 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006dc, readdata = xxxxxxxx
ALUA = bfc01b70, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1757 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01b74, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006dd, readdata = xxxxxxxx
ALUA = bfc01b74, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1757 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006dd, readdata = xxxxxxxx
ALUA = bfc01b74, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1758 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000006dd, readdata = xxxxxxxx
ALUA = bfc01b78, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006de, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1758 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006de, readdata = xxxxxxxx
ALUA = bfc01b78, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1759 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01b7c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006df, readdata = xxxxxxxx
ALUA = bfc01b7c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1759 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006df, readdata = xxxxxxxx
ALUA = bfc01b7c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1760 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000006df, readdata = xxxxxxxx
ALUA = bfc01b80, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006e0, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1760 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006e0, readdata = xxxxxxxx
ALUA = bfc01b80, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1761 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01b84, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006e1, readdata = xxxxxxxx
ALUA = bfc01b84, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1761 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006e1, readdata = xxxxxxxx
ALUA = bfc01b84, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1762 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000006e1, readdata = xxxxxxxx
ALUA = bfc01b88, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006e2, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1762 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006e2, readdata = xxxxxxxx
ALUA = bfc01b88, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1763 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01b8c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006e3, readdata = xxxxxxxx
ALUA = bfc01b8c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1763 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006e3, readdata = xxxxxxxx
ALUA = bfc01b8c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1764 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000006e3, readdata = xxxxxxxx
ALUA = bfc01b90, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006e4, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1764 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006e4, readdata = xxxxxxxx
ALUA = bfc01b90, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1765 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01b94, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006e5, readdata = xxxxxxxx
ALUA = bfc01b94, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1765 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006e5, readdata = xxxxxxxx
ALUA = bfc01b94, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1766 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000006e5, readdata = xxxxxxxx
ALUA = bfc01b98, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006e6, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1766 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006e6, readdata = xxxxxxxx
ALUA = bfc01b98, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1767 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01b9c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006e7, readdata = xxxxxxxx
ALUA = bfc01b9c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1767 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006e7, readdata = xxxxxxxx
ALUA = bfc01b9c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1768 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000006e7, readdata = xxxxxxxx
ALUA = bfc01ba0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006e8, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1768 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006e8, readdata = xxxxxxxx
ALUA = bfc01ba0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1769 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01ba4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006e9, readdata = xxxxxxxx
ALUA = bfc01ba4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1769 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006e9, readdata = xxxxxxxx
ALUA = bfc01ba4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1770 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000006e9, readdata = xxxxxxxx
ALUA = bfc01ba8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006ea, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1770 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006ea, readdata = xxxxxxxx
ALUA = bfc01ba8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1771 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01bac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006eb, readdata = xxxxxxxx
ALUA = bfc01bac, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1771 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006eb, readdata = xxxxxxxx
ALUA = bfc01bac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1772 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000006eb, readdata = xxxxxxxx
ALUA = bfc01bb0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006ec, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1772 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006ec, readdata = xxxxxxxx
ALUA = bfc01bb0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1773 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01bb4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006ed, readdata = xxxxxxxx
ALUA = bfc01bb4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1773 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006ed, readdata = xxxxxxxx
ALUA = bfc01bb4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1774 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000006ed, readdata = xxxxxxxx
ALUA = bfc01bb8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006ee, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1774 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006ee, readdata = xxxxxxxx
ALUA = bfc01bb8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1775 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01bbc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006ef, readdata = xxxxxxxx
ALUA = bfc01bbc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1775 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006ef, readdata = xxxxxxxx
ALUA = bfc01bbc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1776 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000006ef, readdata = xxxxxxxx
ALUA = bfc01bc0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006f0, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1776 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006f0, readdata = xxxxxxxx
ALUA = bfc01bc0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1777 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01bc4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006f1, readdata = xxxxxxxx
ALUA = bfc01bc4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1777 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006f1, readdata = xxxxxxxx
ALUA = bfc01bc4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1778 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000006f1, readdata = xxxxxxxx
ALUA = bfc01bc8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006f2, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1778 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006f2, readdata = xxxxxxxx
ALUA = bfc01bc8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1779 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01bcc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006f3, readdata = xxxxxxxx
ALUA = bfc01bcc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1779 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006f3, readdata = xxxxxxxx
ALUA = bfc01bcc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1780 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000006f3, readdata = xxxxxxxx
ALUA = bfc01bd0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006f4, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1780 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006f4, readdata = xxxxxxxx
ALUA = bfc01bd0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1781 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01bd4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006f5, readdata = xxxxxxxx
ALUA = bfc01bd4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1781 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006f5, readdata = xxxxxxxx
ALUA = bfc01bd4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1782 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000006f5, readdata = xxxxxxxx
ALUA = bfc01bd8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006f6, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1782 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006f6, readdata = xxxxxxxx
ALUA = bfc01bd8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1783 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01bdc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006f7, readdata = xxxxxxxx
ALUA = bfc01bdc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1783 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006f7, readdata = xxxxxxxx
ALUA = bfc01bdc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1784 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000006f7, readdata = xxxxxxxx
ALUA = bfc01be0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006f8, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1784 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006f8, readdata = xxxxxxxx
ALUA = bfc01be0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1785 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01be4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006f9, readdata = xxxxxxxx
ALUA = bfc01be4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1785 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006f9, readdata = xxxxxxxx
ALUA = bfc01be4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1786 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000006f9, readdata = xxxxxxxx
ALUA = bfc01be8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006fa, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1786 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006fa, readdata = xxxxxxxx
ALUA = bfc01be8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1787 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01bec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006fb, readdata = xxxxxxxx
ALUA = bfc01bec, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1787 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006fb, readdata = xxxxxxxx
ALUA = bfc01bec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1788 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000006fb, readdata = xxxxxxxx
ALUA = bfc01bf0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006fc, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1788 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006fc, readdata = xxxxxxxx
ALUA = bfc01bf0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1789 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01bf4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006fd, readdata = xxxxxxxx
ALUA = bfc01bf4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1789 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006fd, readdata = xxxxxxxx
ALUA = bfc01bf4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1790 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000006fd, readdata = xxxxxxxx
ALUA = bfc01bf8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006fe, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1790 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006fe, readdata = xxxxxxxx
ALUA = bfc01bf8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1791 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01bfc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000006ff, readdata = xxxxxxxx
ALUA = bfc01bfc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1791 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000006ff, readdata = xxxxxxxx
ALUA = bfc01bfc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1792 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000006ff, readdata = xxxxxxxx
ALUA = bfc01c00, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000700, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1792 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000700, readdata = xxxxxxxx
ALUA = bfc01c00, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1793 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01c04, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000701, readdata = xxxxxxxx
ALUA = bfc01c04, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1793 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000701, readdata = xxxxxxxx
ALUA = bfc01c04, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1794 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000701, readdata = xxxxxxxx
ALUA = bfc01c08, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000702, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1794 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000702, readdata = xxxxxxxx
ALUA = bfc01c08, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1795 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01c0c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000703, readdata = xxxxxxxx
ALUA = bfc01c0c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1795 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000703, readdata = xxxxxxxx
ALUA = bfc01c0c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1796 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000703, readdata = xxxxxxxx
ALUA = bfc01c10, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000704, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1796 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000704, readdata = xxxxxxxx
ALUA = bfc01c10, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1797 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01c14, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000705, readdata = xxxxxxxx
ALUA = bfc01c14, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1797 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000705, readdata = xxxxxxxx
ALUA = bfc01c14, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1798 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000705, readdata = xxxxxxxx
ALUA = bfc01c18, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000706, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1798 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000706, readdata = xxxxxxxx
ALUA = bfc01c18, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1799 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01c1c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000707, readdata = xxxxxxxx
ALUA = bfc01c1c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1799 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000707, readdata = xxxxxxxx
ALUA = bfc01c1c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1800 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000707, readdata = xxxxxxxx
ALUA = bfc01c20, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000708, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1800 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000708, readdata = xxxxxxxx
ALUA = bfc01c20, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1801 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01c24, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000709, readdata = xxxxxxxx
ALUA = bfc01c24, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1801 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000709, readdata = xxxxxxxx
ALUA = bfc01c24, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1802 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000709, readdata = xxxxxxxx
ALUA = bfc01c28, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000070a, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1802 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000070a, readdata = xxxxxxxx
ALUA = bfc01c28, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1803 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01c2c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000070b, readdata = xxxxxxxx
ALUA = bfc01c2c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1803 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000070b, readdata = xxxxxxxx
ALUA = bfc01c2c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1804 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000070b, readdata = xxxxxxxx
ALUA = bfc01c30, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000070c, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1804 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000070c, readdata = xxxxxxxx
ALUA = bfc01c30, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1805 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01c34, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000070d, readdata = xxxxxxxx
ALUA = bfc01c34, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1805 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000070d, readdata = xxxxxxxx
ALUA = bfc01c34, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1806 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000070d, readdata = xxxxxxxx
ALUA = bfc01c38, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000070e, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1806 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000070e, readdata = xxxxxxxx
ALUA = bfc01c38, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1807 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01c3c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000070f, readdata = xxxxxxxx
ALUA = bfc01c3c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1807 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000070f, readdata = xxxxxxxx
ALUA = bfc01c3c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1808 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000070f, readdata = xxxxxxxx
ALUA = bfc01c40, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000710, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1808 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000710, readdata = xxxxxxxx
ALUA = bfc01c40, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1809 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01c44, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000711, readdata = xxxxxxxx
ALUA = bfc01c44, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1809 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000711, readdata = xxxxxxxx
ALUA = bfc01c44, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1810 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000711, readdata = xxxxxxxx
ALUA = bfc01c48, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000712, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1810 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000712, readdata = xxxxxxxx
ALUA = bfc01c48, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1811 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01c4c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000713, readdata = xxxxxxxx
ALUA = bfc01c4c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1811 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000713, readdata = xxxxxxxx
ALUA = bfc01c4c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1812 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000713, readdata = xxxxxxxx
ALUA = bfc01c50, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000714, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1812 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000714, readdata = xxxxxxxx
ALUA = bfc01c50, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1813 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01c54, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000715, readdata = xxxxxxxx
ALUA = bfc01c54, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1813 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000715, readdata = xxxxxxxx
ALUA = bfc01c54, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1814 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000715, readdata = xxxxxxxx
ALUA = bfc01c58, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000716, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1814 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000716, readdata = xxxxxxxx
ALUA = bfc01c58, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1815 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01c5c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000717, readdata = xxxxxxxx
ALUA = bfc01c5c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1815 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000717, readdata = xxxxxxxx
ALUA = bfc01c5c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1816 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000717, readdata = xxxxxxxx
ALUA = bfc01c60, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000718, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1816 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000718, readdata = xxxxxxxx
ALUA = bfc01c60, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1817 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01c64, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000719, readdata = xxxxxxxx
ALUA = bfc01c64, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1817 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000719, readdata = xxxxxxxx
ALUA = bfc01c64, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1818 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000719, readdata = xxxxxxxx
ALUA = bfc01c68, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000071a, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1818 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000071a, readdata = xxxxxxxx
ALUA = bfc01c68, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1819 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01c6c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000071b, readdata = xxxxxxxx
ALUA = bfc01c6c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1819 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000071b, readdata = xxxxxxxx
ALUA = bfc01c6c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1820 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000071b, readdata = xxxxxxxx
ALUA = bfc01c70, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000071c, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1820 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000071c, readdata = xxxxxxxx
ALUA = bfc01c70, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1821 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01c74, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000071d, readdata = xxxxxxxx
ALUA = bfc01c74, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1821 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000071d, readdata = xxxxxxxx
ALUA = bfc01c74, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1822 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000071d, readdata = xxxxxxxx
ALUA = bfc01c78, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000071e, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1822 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000071e, readdata = xxxxxxxx
ALUA = bfc01c78, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1823 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01c7c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000071f, readdata = xxxxxxxx
ALUA = bfc01c7c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1823 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000071f, readdata = xxxxxxxx
ALUA = bfc01c7c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1824 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000071f, readdata = xxxxxxxx
ALUA = bfc01c80, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000720, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1824 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000720, readdata = xxxxxxxx
ALUA = bfc01c80, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1825 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01c84, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000721, readdata = xxxxxxxx
ALUA = bfc01c84, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1825 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000721, readdata = xxxxxxxx
ALUA = bfc01c84, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1826 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000721, readdata = xxxxxxxx
ALUA = bfc01c88, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000722, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1826 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000722, readdata = xxxxxxxx
ALUA = bfc01c88, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1827 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01c8c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000723, readdata = xxxxxxxx
ALUA = bfc01c8c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1827 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000723, readdata = xxxxxxxx
ALUA = bfc01c8c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1828 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000723, readdata = xxxxxxxx
ALUA = bfc01c90, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000724, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1828 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000724, readdata = xxxxxxxx
ALUA = bfc01c90, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1829 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01c94, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000725, readdata = xxxxxxxx
ALUA = bfc01c94, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1829 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000725, readdata = xxxxxxxx
ALUA = bfc01c94, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1830 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000725, readdata = xxxxxxxx
ALUA = bfc01c98, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000726, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1830 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000726, readdata = xxxxxxxx
ALUA = bfc01c98, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1831 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01c9c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000727, readdata = xxxxxxxx
ALUA = bfc01c9c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1831 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000727, readdata = xxxxxxxx
ALUA = bfc01c9c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1832 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000727, readdata = xxxxxxxx
ALUA = bfc01ca0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000728, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1832 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000728, readdata = xxxxxxxx
ALUA = bfc01ca0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1833 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01ca4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000729, readdata = xxxxxxxx
ALUA = bfc01ca4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1833 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000729, readdata = xxxxxxxx
ALUA = bfc01ca4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1834 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000729, readdata = xxxxxxxx
ALUA = bfc01ca8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000072a, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1834 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000072a, readdata = xxxxxxxx
ALUA = bfc01ca8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1835 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01cac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000072b, readdata = xxxxxxxx
ALUA = bfc01cac, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1835 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000072b, readdata = xxxxxxxx
ALUA = bfc01cac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1836 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000072b, readdata = xxxxxxxx
ALUA = bfc01cb0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000072c, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1836 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000072c, readdata = xxxxxxxx
ALUA = bfc01cb0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1837 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01cb4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000072d, readdata = xxxxxxxx
ALUA = bfc01cb4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1837 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000072d, readdata = xxxxxxxx
ALUA = bfc01cb4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1838 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000072d, readdata = xxxxxxxx
ALUA = bfc01cb8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000072e, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1838 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000072e, readdata = xxxxxxxx
ALUA = bfc01cb8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1839 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01cbc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000072f, readdata = xxxxxxxx
ALUA = bfc01cbc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1839 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000072f, readdata = xxxxxxxx
ALUA = bfc01cbc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1840 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000072f, readdata = xxxxxxxx
ALUA = bfc01cc0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000730, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1840 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000730, readdata = xxxxxxxx
ALUA = bfc01cc0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1841 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01cc4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000731, readdata = xxxxxxxx
ALUA = bfc01cc4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1841 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000731, readdata = xxxxxxxx
ALUA = bfc01cc4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1842 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000731, readdata = xxxxxxxx
ALUA = bfc01cc8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000732, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1842 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000732, readdata = xxxxxxxx
ALUA = bfc01cc8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1843 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01ccc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000733, readdata = xxxxxxxx
ALUA = bfc01ccc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1843 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000733, readdata = xxxxxxxx
ALUA = bfc01ccc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1844 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000733, readdata = xxxxxxxx
ALUA = bfc01cd0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000734, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1844 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000734, readdata = xxxxxxxx
ALUA = bfc01cd0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1845 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01cd4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000735, readdata = xxxxxxxx
ALUA = bfc01cd4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1845 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000735, readdata = xxxxxxxx
ALUA = bfc01cd4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1846 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000735, readdata = xxxxxxxx
ALUA = bfc01cd8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000736, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1846 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000736, readdata = xxxxxxxx
ALUA = bfc01cd8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1847 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01cdc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000737, readdata = xxxxxxxx
ALUA = bfc01cdc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1847 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000737, readdata = xxxxxxxx
ALUA = bfc01cdc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1848 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000737, readdata = xxxxxxxx
ALUA = bfc01ce0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000738, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1848 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000738, readdata = xxxxxxxx
ALUA = bfc01ce0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1849 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01ce4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000739, readdata = xxxxxxxx
ALUA = bfc01ce4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1849 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000739, readdata = xxxxxxxx
ALUA = bfc01ce4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1850 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000739, readdata = xxxxxxxx
ALUA = bfc01ce8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000073a, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1850 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000073a, readdata = xxxxxxxx
ALUA = bfc01ce8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1851 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01cec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000073b, readdata = xxxxxxxx
ALUA = bfc01cec, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1851 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000073b, readdata = xxxxxxxx
ALUA = bfc01cec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1852 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000073b, readdata = xxxxxxxx
ALUA = bfc01cf0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000073c, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1852 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000073c, readdata = xxxxxxxx
ALUA = bfc01cf0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1853 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01cf4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000073d, readdata = xxxxxxxx
ALUA = bfc01cf4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1853 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000073d, readdata = xxxxxxxx
ALUA = bfc01cf4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1854 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000073d, readdata = xxxxxxxx
ALUA = bfc01cf8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000073e, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1854 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000073e, readdata = xxxxxxxx
ALUA = bfc01cf8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1855 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01cfc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000073f, readdata = xxxxxxxx
ALUA = bfc01cfc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1855 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000073f, readdata = xxxxxxxx
ALUA = bfc01cfc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1856 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000073f, readdata = xxxxxxxx
ALUA = bfc01d00, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000740, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1856 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000740, readdata = xxxxxxxx
ALUA = bfc01d00, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1857 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01d04, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000741, readdata = xxxxxxxx
ALUA = bfc01d04, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1857 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000741, readdata = xxxxxxxx
ALUA = bfc01d04, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1858 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000741, readdata = xxxxxxxx
ALUA = bfc01d08, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000742, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1858 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000742, readdata = xxxxxxxx
ALUA = bfc01d08, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1859 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01d0c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000743, readdata = xxxxxxxx
ALUA = bfc01d0c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1859 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000743, readdata = xxxxxxxx
ALUA = bfc01d0c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1860 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000743, readdata = xxxxxxxx
ALUA = bfc01d10, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000744, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1860 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000744, readdata = xxxxxxxx
ALUA = bfc01d10, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1861 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01d14, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000745, readdata = xxxxxxxx
ALUA = bfc01d14, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1861 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000745, readdata = xxxxxxxx
ALUA = bfc01d14, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1862 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000745, readdata = xxxxxxxx
ALUA = bfc01d18, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000746, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1862 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000746, readdata = xxxxxxxx
ALUA = bfc01d18, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1863 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01d1c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000747, readdata = xxxxxxxx
ALUA = bfc01d1c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1863 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000747, readdata = xxxxxxxx
ALUA = bfc01d1c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1864 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000747, readdata = xxxxxxxx
ALUA = bfc01d20, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000748, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1864 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000748, readdata = xxxxxxxx
ALUA = bfc01d20, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1865 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01d24, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000749, readdata = xxxxxxxx
ALUA = bfc01d24, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1865 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000749, readdata = xxxxxxxx
ALUA = bfc01d24, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1866 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000749, readdata = xxxxxxxx
ALUA = bfc01d28, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000074a, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1866 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000074a, readdata = xxxxxxxx
ALUA = bfc01d28, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1867 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01d2c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000074b, readdata = xxxxxxxx
ALUA = bfc01d2c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1867 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000074b, readdata = xxxxxxxx
ALUA = bfc01d2c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1868 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000074b, readdata = xxxxxxxx
ALUA = bfc01d30, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000074c, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1868 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000074c, readdata = xxxxxxxx
ALUA = bfc01d30, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1869 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01d34, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000074d, readdata = xxxxxxxx
ALUA = bfc01d34, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1869 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000074d, readdata = xxxxxxxx
ALUA = bfc01d34, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1870 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000074d, readdata = xxxxxxxx
ALUA = bfc01d38, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000074e, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1870 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000074e, readdata = xxxxxxxx
ALUA = bfc01d38, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1871 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01d3c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000074f, readdata = xxxxxxxx
ALUA = bfc01d3c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1871 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000074f, readdata = xxxxxxxx
ALUA = bfc01d3c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1872 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000074f, readdata = xxxxxxxx
ALUA = bfc01d40, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000750, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1872 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000750, readdata = xxxxxxxx
ALUA = bfc01d40, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1873 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01d44, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000751, readdata = xxxxxxxx
ALUA = bfc01d44, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1873 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000751, readdata = xxxxxxxx
ALUA = bfc01d44, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1874 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000751, readdata = xxxxxxxx
ALUA = bfc01d48, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000752, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1874 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000752, readdata = xxxxxxxx
ALUA = bfc01d48, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1875 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01d4c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000753, readdata = xxxxxxxx
ALUA = bfc01d4c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1875 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000753, readdata = xxxxxxxx
ALUA = bfc01d4c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1876 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000753, readdata = xxxxxxxx
ALUA = bfc01d50, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000754, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1876 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000754, readdata = xxxxxxxx
ALUA = bfc01d50, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1877 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01d54, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000755, readdata = xxxxxxxx
ALUA = bfc01d54, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1877 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000755, readdata = xxxxxxxx
ALUA = bfc01d54, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1878 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000755, readdata = xxxxxxxx
ALUA = bfc01d58, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000756, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1878 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000756, readdata = xxxxxxxx
ALUA = bfc01d58, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1879 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01d5c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000757, readdata = xxxxxxxx
ALUA = bfc01d5c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1879 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000757, readdata = xxxxxxxx
ALUA = bfc01d5c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1880 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000757, readdata = xxxxxxxx
ALUA = bfc01d60, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000758, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1880 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000758, readdata = xxxxxxxx
ALUA = bfc01d60, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1881 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01d64, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000759, readdata = xxxxxxxx
ALUA = bfc01d64, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1881 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000759, readdata = xxxxxxxx
ALUA = bfc01d64, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1882 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000759, readdata = xxxxxxxx
ALUA = bfc01d68, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000075a, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1882 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000075a, readdata = xxxxxxxx
ALUA = bfc01d68, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1883 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01d6c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000075b, readdata = xxxxxxxx
ALUA = bfc01d6c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1883 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000075b, readdata = xxxxxxxx
ALUA = bfc01d6c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1884 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000075b, readdata = xxxxxxxx
ALUA = bfc01d70, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000075c, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1884 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000075c, readdata = xxxxxxxx
ALUA = bfc01d70, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1885 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01d74, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000075d, readdata = xxxxxxxx
ALUA = bfc01d74, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1885 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000075d, readdata = xxxxxxxx
ALUA = bfc01d74, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1886 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000075d, readdata = xxxxxxxx
ALUA = bfc01d78, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000075e, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1886 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000075e, readdata = xxxxxxxx
ALUA = bfc01d78, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1887 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01d7c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000075f, readdata = xxxxxxxx
ALUA = bfc01d7c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1887 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000075f, readdata = xxxxxxxx
ALUA = bfc01d7c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1888 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000075f, readdata = xxxxxxxx
ALUA = bfc01d80, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000760, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1888 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000760, readdata = xxxxxxxx
ALUA = bfc01d80, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1889 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01d84, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000761, readdata = xxxxxxxx
ALUA = bfc01d84, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1889 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000761, readdata = xxxxxxxx
ALUA = bfc01d84, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1890 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000761, readdata = xxxxxxxx
ALUA = bfc01d88, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000762, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1890 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000762, readdata = xxxxxxxx
ALUA = bfc01d88, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1891 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01d8c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000763, readdata = xxxxxxxx
ALUA = bfc01d8c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1891 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000763, readdata = xxxxxxxx
ALUA = bfc01d8c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1892 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000763, readdata = xxxxxxxx
ALUA = bfc01d90, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000764, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1892 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000764, readdata = xxxxxxxx
ALUA = bfc01d90, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1893 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01d94, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000765, readdata = xxxxxxxx
ALUA = bfc01d94, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1893 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000765, readdata = xxxxxxxx
ALUA = bfc01d94, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1894 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000765, readdata = xxxxxxxx
ALUA = bfc01d98, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000766, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1894 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000766, readdata = xxxxxxxx
ALUA = bfc01d98, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1895 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01d9c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000767, readdata = xxxxxxxx
ALUA = bfc01d9c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1895 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000767, readdata = xxxxxxxx
ALUA = bfc01d9c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1896 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000767, readdata = xxxxxxxx
ALUA = bfc01da0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000768, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1896 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000768, readdata = xxxxxxxx
ALUA = bfc01da0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1897 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01da4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000769, readdata = xxxxxxxx
ALUA = bfc01da4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1897 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000769, readdata = xxxxxxxx
ALUA = bfc01da4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1898 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000769, readdata = xxxxxxxx
ALUA = bfc01da8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000076a, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1898 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000076a, readdata = xxxxxxxx
ALUA = bfc01da8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1899 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01dac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000076b, readdata = xxxxxxxx
ALUA = bfc01dac, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1899 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000076b, readdata = xxxxxxxx
ALUA = bfc01dac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1900 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000076b, readdata = xxxxxxxx
ALUA = bfc01db0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000076c, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1900 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000076c, readdata = xxxxxxxx
ALUA = bfc01db0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1901 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01db4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000076d, readdata = xxxxxxxx
ALUA = bfc01db4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1901 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000076d, readdata = xxxxxxxx
ALUA = bfc01db4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1902 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000076d, readdata = xxxxxxxx
ALUA = bfc01db8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000076e, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1902 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000076e, readdata = xxxxxxxx
ALUA = bfc01db8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1903 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01dbc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000076f, readdata = xxxxxxxx
ALUA = bfc01dbc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1903 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000076f, readdata = xxxxxxxx
ALUA = bfc01dbc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1904 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000076f, readdata = xxxxxxxx
ALUA = bfc01dc0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000770, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1904 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000770, readdata = xxxxxxxx
ALUA = bfc01dc0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1905 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01dc4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000771, readdata = xxxxxxxx
ALUA = bfc01dc4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1905 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000771, readdata = xxxxxxxx
ALUA = bfc01dc4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1906 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000771, readdata = xxxxxxxx
ALUA = bfc01dc8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000772, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1906 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000772, readdata = xxxxxxxx
ALUA = bfc01dc8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1907 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01dcc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000773, readdata = xxxxxxxx
ALUA = bfc01dcc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1907 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000773, readdata = xxxxxxxx
ALUA = bfc01dcc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1908 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000773, readdata = xxxxxxxx
ALUA = bfc01dd0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000774, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1908 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000774, readdata = xxxxxxxx
ALUA = bfc01dd0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1909 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01dd4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000775, readdata = xxxxxxxx
ALUA = bfc01dd4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1909 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000775, readdata = xxxxxxxx
ALUA = bfc01dd4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1910 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000775, readdata = xxxxxxxx
ALUA = bfc01dd8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000776, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1910 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000776, readdata = xxxxxxxx
ALUA = bfc01dd8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1911 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01ddc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000777, readdata = xxxxxxxx
ALUA = bfc01ddc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1911 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000777, readdata = xxxxxxxx
ALUA = bfc01ddc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1912 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000777, readdata = xxxxxxxx
ALUA = bfc01de0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000778, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1912 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000778, readdata = xxxxxxxx
ALUA = bfc01de0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1913 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01de4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000779, readdata = xxxxxxxx
ALUA = bfc01de4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1913 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000779, readdata = xxxxxxxx
ALUA = bfc01de4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1914 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000779, readdata = xxxxxxxx
ALUA = bfc01de8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000077a, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1914 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000077a, readdata = xxxxxxxx
ALUA = bfc01de8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1915 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01dec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000077b, readdata = xxxxxxxx
ALUA = bfc01dec, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1915 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000077b, readdata = xxxxxxxx
ALUA = bfc01dec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1916 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000077b, readdata = xxxxxxxx
ALUA = bfc01df0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000077c, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1916 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000077c, readdata = xxxxxxxx
ALUA = bfc01df0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1917 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01df4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000077d, readdata = xxxxxxxx
ALUA = bfc01df4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1917 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000077d, readdata = xxxxxxxx
ALUA = bfc01df4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1918 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000077d, readdata = xxxxxxxx
ALUA = bfc01df8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000077e, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1918 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000077e, readdata = xxxxxxxx
ALUA = bfc01df8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1919 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01dfc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000077f, readdata = xxxxxxxx
ALUA = bfc01dfc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1919 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000077f, readdata = xxxxxxxx
ALUA = bfc01dfc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1920 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000077f, readdata = xxxxxxxx
ALUA = bfc01e00, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000780, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1920 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000780, readdata = xxxxxxxx
ALUA = bfc01e00, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1921 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01e04, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000781, readdata = xxxxxxxx
ALUA = bfc01e04, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1921 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000781, readdata = xxxxxxxx
ALUA = bfc01e04, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1922 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000781, readdata = xxxxxxxx
ALUA = bfc01e08, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000782, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1922 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000782, readdata = xxxxxxxx
ALUA = bfc01e08, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1923 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01e0c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000783, readdata = xxxxxxxx
ALUA = bfc01e0c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1923 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000783, readdata = xxxxxxxx
ALUA = bfc01e0c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1924 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000783, readdata = xxxxxxxx
ALUA = bfc01e10, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000784, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1924 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000784, readdata = xxxxxxxx
ALUA = bfc01e10, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1925 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01e14, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000785, readdata = xxxxxxxx
ALUA = bfc01e14, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1925 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000785, readdata = xxxxxxxx
ALUA = bfc01e14, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1926 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000785, readdata = xxxxxxxx
ALUA = bfc01e18, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000786, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1926 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000786, readdata = xxxxxxxx
ALUA = bfc01e18, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1927 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01e1c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000787, readdata = xxxxxxxx
ALUA = bfc01e1c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1927 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000787, readdata = xxxxxxxx
ALUA = bfc01e1c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1928 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000787, readdata = xxxxxxxx
ALUA = bfc01e20, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000788, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1928 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000788, readdata = xxxxxxxx
ALUA = bfc01e20, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1929 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01e24, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000789, readdata = xxxxxxxx
ALUA = bfc01e24, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1929 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000789, readdata = xxxxxxxx
ALUA = bfc01e24, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1930 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000789, readdata = xxxxxxxx
ALUA = bfc01e28, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000078a, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1930 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000078a, readdata = xxxxxxxx
ALUA = bfc01e28, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1931 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01e2c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000078b, readdata = xxxxxxxx
ALUA = bfc01e2c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1931 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000078b, readdata = xxxxxxxx
ALUA = bfc01e2c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1932 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000078b, readdata = xxxxxxxx
ALUA = bfc01e30, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000078c, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1932 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000078c, readdata = xxxxxxxx
ALUA = bfc01e30, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1933 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01e34, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000078d, readdata = xxxxxxxx
ALUA = bfc01e34, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1933 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000078d, readdata = xxxxxxxx
ALUA = bfc01e34, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1934 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000078d, readdata = xxxxxxxx
ALUA = bfc01e38, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000078e, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1934 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000078e, readdata = xxxxxxxx
ALUA = bfc01e38, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1935 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01e3c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000078f, readdata = xxxxxxxx
ALUA = bfc01e3c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1935 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000078f, readdata = xxxxxxxx
ALUA = bfc01e3c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1936 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000078f, readdata = xxxxxxxx
ALUA = bfc01e40, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000790, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1936 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000790, readdata = xxxxxxxx
ALUA = bfc01e40, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1937 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01e44, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000791, readdata = xxxxxxxx
ALUA = bfc01e44, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1937 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000791, readdata = xxxxxxxx
ALUA = bfc01e44, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1938 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000791, readdata = xxxxxxxx
ALUA = bfc01e48, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000792, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1938 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000792, readdata = xxxxxxxx
ALUA = bfc01e48, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1939 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01e4c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000793, readdata = xxxxxxxx
ALUA = bfc01e4c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1939 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000793, readdata = xxxxxxxx
ALUA = bfc01e4c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1940 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000793, readdata = xxxxxxxx
ALUA = bfc01e50, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000794, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1940 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000794, readdata = xxxxxxxx
ALUA = bfc01e50, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1941 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01e54, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000795, readdata = xxxxxxxx
ALUA = bfc01e54, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1941 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000795, readdata = xxxxxxxx
ALUA = bfc01e54, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1942 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000795, readdata = xxxxxxxx
ALUA = bfc01e58, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000796, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1942 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000796, readdata = xxxxxxxx
ALUA = bfc01e58, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1943 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01e5c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000797, readdata = xxxxxxxx
ALUA = bfc01e5c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1943 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000797, readdata = xxxxxxxx
ALUA = bfc01e5c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1944 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000797, readdata = xxxxxxxx
ALUA = bfc01e60, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000798, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1944 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000798, readdata = xxxxxxxx
ALUA = bfc01e60, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1945 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01e64, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 00000799, readdata = xxxxxxxx
ALUA = bfc01e64, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1945 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000799, readdata = xxxxxxxx
ALUA = bfc01e64, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1946 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 00000799, readdata = xxxxxxxx
ALUA = bfc01e68, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000079a, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1946 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000079a, readdata = xxxxxxxx
ALUA = bfc01e68, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1947 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01e6c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000079b, readdata = xxxxxxxx
ALUA = bfc01e6c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1947 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000079b, readdata = xxxxxxxx
ALUA = bfc01e6c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1948 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000079b, readdata = xxxxxxxx
ALUA = bfc01e70, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000079c, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1948 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000079c, readdata = xxxxxxxx
ALUA = bfc01e70, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1949 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01e74, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000079d, readdata = xxxxxxxx
ALUA = bfc01e74, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1949 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000079d, readdata = xxxxxxxx
ALUA = bfc01e74, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1950 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000079d, readdata = xxxxxxxx
ALUA = bfc01e78, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000079e, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1950 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000079e, readdata = xxxxxxxx
ALUA = bfc01e78, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1951 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01e7c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 0000079f, readdata = xxxxxxxx
ALUA = bfc01e7c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1951 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000079f, readdata = xxxxxxxx
ALUA = bfc01e7c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1952 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 0000079f, readdata = xxxxxxxx
ALUA = bfc01e80, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000007a0, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1952 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000007a0, readdata = xxxxxxxx
ALUA = bfc01e80, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1953 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01e84, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000007a1, readdata = xxxxxxxx
ALUA = bfc01e84, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1953 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000007a1, readdata = xxxxxxxx
ALUA = bfc01e84, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1954 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000007a1, readdata = xxxxxxxx
ALUA = bfc01e88, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000007a2, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1954 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000007a2, readdata = xxxxxxxx
ALUA = bfc01e88, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1955 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01e8c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000007a3, readdata = xxxxxxxx
ALUA = bfc01e8c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1955 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000007a3, readdata = xxxxxxxx
ALUA = bfc01e8c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1956 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000007a3, readdata = xxxxxxxx
ALUA = bfc01e90, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000007a4, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1956 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000007a4, readdata = xxxxxxxx
ALUA = bfc01e90, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1957 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01e94, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000007a5, readdata = xxxxxxxx
ALUA = bfc01e94, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1957 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000007a5, readdata = xxxxxxxx
ALUA = bfc01e94, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1958 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000007a5, readdata = xxxxxxxx
ALUA = bfc01e98, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000007a6, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1958 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000007a6, readdata = xxxxxxxx
ALUA = bfc01e98, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1959 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01e9c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000007a7, readdata = xxxxxxxx
ALUA = bfc01e9c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1959 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000007a7, readdata = xxxxxxxx
ALUA = bfc01e9c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1960 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000007a7, readdata = xxxxxxxx
ALUA = bfc01ea0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000007a8, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1960 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000007a8, readdata = xxxxxxxx
ALUA = bfc01ea0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1961 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01ea4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000007a9, readdata = xxxxxxxx
ALUA = bfc01ea4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1961 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000007a9, readdata = xxxxxxxx
ALUA = bfc01ea4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1962 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000007a9, readdata = xxxxxxxx
ALUA = bfc01ea8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000007aa, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1962 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000007aa, readdata = xxxxxxxx
ALUA = bfc01ea8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1963 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01eac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000007ab, readdata = xxxxxxxx
ALUA = bfc01eac, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1963 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000007ab, readdata = xxxxxxxx
ALUA = bfc01eac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1964 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000007ab, readdata = xxxxxxxx
ALUA = bfc01eb0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000007ac, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1964 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000007ac, readdata = xxxxxxxx
ALUA = bfc01eb0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1965 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01eb4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000007ad, readdata = xxxxxxxx
ALUA = bfc01eb4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1965 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000007ad, readdata = xxxxxxxx
ALUA = bfc01eb4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1966 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000007ad, readdata = xxxxxxxx
ALUA = bfc01eb8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000007ae, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1966 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000007ae, readdata = xxxxxxxx
ALUA = bfc01eb8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1967 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01ebc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000007af, readdata = xxxxxxxx
ALUA = bfc01ebc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1967 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000007af, readdata = xxxxxxxx
ALUA = bfc01ebc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1968 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000007af, readdata = xxxxxxxx
ALUA = bfc01ec0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000007b0, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1968 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000007b0, readdata = xxxxxxxx
ALUA = bfc01ec0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1969 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01ec4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000007b1, readdata = xxxxxxxx
ALUA = bfc01ec4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1969 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000007b1, readdata = xxxxxxxx
ALUA = bfc01ec4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1970 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000007b1, readdata = xxxxxxxx
ALUA = bfc01ec8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000007b2, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1970 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000007b2, readdata = xxxxxxxx
ALUA = bfc01ec8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1971 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01ecc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000007b3, readdata = xxxxxxxx
ALUA = bfc01ecc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1971 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000007b3, readdata = xxxxxxxx
ALUA = bfc01ecc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1972 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000007b3, readdata = xxxxxxxx
ALUA = bfc01ed0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000007b4, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1972 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000007b4, readdata = xxxxxxxx
ALUA = bfc01ed0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1973 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01ed4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000007b5, readdata = xxxxxxxx
ALUA = bfc01ed4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1973 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000007b5, readdata = xxxxxxxx
ALUA = bfc01ed4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1974 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000007b5, readdata = xxxxxxxx
ALUA = bfc01ed8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000007b6, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1974 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000007b6, readdata = xxxxxxxx
ALUA = bfc01ed8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1975 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01edc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000007b7, readdata = xxxxxxxx
ALUA = bfc01edc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1975 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000007b7, readdata = xxxxxxxx
ALUA = bfc01edc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1976 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000007b7, readdata = xxxxxxxx
ALUA = bfc01ee0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000007b8, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1976 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000007b8, readdata = xxxxxxxx
ALUA = bfc01ee0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1977 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01ee4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000007b9, readdata = xxxxxxxx
ALUA = bfc01ee4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1977 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000007b9, readdata = xxxxxxxx
ALUA = bfc01ee4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1978 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000007b9, readdata = xxxxxxxx
ALUA = bfc01ee8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000007ba, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1978 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000007ba, readdata = xxxxxxxx
ALUA = bfc01ee8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1979 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01eec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000007bb, readdata = xxxxxxxx
ALUA = bfc01eec, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1979 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000007bb, readdata = xxxxxxxx
ALUA = bfc01eec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1980 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000007bb, readdata = xxxxxxxx
ALUA = bfc01ef0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000007bc, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1980 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000007bc, readdata = xxxxxxxx
ALUA = bfc01ef0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1981 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01ef4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000007bd, readdata = xxxxxxxx
ALUA = bfc01ef4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1981 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000007bd, readdata = xxxxxxxx
ALUA = bfc01ef4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1982 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000007bd, readdata = xxxxxxxx
ALUA = bfc01ef8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000007be, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1982 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000007be, readdata = xxxxxxxx
ALUA = bfc01ef8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1983 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01efc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000007bf, readdata = xxxxxxxx
ALUA = bfc01efc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1983 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000007bf, readdata = xxxxxxxx
ALUA = bfc01efc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1984 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000007bf, readdata = xxxxxxxx
ALUA = bfc01f00, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000007c0, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1984 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000007c0, readdata = xxxxxxxx
ALUA = bfc01f00, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1985 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01f04, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000007c1, readdata = xxxxxxxx
ALUA = bfc01f04, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1985 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000007c1, readdata = xxxxxxxx
ALUA = bfc01f04, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1986 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000007c1, readdata = xxxxxxxx
ALUA = bfc01f08, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000007c2, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1986 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000007c2, readdata = xxxxxxxx
ALUA = bfc01f08, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1987 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01f0c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000007c3, readdata = xxxxxxxx
ALUA = bfc01f0c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1987 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000007c3, readdata = xxxxxxxx
ALUA = bfc01f0c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1988 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000007c3, readdata = xxxxxxxx
ALUA = bfc01f10, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000007c4, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1988 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000007c4, readdata = xxxxxxxx
ALUA = bfc01f10, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1989 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01f14, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000007c5, readdata = xxxxxxxx
ALUA = bfc01f14, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1989 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000007c5, readdata = xxxxxxxx
ALUA = bfc01f14, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1990 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000007c5, readdata = xxxxxxxx
ALUA = bfc01f18, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000007c6, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1990 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000007c6, readdata = xxxxxxxx
ALUA = bfc01f18, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1991 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01f1c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000007c7, readdata = xxxxxxxx
ALUA = bfc01f1c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1991 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000007c7, readdata = xxxxxxxx
ALUA = bfc01f1c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1992 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000007c7, readdata = xxxxxxxx
ALUA = bfc01f20, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000007c8, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1992 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000007c8, readdata = xxxxxxxx
ALUA = bfc01f20, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1993 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01f24, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000007c9, readdata = xxxxxxxx
ALUA = bfc01f24, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1993 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000007c9, readdata = xxxxxxxx
ALUA = bfc01f24, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1994 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000007c9, readdata = xxxxxxxx
ALUA = bfc01f28, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000007ca, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1994 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000007ca, readdata = xxxxxxxx
ALUA = bfc01f28, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1995 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01f2c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000007cb, readdata = xxxxxxxx
ALUA = bfc01f2c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1995 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000007cb, readdata = xxxxxxxx
ALUA = bfc01f2c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1996 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000007cb, readdata = xxxxxxxx
ALUA = bfc01f30, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000007cc, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1996 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000007cc, readdata = xxxxxxxx
ALUA = bfc01f30, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1997 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01f34, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000007cd, readdata = xxxxxxxx
ALUA = bfc01f34, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1997 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000007cd, readdata = xxxxxxxx
ALUA = bfc01f34, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1998 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000007cd, readdata = xxxxxxxx
ALUA = bfc01f38, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000007ce, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1998 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000007ce, readdata = xxxxxxxx
ALUA = bfc01f38, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1999 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ALUA = bfc01f3c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000007cf, readdata = xxxxxxxx
ALUA = bfc01f3c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
 OUT: Instruction        1999 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 000007cf, readdata = xxxxxxxx
ALUA = bfc01f3c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        2000 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 0, wordaddress = 000007cf, readdata = xxxxxxxx
ALUA = bfc01f40, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 000007d0, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
ERROR: ./CPU_testbench.v:45:           2did not finish within       10000 cycles
       Time: 100000  Scope: CPU_testbench
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000 opcode: xxxxxx
