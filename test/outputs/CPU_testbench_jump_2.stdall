RAM : INIT : Loading RAM contents from ./INITIALISED_FILE.txt
RAM : DATA : Loading DATA contents from ./DATA_MEMORY_FILE.txt
WARNING: ./ram_tiny_CPU.v:34: $readmemh: The behaviour for reg[...] mem[N:0]; $readmemh("...", mem); changed in the 1364-2005 standard. To avoid ambiguity, use mem[0:N] or explicit range parameters $readmemh("...", mem, start, stop);. Defaulting to 1364-2005 behavior.
WARNING: ./ram_tiny_CPU.v:34: $readmemh(./DATA_MEMORY_FILE.txt): Not enough words in the file for the requested range [0:65535].
WARNING: ./ram_tiny_CPU.v:35: $readmemh: The behaviour for reg[...] mem[N:0]; $readmemh("...", mem); changed in the 1364-2005 standard. To avoid ambiguity, use mem[0:N] or explicit range parameters $readmemh("...", mem, start, stop);. Defaulting to 1364-2005 behavior.
WARNING: ./ram_tiny_CPU.v:35: $readmemh(./INITIALISED_FILE.txt): Not enough words in the file for the requested range [0:65535].
VCD info: dumpfile CPU_testbench.vcd opened for output.
ram: read = 0, wordaddress = xxxxxxxx, readdata = xxxxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = z, RegWrite = 0
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ALUA = xxxxxxxx, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 1, wordaddress = xxxxxxxx, readdata = xxxxxxxx
ALUA = bfc00000, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 1, wordaddress = 00000000, readdata = xxxxxxxx
ALUA = bfc00000, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = bfc00000, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------           1 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 1, wordaddress = 00000000, readdata = 8c000000
ALUA = bfc00004, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00004, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000001, readdata = 8c000000
ALUA = bfc00004, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00004, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 0000008c, ALUOut: 00000000, opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00004, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 0000008c, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 0000008c, ALUOut: 00000000 opcode: 000000
 OUT:  WRITE_BACK    - readdata_to_CPU: 0000008c, ALUOut: 00000000 opcode: 000000
ram: read = 1, wordaddress = 00000001, readdata = 8c000000
ALUA = bfc00004, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------           2 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 0000008c, ALUOut: 00000000, opcode: 000000
ram: read = 0, wordaddress = 00000001, readdata = 01000000
ALUA = bfc00008, ALUB = 0000008c ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000002, readdata = 01000000
ALUA = bfc00008, ALUB = 0000008c ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00008, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000001, ALUOut: 00000000 opcode: 000000
ALUA = bfc00008, ALUB = 00000001 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00094, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00094, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000001, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000001, ALUOut: 00000000 opcode: 000000
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000001, ALUOut: 00000000 opcode: 000000
 OUT: Instruction           2 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000002, readdata = 01000000
ALUA = bfc00008, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------           3 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000001, ALUOut: 00000000, opcode: 000000
ram: read = 1, wordaddress = 00000002, readdata = 00000000
ALUA = bfc0000c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc0000c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000003, readdata = 00000000
ALUA = bfc0000c, ALUB = 00000001 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc0000c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc0000c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc0000d, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction           3 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000003, readdata = 00000000
ALUA = bfc0000c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------           4 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ram: read = 0, wordaddress = 00000003, readdata = 1c000000
ALUA = bfc00010, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000004, readdata = 1c000000
ALUA = bfc00010, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00010, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 0000001c, ALUOut: 00000000 opcode: 000000
ALUA = bfc00010, ALUB = 0000001c ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00010, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00010, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 0000001c, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 0000001c, ALUOut: 00000000 opcode: 000000
 OUT:  WRITE_BACK    - readdata_to_CPU: 0000001c, ALUOut: 00000000 opcode: 000000
 OUT: Instruction           4 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000004, readdata = 1c000000
ALUA = bfc00010, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------           5 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 0000001c, ALUOut: 00000000, opcode: 000000
ram: read = 1, wordaddress = 00000004, readdata = 00000000
ALUA = bfc00014, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00014, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000005, readdata = 00000000
ALUA = bfc00014, ALUB = 0000001c ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00014, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00014, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00030, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction           5 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000005, readdata = 00000000
ALUA = bfc00014, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------           6 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ram: read = 0, wordaddress = 00000005, readdata = 01000000
ALUA = bfc00018, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000006, readdata = 01000000
ALUA = bfc00018, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00018, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000001, ALUOut: 00000000 opcode: 000000
ALUA = bfc00018, ALUB = 00000001 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00018, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00018, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000001, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000001, ALUOut: 00000000 opcode: 000000
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000001, ALUOut: 00000000 opcode: 000000
 OUT: Instruction           6 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000006, readdata = 01000000
ALUA = bfc00018, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------           7 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000001, ALUOut: 00000000, opcode: 000000
ram: read = 1, wordaddress = 00000006, readdata = 10000000
ALUA = bfc0001c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc0001c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000007, readdata = 10000000
ALUA = bfc0001c, ALUB = 00000001 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc0001c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = bfc0001c, ALUB = 00000001 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc0001c, RegDst = 00, HI_LO_ALUOut = 1, RegWrite = 0
ALUA = bfc0001c, ALUB = 00000001 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 1, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000010, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 1, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000010, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 1, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000010, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 1, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000010, ALUOut: 00000000 opcode: 000000
 OUT: Instruction           7 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000007, readdata = 10000000
ALUA = bfc0001c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 1, RegWrite = 0
 OUT:  -------------------           8 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000010, ALUOut: 00000000, opcode: 000000
ram: read = 0, wordaddress = 00000007, readdata = 21000000
ALUA = bfc00020, ALUB = 00000010 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 1, RegWrite = 0
ram: read = 0, wordaddress = 00000008, readdata = 21000000
ALUA = bfc00020, ALUB = 00000010 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = bfc00020, ALUB = 00000010 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00020, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000021, ALUOut: 00000000 opcode: 000000
ALUA = bfc00020, ALUB = 00000021 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00030, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00030, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000021, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00030, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000021, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000021, ALUOut: 00000000 opcode: 000000
 OUT: Instruction           8 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000008, readdata = 21000000
ALUA = bfc00020, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------           9 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000021, ALUOut: 00000000, opcode: 000000
ram: read = 1, wordaddress = 00000008, readdata = 24000000
ALUA = bfc00024, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00024, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000009, readdata = 24000000
ALUA = bfc00024, ALUB = 00000021 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00024, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000024, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00024, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00045, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000024, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000024, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000024, ALUOut: 00000000 opcode: 000000
 OUT: Instruction           9 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000009, readdata = 24000000
ALUA = bfc00024, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          10 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000024, ALUOut: 00000000, opcode: 000000
ram: read = 0, wordaddress = 00000009, readdata = 43000000
ALUA = bfc00028, ALUB = 00000024 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 0000000a, readdata = 43000000
ALUA = bfc00028, ALUB = 00000024 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00028, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000043, ALUOut: 00000000 opcode: 000000
ALUA = bfc00028, ALUB = 00000043 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc0004c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc0004c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000043, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc0004c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000043, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000043, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          10 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000000a, readdata = 43000000
ALUA = bfc00028, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          11 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000043, ALUOut: 00000000, opcode: 000000
ram: read = 1, wordaddress = 0000000a, readdata = 00000000
ALUA = bfc0002c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc0002c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 0000000b, readdata = 00000000
ALUA = bfc0002c, ALUB = 00000043 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc0002c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc0002c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc0006f, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          11 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000000b, readdata = 00000000
ALUA = bfc0002c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          12 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ram: read = 0, wordaddress = 0000000b, readdata = 04000000
ALUA = bfc00030, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 0000000c, readdata = 04000000
ALUA = bfc00030, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00030, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000004, ALUOut: 00000000 opcode: 000000
ALUA = bfc00030, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00030, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00030, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000004, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00030, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000004, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000004, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          12 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000000c, readdata = 04000000
ALUA = bfc00030, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          13 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000004, ALUOut: 00000000, opcode: 000000
ram: read = 1, wordaddress = 0000000c, readdata = 00000000
ALUA = bfc00034, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00034, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 0000000d, readdata = 00000000
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00034, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00038, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          13 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000000d, readdata = 00000000
ALUA = bfc00034, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          14 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ram: read = 0, wordaddress = 0000000d, readdata = 20000000
ALUA = bfc00038, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 0000000e, readdata = 20000000
ALUA = bfc00038, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00038, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000020, ALUOut: 00000000 opcode: 000000
ALUA = bfc00038, ALUB = 00000020 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00038, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00038, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000020, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000020, ALUOut: 00000000 opcode: 000000
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000020, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          14 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000000e, readdata = 20000000
ALUA = bfc00038, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          15 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000020, ALUOut: 00000000, opcode: 000000
ram: read = 1, wordaddress = 0000000e, readdata = 00000000
ALUA = bfc0003c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc0003c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 0000000f, readdata = 00000000
ALUA = bfc0003c, ALUB = 00000020 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc0003c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc0003c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc0005c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          15 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 0000000f, readdata = 00000000
ALUA = bfc0003c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          16 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ram: read = 0, wordaddress = 0000000f, readdata = 08000000
ALUA = bfc00040, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000010, readdata = 08000000
ALUA = bfc00040, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00040, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000008, ALUOut: 00000000 opcode: 000000
ALUA = bfc00040, ALUB = 00000008 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00040, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00040, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000008, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000008, ALUOut: 00000000 opcode: 000000
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000008, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          16 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000010, readdata = 08000000
ALUA = bfc00040, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          17 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000008, ALUOut: 00000000, opcode: 000000
ram: read = 1, wordaddress = 00000010, readdata = ac000000
ALUA = bfc00044, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00044, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000011, readdata = ac000000
ALUA = bfc00044, ALUB = 00000008 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00044, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 000000ac, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00044, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc0004c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 000000ac, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 000000ac, ALUOut: 00000000 opcode: 000000
ram: read = 0, wordaddress = 00000000, readdata = ac000000
 OUT:  WRITE_BACK    - readdata_to_CPU: 000000ac, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          17 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000000, readdata = ac000000
ALUA = 00000000, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------          18 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 000000ac, ALUOut: 00000000, opcode: 000000
ram: read = 0, wordaddress = 00000000, readdata = 00000000
ALUA = 00000004, ALUB = 000000ac ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000001, readdata = 00000000
ALUA = 00000004, ALUB = 000000ac ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000004, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = 00000004, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 000000b0, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 000000b0, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 000000b0, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction          18 has result($v0) : 00000000, active = 0
ram: read = 1, wordaddress = 00000001, readdata = 00000000
ALUA = 00000004, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 RESULT: 00000000
./CPU_testbench.v:104: $finish called at 920 (1s)
