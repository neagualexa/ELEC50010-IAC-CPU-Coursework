RAM : INIT : Loading RAM contents from ./INITIALISED_FILE.txt
RAM : DATA : Loading DATA contents from ./DATA_MEMORY_FILE.txt
WARNING: ./ram_tiny_CPU.v:34: $readmemh: The behaviour for reg[...] mem[N:0]; $readmemh("...", mem); changed in the 1364-2005 standard. To avoid ambiguity, use mem[0:N] or explicit range parameters $readmemh("...", mem, start, stop);. Defaulting to 1364-2005 behavior.
WARNING: ./ram_tiny_CPU.v:34: $readmemh(./DATA_MEMORY_FILE.txt): Not enough words in the file for the requested range [0:65535].
WARNING: ./ram_tiny_CPU.v:35: $readmemh: The behaviour for reg[...] mem[N:0]; $readmemh("...", mem); changed in the 1364-2005 standard. To avoid ambiguity, use mem[0:N] or explicit range parameters $readmemh("...", mem, start, stop);. Defaulting to 1364-2005 behavior.
WARNING: ./ram_tiny_CPU.v:35: $readmemh(./INITIALISED_FILE.txt): Not enough words in the file for the requested range [0:65535].
VCD info: dumpfile CPU_testbench.vcd opened for output.
ram: read = 0, wordaddress = xxxxxxxx, readdata = xxxxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = z, RegWrite = 0
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ALUA = xxxxxxxx, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 1, wordaddress = xxxxxxxx, readdata = xxxxxxxx
ALUA = bfc00000, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 1, wordaddress = 00000000, readdata = xxxxxxxx
ALUA = bfc00000, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = bfc00000, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------           1 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 1, wordaddress = 00000000, readdata = c0bf033c
ALUA = bfc00004, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00004, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000001, readdata = c0bf033c
ALUA = bfc00004, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00004, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = bfc00004, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00004, RegDst = 03, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 3c03bfc0, ALUOut: 00000000, opcode: 001111
ALUA = 00000000, ALUB = bfc00000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00004, RegDst = 03, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 3c03bfc0, ALUOut: 00000000 opcode: 001111
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00000, RegDst = 03, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 3c03bfc0, ALUOut: 00000000 opcode: 001111
ALUA = 00000000, ALUB = bfc00000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00000, RegDst = 03, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = 00000000, ALUB = bfc00000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 03, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 3c03bfc0, ALUOut: 00000000 opcode: 001111
ram: read = 1, wordaddress = 00000001, readdata = c0bf033c
ALUA = bfc00004, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00000, RegDst = 03, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------           2 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 3c03bfc0, ALUOut: 00000000, opcode: 001111
ram: read = 0, wordaddress = 00000001, readdata = 14006324
ALUA = bfc00008, ALUB = bfc00000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00000, RegDst = 03, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000002, readdata = 14006324
ALUA = bfc00008, ALUB = bfc00000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00008, RegDst = 03, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = bfc00008, ALUB = ffffbfc0 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00008, RegDst = 03, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 24630014, ALUOut: 00000000 opcode: 001001
ALUA = bfc00008, ALUB = 00000014 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfbfbfc8, RegDst = 03, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = bfc00000, ALUB = 00000014 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfbfbfc8, RegDst = 03, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 24630014, ALUOut: 00000000 opcode: 001001
ALUA = bfc00000, ALUB = bfc00000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfbfbfc8, RegDst = 03, HI_LO_ALUOut = 0, RegWrite = 1
ALUA = bfc00000, ALUB = bfc00000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00014, RegDst = 03, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 24630014, ALUOut: 00000000 opcode: 001001
ALUA = bfc00000, ALUB = bfc00014 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 7f800000, RegDst = 03, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 24630014, ALUOut: 00000000 opcode: 001001
 OUT: Instruction           2 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000002, readdata = 14006324
ALUA = bfc00008, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 7f800000, RegDst = 03, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = bfc00008, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 7f800014, RegDst = 03, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------           3 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 24630014, ALUOut: 00000000, opcode: 001001
ram: read = 1, wordaddress = 00000002, readdata = 09006000
ALUA = bfc0000c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc0000c, RegDst = 03, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000003, readdata = 09006000
ALUA = bfc0000c, ALUB = 00000014 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc0000c, RegDst = 03, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = bfc0000c, ALUB = 00000014 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc0000c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00600009, ALUOut: 00000000 opcode: 000000
ALUA = bfc0000c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc0000c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = bfc0000c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00020, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00600009, ALUOut: 00000000 opcode: 000000
ALUA = bfc00014, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00010, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00600009, ALUOut: 00000000 opcode: 000000
ALUA = bfc00014, ALUB = bfc00010 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00010, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = bfc00014, ALUB = bfc00010 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00014, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00600009, ALUOut: 00000000 opcode: 000000
 OUT: Instruction           3 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000003, readdata = 09006000
ALUA = bfc0000c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 7f800024, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------           4 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00600009, ALUOut: 00000000, opcode: 000000
ram: read = 0, wordaddress = 00000003, readdata = 00000000
ALUA = bfc00010, ALUB = 00000009 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 7f800024, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000004, readdata = 00000000
ALUA = bfc00010, ALUB = 00000009 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00010, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = bfc00010, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00019, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = bfc00010, ALUB = bfc00010 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00019, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = bfc00010, ALUB = bfc00010 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00019, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
ALUA = bfc00010, ALUB = bfc00010 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00010, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
ALUA = bfc00010, ALUB = bfc00010 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 7f800020, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000000 opcode: 000000
 OUT: Instruction           4 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000004, readdata = 00000000
ALUA = bfc00010, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 7f800020, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------           5 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000000, ALUOut: 00000000, opcode: 000000
ram: read = 1, wordaddress = 00000004, readdata = 0300e227
ALUA = bfc00014, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00014, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000005, readdata = 0300e227
ALUA = bfc00014, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00014, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = bfc00014, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00014, RegDst = 02, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 27e20003, ALUOut: 00000000 opcode: 001001
ALUA = 00000000, ALUB = 00000003 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00014, RegDst = 02, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 27e20003, ALUOut: 00000000 opcode: 001001
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000003, RegDst = 02, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 27e20003, ALUOut: 00000000 opcode: 001001
ALUA = 00000000, ALUB = 00000003 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000003, RegDst = 02, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = 00000000, ALUB = 00000003 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 02, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 27e20003, ALUOut: 00000003 opcode: 001001
 OUT: Instruction           5 has result($v0) : 00000003, active = 1
ram: read = 1, wordaddress = 00000005, readdata = 0300e227
ALUA = bfc00014, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000003, RegDst = 02, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------           6 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 27e20003, ALUOut: 00000003, opcode: 001001
ram: read = 0, wordaddress = 00000005, readdata = 08000000
ALUA = bfc00018, ALUB = 00000003 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000003, RegDst = 02, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000006, readdata = 08000000
ALUA = bfc00018, ALUB = 00000003 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00018, RegDst = 02, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = bfc00018, ALUB = 00000003 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00018, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000008, ALUOut: 00000003 opcode: 000000
ALUA = bfc00018, ALUB = 00000008 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc0001b, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = bfc00010, ALUB = bfc00010 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc0001b, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000008, ALUOut: 00000003 opcode: 000000
ALUA = bfc00010, ALUB = bfc00010 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 7f800020, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000008, ALUOut: 00000003 opcode: 000000
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000008, ALUOut: 00000003 opcode: 000000
 OUT: Instruction           6 has result($v0) : 00000003, active = 1
ram: read = 1, wordaddress = 00000006, readdata = 08000000
ALUA = bfc00018, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 7f800020, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------           7 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000008, ALUOut: 00000003, opcode: 000000
ram: read = 1, wordaddress = 00000006, readdata = 0100e227
ALUA = bfc0001c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc0001c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000007, readdata = 0100e227
ALUA = bfc0001c, ALUB = 00000008 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc0001c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = bfc0001c, ALUB = 00000008 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc0001c, RegDst = 02, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 27e20001, ALUOut: 00000003 opcode: 001001
ALUA = 00000000, ALUB = 00000001 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc0001c, RegDst = 02, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = 00000000, ALUB = 00000001 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00024, RegDst = 02, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 27e20001, ALUOut: 00000003 opcode: 001001
ALUA = 00000000, ALUB = 00000003 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000001, RegDst = 02, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 27e20001, ALUOut: 00000003 opcode: 001001
ALUA = 00000000, ALUB = 00000001 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000001, RegDst = 02, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 1fe00008, readdata = 0100e227
ALUA = 00000000, ALUB = 00000001 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000003, RegDst = 02, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 27e20001, ALUOut: 00000001 opcode: 001001
 OUT: Instruction           7 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00008, readdata = 0100e227
ALUA = 7f800020, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000001, RegDst = 02, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------           8 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 27e20001, ALUOut: 00000001, opcode: 001001
ram: read = 0, wordaddress = 1fe00008, readdata = xxxxxxxx
ALUA = 7f800024, ALUB = 00000001 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000001, RegDst = 02, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 1fe00009, readdata = xxxxxxxx
ALUA = 7f800024, ALUB = 00000001 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 7f800024, RegDst = 02, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = 7f800024, ALUB = 00000001 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 7f800024, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ALUA = 7f800024, ALUB = 00000001 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = XxX000XX, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = 7f800024, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = XxX000XX, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = XxX000XX, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction           8 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00009, readdata = xxxxxxxx
ALUA = 7f800024, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------           9 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800028, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0000a, readdata = xxxxxxxx
ALUA = 7f800028, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction           9 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0000a, readdata = xxxxxxxx
ALUA = 7f800028, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          10 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0000a, readdata = xxxxxxxx
ALUA = 7f80002c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0000b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          10 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0000b, readdata = xxxxxxxx
ALUA = 7f80002c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          11 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800030, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0000c, readdata = xxxxxxxx
ALUA = 7f800030, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          11 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0000c, readdata = xxxxxxxx
ALUA = 7f800030, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          12 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0000c, readdata = xxxxxxxx
ALUA = 7f800034, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0000d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          12 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0000d, readdata = xxxxxxxx
ALUA = 7f800034, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          13 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800038, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0000e, readdata = xxxxxxxx
ALUA = 7f800038, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          13 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0000e, readdata = xxxxxxxx
ALUA = 7f800038, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          14 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0000e, readdata = xxxxxxxx
ALUA = 7f80003c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0000f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          14 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0000f, readdata = xxxxxxxx
ALUA = 7f80003c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          15 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800040, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00010, readdata = xxxxxxxx
ALUA = 7f800040, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          15 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00010, readdata = xxxxxxxx
ALUA = 7f800040, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          16 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00010, readdata = xxxxxxxx
ALUA = 7f800044, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00011, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          16 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00011, readdata = xxxxxxxx
ALUA = 7f800044, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          17 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800048, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00012, readdata = xxxxxxxx
ALUA = 7f800048, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          17 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00012, readdata = xxxxxxxx
ALUA = 7f800048, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          18 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00012, readdata = xxxxxxxx
ALUA = 7f80004c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00013, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          18 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00013, readdata = xxxxxxxx
ALUA = 7f80004c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          19 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800050, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00014, readdata = xxxxxxxx
ALUA = 7f800050, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          19 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00014, readdata = xxxxxxxx
ALUA = 7f800050, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          20 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00014, readdata = xxxxxxxx
ALUA = 7f800054, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00015, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          20 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00015, readdata = xxxxxxxx
ALUA = 7f800054, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          21 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800058, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00016, readdata = xxxxxxxx
ALUA = 7f800058, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          21 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00016, readdata = xxxxxxxx
ALUA = 7f800058, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          22 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00016, readdata = xxxxxxxx
ALUA = 7f80005c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00017, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          22 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00017, readdata = xxxxxxxx
ALUA = 7f80005c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          23 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800060, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00018, readdata = xxxxxxxx
ALUA = 7f800060, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          23 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00018, readdata = xxxxxxxx
ALUA = 7f800060, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          24 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00018, readdata = xxxxxxxx
ALUA = 7f800064, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00019, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          24 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00019, readdata = xxxxxxxx
ALUA = 7f800064, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          25 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800068, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0001a, readdata = xxxxxxxx
ALUA = 7f800068, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          25 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0001a, readdata = xxxxxxxx
ALUA = 7f800068, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          26 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0001a, readdata = xxxxxxxx
ALUA = 7f80006c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0001b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          26 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0001b, readdata = xxxxxxxx
ALUA = 7f80006c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          27 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800070, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0001c, readdata = xxxxxxxx
ALUA = 7f800070, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          27 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0001c, readdata = xxxxxxxx
ALUA = 7f800070, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          28 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0001c, readdata = xxxxxxxx
ALUA = 7f800074, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0001d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          28 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0001d, readdata = xxxxxxxx
ALUA = 7f800074, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          29 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800078, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0001e, readdata = xxxxxxxx
ALUA = 7f800078, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          29 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0001e, readdata = xxxxxxxx
ALUA = 7f800078, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          30 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0001e, readdata = xxxxxxxx
ALUA = 7f80007c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0001f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          30 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0001f, readdata = xxxxxxxx
ALUA = 7f80007c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          31 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800080, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00020, readdata = xxxxxxxx
ALUA = 7f800080, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          31 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00020, readdata = xxxxxxxx
ALUA = 7f800080, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          32 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00020, readdata = xxxxxxxx
ALUA = 7f800084, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00021, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          32 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00021, readdata = xxxxxxxx
ALUA = 7f800084, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          33 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800088, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00022, readdata = xxxxxxxx
ALUA = 7f800088, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          33 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00022, readdata = xxxxxxxx
ALUA = 7f800088, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          34 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00022, readdata = xxxxxxxx
ALUA = 7f80008c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00023, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          34 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00023, readdata = xxxxxxxx
ALUA = 7f80008c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          35 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800090, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00024, readdata = xxxxxxxx
ALUA = 7f800090, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          35 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00024, readdata = xxxxxxxx
ALUA = 7f800090, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          36 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00024, readdata = xxxxxxxx
ALUA = 7f800094, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00025, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          36 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00025, readdata = xxxxxxxx
ALUA = 7f800094, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          37 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800098, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00026, readdata = xxxxxxxx
ALUA = 7f800098, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          37 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00026, readdata = xxxxxxxx
ALUA = 7f800098, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          38 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00026, readdata = xxxxxxxx
ALUA = 7f80009c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00027, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          38 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00027, readdata = xxxxxxxx
ALUA = 7f80009c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          39 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8000a0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00028, readdata = xxxxxxxx
ALUA = 7f8000a0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          39 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00028, readdata = xxxxxxxx
ALUA = 7f8000a0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          40 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00028, readdata = xxxxxxxx
ALUA = 7f8000a4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00029, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          40 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00029, readdata = xxxxxxxx
ALUA = 7f8000a4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          41 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8000a8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0002a, readdata = xxxxxxxx
ALUA = 7f8000a8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          41 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0002a, readdata = xxxxxxxx
ALUA = 7f8000a8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          42 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0002a, readdata = xxxxxxxx
ALUA = 7f8000ac, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0002b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          42 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0002b, readdata = xxxxxxxx
ALUA = 7f8000ac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          43 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8000b0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0002c, readdata = xxxxxxxx
ALUA = 7f8000b0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          43 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0002c, readdata = xxxxxxxx
ALUA = 7f8000b0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          44 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0002c, readdata = xxxxxxxx
ALUA = 7f8000b4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0002d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          44 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0002d, readdata = xxxxxxxx
ALUA = 7f8000b4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          45 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8000b8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0002e, readdata = xxxxxxxx
ALUA = 7f8000b8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          45 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0002e, readdata = xxxxxxxx
ALUA = 7f8000b8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          46 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0002e, readdata = xxxxxxxx
ALUA = 7f8000bc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0002f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          46 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0002f, readdata = xxxxxxxx
ALUA = 7f8000bc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          47 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8000c0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00030, readdata = xxxxxxxx
ALUA = 7f8000c0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          47 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00030, readdata = xxxxxxxx
ALUA = 7f8000c0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          48 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00030, readdata = xxxxxxxx
ALUA = 7f8000c4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00031, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          48 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00031, readdata = xxxxxxxx
ALUA = 7f8000c4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          49 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8000c8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00032, readdata = xxxxxxxx
ALUA = 7f8000c8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          49 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00032, readdata = xxxxxxxx
ALUA = 7f8000c8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          50 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00032, readdata = xxxxxxxx
ALUA = 7f8000cc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00033, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          50 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00033, readdata = xxxxxxxx
ALUA = 7f8000cc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          51 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8000d0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00034, readdata = xxxxxxxx
ALUA = 7f8000d0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          51 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00034, readdata = xxxxxxxx
ALUA = 7f8000d0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          52 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00034, readdata = xxxxxxxx
ALUA = 7f8000d4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00035, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          52 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00035, readdata = xxxxxxxx
ALUA = 7f8000d4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          53 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8000d8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00036, readdata = xxxxxxxx
ALUA = 7f8000d8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          53 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00036, readdata = xxxxxxxx
ALUA = 7f8000d8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          54 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00036, readdata = xxxxxxxx
ALUA = 7f8000dc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00037, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          54 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00037, readdata = xxxxxxxx
ALUA = 7f8000dc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          55 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8000e0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00038, readdata = xxxxxxxx
ALUA = 7f8000e0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          55 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00038, readdata = xxxxxxxx
ALUA = 7f8000e0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          56 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00038, readdata = xxxxxxxx
ALUA = 7f8000e4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00039, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          56 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00039, readdata = xxxxxxxx
ALUA = 7f8000e4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          57 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8000e8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0003a, readdata = xxxxxxxx
ALUA = 7f8000e8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          57 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0003a, readdata = xxxxxxxx
ALUA = 7f8000e8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          58 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0003a, readdata = xxxxxxxx
ALUA = 7f8000ec, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0003b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          58 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0003b, readdata = xxxxxxxx
ALUA = 7f8000ec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          59 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8000f0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0003c, readdata = xxxxxxxx
ALUA = 7f8000f0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          59 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0003c, readdata = xxxxxxxx
ALUA = 7f8000f0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          60 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0003c, readdata = xxxxxxxx
ALUA = 7f8000f4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0003d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          60 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0003d, readdata = xxxxxxxx
ALUA = 7f8000f4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          61 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8000f8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0003e, readdata = xxxxxxxx
ALUA = 7f8000f8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          61 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0003e, readdata = xxxxxxxx
ALUA = 7f8000f8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          62 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0003e, readdata = xxxxxxxx
ALUA = 7f8000fc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0003f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          62 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0003f, readdata = xxxxxxxx
ALUA = 7f8000fc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          63 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800100, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00040, readdata = xxxxxxxx
ALUA = 7f800100, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          63 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00040, readdata = xxxxxxxx
ALUA = 7f800100, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          64 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00040, readdata = xxxxxxxx
ALUA = 7f800104, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00041, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          64 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00041, readdata = xxxxxxxx
ALUA = 7f800104, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          65 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800108, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00042, readdata = xxxxxxxx
ALUA = 7f800108, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          65 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00042, readdata = xxxxxxxx
ALUA = 7f800108, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          66 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00042, readdata = xxxxxxxx
ALUA = 7f80010c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00043, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          66 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00043, readdata = xxxxxxxx
ALUA = 7f80010c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          67 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800110, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00044, readdata = xxxxxxxx
ALUA = 7f800110, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          67 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00044, readdata = xxxxxxxx
ALUA = 7f800110, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          68 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00044, readdata = xxxxxxxx
ALUA = 7f800114, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00045, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          68 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00045, readdata = xxxxxxxx
ALUA = 7f800114, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          69 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800118, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00046, readdata = xxxxxxxx
ALUA = 7f800118, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          69 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00046, readdata = xxxxxxxx
ALUA = 7f800118, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          70 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00046, readdata = xxxxxxxx
ALUA = 7f80011c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00047, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          70 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00047, readdata = xxxxxxxx
ALUA = 7f80011c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          71 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800120, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00048, readdata = xxxxxxxx
ALUA = 7f800120, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          71 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00048, readdata = xxxxxxxx
ALUA = 7f800120, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          72 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00048, readdata = xxxxxxxx
ALUA = 7f800124, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00049, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          72 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00049, readdata = xxxxxxxx
ALUA = 7f800124, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          73 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800128, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0004a, readdata = xxxxxxxx
ALUA = 7f800128, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          73 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0004a, readdata = xxxxxxxx
ALUA = 7f800128, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          74 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0004a, readdata = xxxxxxxx
ALUA = 7f80012c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0004b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          74 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0004b, readdata = xxxxxxxx
ALUA = 7f80012c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          75 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800130, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0004c, readdata = xxxxxxxx
ALUA = 7f800130, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          75 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0004c, readdata = xxxxxxxx
ALUA = 7f800130, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          76 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0004c, readdata = xxxxxxxx
ALUA = 7f800134, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0004d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          76 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0004d, readdata = xxxxxxxx
ALUA = 7f800134, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          77 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800138, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0004e, readdata = xxxxxxxx
ALUA = 7f800138, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          77 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0004e, readdata = xxxxxxxx
ALUA = 7f800138, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          78 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0004e, readdata = xxxxxxxx
ALUA = 7f80013c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0004f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          78 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0004f, readdata = xxxxxxxx
ALUA = 7f80013c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          79 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800140, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00050, readdata = xxxxxxxx
ALUA = 7f800140, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          79 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00050, readdata = xxxxxxxx
ALUA = 7f800140, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          80 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00050, readdata = xxxxxxxx
ALUA = 7f800144, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00051, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          80 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00051, readdata = xxxxxxxx
ALUA = 7f800144, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          81 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800148, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00052, readdata = xxxxxxxx
ALUA = 7f800148, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          81 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00052, readdata = xxxxxxxx
ALUA = 7f800148, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          82 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00052, readdata = xxxxxxxx
ALUA = 7f80014c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00053, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          82 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00053, readdata = xxxxxxxx
ALUA = 7f80014c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          83 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800150, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00054, readdata = xxxxxxxx
ALUA = 7f800150, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          83 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00054, readdata = xxxxxxxx
ALUA = 7f800150, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          84 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00054, readdata = xxxxxxxx
ALUA = 7f800154, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00055, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          84 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00055, readdata = xxxxxxxx
ALUA = 7f800154, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          85 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800158, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00056, readdata = xxxxxxxx
ALUA = 7f800158, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          85 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00056, readdata = xxxxxxxx
ALUA = 7f800158, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          86 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00056, readdata = xxxxxxxx
ALUA = 7f80015c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00057, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          86 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00057, readdata = xxxxxxxx
ALUA = 7f80015c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          87 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800160, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00058, readdata = xxxxxxxx
ALUA = 7f800160, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          87 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00058, readdata = xxxxxxxx
ALUA = 7f800160, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          88 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00058, readdata = xxxxxxxx
ALUA = 7f800164, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00059, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          88 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00059, readdata = xxxxxxxx
ALUA = 7f800164, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          89 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800168, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0005a, readdata = xxxxxxxx
ALUA = 7f800168, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          89 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0005a, readdata = xxxxxxxx
ALUA = 7f800168, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          90 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0005a, readdata = xxxxxxxx
ALUA = 7f80016c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0005b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          90 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0005b, readdata = xxxxxxxx
ALUA = 7f80016c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          91 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800170, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0005c, readdata = xxxxxxxx
ALUA = 7f800170, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          91 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0005c, readdata = xxxxxxxx
ALUA = 7f800170, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          92 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0005c, readdata = xxxxxxxx
ALUA = 7f800174, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0005d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          92 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0005d, readdata = xxxxxxxx
ALUA = 7f800174, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          93 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800178, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0005e, readdata = xxxxxxxx
ALUA = 7f800178, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          93 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0005e, readdata = xxxxxxxx
ALUA = 7f800178, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          94 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0005e, readdata = xxxxxxxx
ALUA = 7f80017c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0005f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          94 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0005f, readdata = xxxxxxxx
ALUA = 7f80017c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          95 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800180, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00060, readdata = xxxxxxxx
ALUA = 7f800180, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          95 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00060, readdata = xxxxxxxx
ALUA = 7f800180, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          96 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00060, readdata = xxxxxxxx
ALUA = 7f800184, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00061, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          96 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00061, readdata = xxxxxxxx
ALUA = 7f800184, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          97 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800188, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00062, readdata = xxxxxxxx
ALUA = 7f800188, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          97 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00062, readdata = xxxxxxxx
ALUA = 7f800188, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          98 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00062, readdata = xxxxxxxx
ALUA = 7f80018c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00063, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          98 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00063, readdata = xxxxxxxx
ALUA = 7f80018c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------          99 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800190, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00064, readdata = xxxxxxxx
ALUA = 7f800190, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction          99 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00064, readdata = xxxxxxxx
ALUA = 7f800190, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         100 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00064, readdata = xxxxxxxx
ALUA = 7f800194, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00065, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         100 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00065, readdata = xxxxxxxx
ALUA = 7f800194, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         101 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800198, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00066, readdata = xxxxxxxx
ALUA = 7f800198, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         101 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00066, readdata = xxxxxxxx
ALUA = 7f800198, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         102 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00066, readdata = xxxxxxxx
ALUA = 7f80019c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00067, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         102 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00067, readdata = xxxxxxxx
ALUA = 7f80019c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         103 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8001a0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00068, readdata = xxxxxxxx
ALUA = 7f8001a0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         103 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00068, readdata = xxxxxxxx
ALUA = 7f8001a0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         104 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00068, readdata = xxxxxxxx
ALUA = 7f8001a4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00069, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         104 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00069, readdata = xxxxxxxx
ALUA = 7f8001a4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         105 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8001a8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0006a, readdata = xxxxxxxx
ALUA = 7f8001a8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         105 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0006a, readdata = xxxxxxxx
ALUA = 7f8001a8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         106 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0006a, readdata = xxxxxxxx
ALUA = 7f8001ac, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0006b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         106 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0006b, readdata = xxxxxxxx
ALUA = 7f8001ac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         107 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8001b0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0006c, readdata = xxxxxxxx
ALUA = 7f8001b0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         107 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0006c, readdata = xxxxxxxx
ALUA = 7f8001b0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         108 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0006c, readdata = xxxxxxxx
ALUA = 7f8001b4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0006d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         108 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0006d, readdata = xxxxxxxx
ALUA = 7f8001b4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         109 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8001b8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0006e, readdata = xxxxxxxx
ALUA = 7f8001b8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         109 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0006e, readdata = xxxxxxxx
ALUA = 7f8001b8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         110 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0006e, readdata = xxxxxxxx
ALUA = 7f8001bc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0006f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         110 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0006f, readdata = xxxxxxxx
ALUA = 7f8001bc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         111 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8001c0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00070, readdata = xxxxxxxx
ALUA = 7f8001c0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         111 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00070, readdata = xxxxxxxx
ALUA = 7f8001c0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         112 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00070, readdata = xxxxxxxx
ALUA = 7f8001c4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00071, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         112 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00071, readdata = xxxxxxxx
ALUA = 7f8001c4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         113 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8001c8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00072, readdata = xxxxxxxx
ALUA = 7f8001c8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         113 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00072, readdata = xxxxxxxx
ALUA = 7f8001c8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         114 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00072, readdata = xxxxxxxx
ALUA = 7f8001cc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00073, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         114 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00073, readdata = xxxxxxxx
ALUA = 7f8001cc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         115 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8001d0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00074, readdata = xxxxxxxx
ALUA = 7f8001d0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         115 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00074, readdata = xxxxxxxx
ALUA = 7f8001d0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         116 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00074, readdata = xxxxxxxx
ALUA = 7f8001d4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00075, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         116 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00075, readdata = xxxxxxxx
ALUA = 7f8001d4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         117 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8001d8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00076, readdata = xxxxxxxx
ALUA = 7f8001d8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         117 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00076, readdata = xxxxxxxx
ALUA = 7f8001d8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         118 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00076, readdata = xxxxxxxx
ALUA = 7f8001dc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00077, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         118 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00077, readdata = xxxxxxxx
ALUA = 7f8001dc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         119 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8001e0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00078, readdata = xxxxxxxx
ALUA = 7f8001e0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         119 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00078, readdata = xxxxxxxx
ALUA = 7f8001e0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         120 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00078, readdata = xxxxxxxx
ALUA = 7f8001e4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00079, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         120 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00079, readdata = xxxxxxxx
ALUA = 7f8001e4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         121 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8001e8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0007a, readdata = xxxxxxxx
ALUA = 7f8001e8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         121 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0007a, readdata = xxxxxxxx
ALUA = 7f8001e8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         122 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0007a, readdata = xxxxxxxx
ALUA = 7f8001ec, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0007b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         122 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0007b, readdata = xxxxxxxx
ALUA = 7f8001ec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         123 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8001f0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0007c, readdata = xxxxxxxx
ALUA = 7f8001f0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         123 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0007c, readdata = xxxxxxxx
ALUA = 7f8001f0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         124 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0007c, readdata = xxxxxxxx
ALUA = 7f8001f4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0007d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         124 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0007d, readdata = xxxxxxxx
ALUA = 7f8001f4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         125 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8001f8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0007e, readdata = xxxxxxxx
ALUA = 7f8001f8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         125 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0007e, readdata = xxxxxxxx
ALUA = 7f8001f8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         126 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0007e, readdata = xxxxxxxx
ALUA = 7f8001fc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0007f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         126 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0007f, readdata = xxxxxxxx
ALUA = 7f8001fc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         127 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800200, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00080, readdata = xxxxxxxx
ALUA = 7f800200, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         127 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00080, readdata = xxxxxxxx
ALUA = 7f800200, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         128 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00080, readdata = xxxxxxxx
ALUA = 7f800204, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00081, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         128 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00081, readdata = xxxxxxxx
ALUA = 7f800204, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         129 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800208, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00082, readdata = xxxxxxxx
ALUA = 7f800208, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         129 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00082, readdata = xxxxxxxx
ALUA = 7f800208, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         130 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00082, readdata = xxxxxxxx
ALUA = 7f80020c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00083, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         130 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00083, readdata = xxxxxxxx
ALUA = 7f80020c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         131 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800210, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00084, readdata = xxxxxxxx
ALUA = 7f800210, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         131 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00084, readdata = xxxxxxxx
ALUA = 7f800210, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         132 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00084, readdata = xxxxxxxx
ALUA = 7f800214, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00085, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         132 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00085, readdata = xxxxxxxx
ALUA = 7f800214, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         133 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800218, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00086, readdata = xxxxxxxx
ALUA = 7f800218, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         133 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00086, readdata = xxxxxxxx
ALUA = 7f800218, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         134 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00086, readdata = xxxxxxxx
ALUA = 7f80021c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00087, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         134 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00087, readdata = xxxxxxxx
ALUA = 7f80021c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         135 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800220, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00088, readdata = xxxxxxxx
ALUA = 7f800220, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         135 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00088, readdata = xxxxxxxx
ALUA = 7f800220, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         136 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00088, readdata = xxxxxxxx
ALUA = 7f800224, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00089, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         136 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00089, readdata = xxxxxxxx
ALUA = 7f800224, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         137 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800228, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0008a, readdata = xxxxxxxx
ALUA = 7f800228, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         137 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0008a, readdata = xxxxxxxx
ALUA = 7f800228, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         138 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0008a, readdata = xxxxxxxx
ALUA = 7f80022c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0008b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         138 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0008b, readdata = xxxxxxxx
ALUA = 7f80022c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         139 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800230, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0008c, readdata = xxxxxxxx
ALUA = 7f800230, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         139 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0008c, readdata = xxxxxxxx
ALUA = 7f800230, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         140 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0008c, readdata = xxxxxxxx
ALUA = 7f800234, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0008d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         140 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0008d, readdata = xxxxxxxx
ALUA = 7f800234, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         141 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800238, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0008e, readdata = xxxxxxxx
ALUA = 7f800238, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         141 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0008e, readdata = xxxxxxxx
ALUA = 7f800238, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         142 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0008e, readdata = xxxxxxxx
ALUA = 7f80023c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0008f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         142 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0008f, readdata = xxxxxxxx
ALUA = 7f80023c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         143 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800240, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00090, readdata = xxxxxxxx
ALUA = 7f800240, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         143 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00090, readdata = xxxxxxxx
ALUA = 7f800240, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         144 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00090, readdata = xxxxxxxx
ALUA = 7f800244, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00091, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         144 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00091, readdata = xxxxxxxx
ALUA = 7f800244, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         145 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800248, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00092, readdata = xxxxxxxx
ALUA = 7f800248, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         145 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00092, readdata = xxxxxxxx
ALUA = 7f800248, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         146 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00092, readdata = xxxxxxxx
ALUA = 7f80024c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00093, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         146 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00093, readdata = xxxxxxxx
ALUA = 7f80024c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         147 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800250, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00094, readdata = xxxxxxxx
ALUA = 7f800250, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         147 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00094, readdata = xxxxxxxx
ALUA = 7f800250, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         148 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00094, readdata = xxxxxxxx
ALUA = 7f800254, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00095, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         148 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00095, readdata = xxxxxxxx
ALUA = 7f800254, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         149 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800258, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00096, readdata = xxxxxxxx
ALUA = 7f800258, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         149 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00096, readdata = xxxxxxxx
ALUA = 7f800258, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         150 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00096, readdata = xxxxxxxx
ALUA = 7f80025c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00097, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         150 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00097, readdata = xxxxxxxx
ALUA = 7f80025c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         151 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800260, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00098, readdata = xxxxxxxx
ALUA = 7f800260, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         151 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00098, readdata = xxxxxxxx
ALUA = 7f800260, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         152 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00098, readdata = xxxxxxxx
ALUA = 7f800264, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00099, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         152 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00099, readdata = xxxxxxxx
ALUA = 7f800264, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         153 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800268, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0009a, readdata = xxxxxxxx
ALUA = 7f800268, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         153 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0009a, readdata = xxxxxxxx
ALUA = 7f800268, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         154 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0009a, readdata = xxxxxxxx
ALUA = 7f80026c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0009b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         154 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0009b, readdata = xxxxxxxx
ALUA = 7f80026c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         155 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800270, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0009c, readdata = xxxxxxxx
ALUA = 7f800270, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         155 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0009c, readdata = xxxxxxxx
ALUA = 7f800270, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         156 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0009c, readdata = xxxxxxxx
ALUA = 7f800274, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0009d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         156 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0009d, readdata = xxxxxxxx
ALUA = 7f800274, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         157 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800278, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0009e, readdata = xxxxxxxx
ALUA = 7f800278, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         157 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0009e, readdata = xxxxxxxx
ALUA = 7f800278, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         158 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0009e, readdata = xxxxxxxx
ALUA = 7f80027c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0009f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         158 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0009f, readdata = xxxxxxxx
ALUA = 7f80027c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         159 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800280, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000a0, readdata = xxxxxxxx
ALUA = 7f800280, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         159 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000a0, readdata = xxxxxxxx
ALUA = 7f800280, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         160 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe000a0, readdata = xxxxxxxx
ALUA = 7f800284, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000a1, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         160 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000a1, readdata = xxxxxxxx
ALUA = 7f800284, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         161 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800288, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000a2, readdata = xxxxxxxx
ALUA = 7f800288, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         161 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000a2, readdata = xxxxxxxx
ALUA = 7f800288, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         162 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe000a2, readdata = xxxxxxxx
ALUA = 7f80028c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000a3, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         162 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000a3, readdata = xxxxxxxx
ALUA = 7f80028c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         163 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800290, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000a4, readdata = xxxxxxxx
ALUA = 7f800290, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         163 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000a4, readdata = xxxxxxxx
ALUA = 7f800290, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         164 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe000a4, readdata = xxxxxxxx
ALUA = 7f800294, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000a5, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         164 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000a5, readdata = xxxxxxxx
ALUA = 7f800294, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         165 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800298, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000a6, readdata = xxxxxxxx
ALUA = 7f800298, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         165 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000a6, readdata = xxxxxxxx
ALUA = 7f800298, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         166 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe000a6, readdata = xxxxxxxx
ALUA = 7f80029c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000a7, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         166 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000a7, readdata = xxxxxxxx
ALUA = 7f80029c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         167 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8002a0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000a8, readdata = xxxxxxxx
ALUA = 7f8002a0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         167 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000a8, readdata = xxxxxxxx
ALUA = 7f8002a0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         168 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe000a8, readdata = xxxxxxxx
ALUA = 7f8002a4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000a9, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         168 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000a9, readdata = xxxxxxxx
ALUA = 7f8002a4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         169 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8002a8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000aa, readdata = xxxxxxxx
ALUA = 7f8002a8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         169 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000aa, readdata = xxxxxxxx
ALUA = 7f8002a8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         170 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe000aa, readdata = xxxxxxxx
ALUA = 7f8002ac, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000ab, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         170 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000ab, readdata = xxxxxxxx
ALUA = 7f8002ac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         171 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8002b0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000ac, readdata = xxxxxxxx
ALUA = 7f8002b0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         171 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000ac, readdata = xxxxxxxx
ALUA = 7f8002b0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         172 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe000ac, readdata = xxxxxxxx
ALUA = 7f8002b4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000ad, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         172 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000ad, readdata = xxxxxxxx
ALUA = 7f8002b4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         173 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8002b8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000ae, readdata = xxxxxxxx
ALUA = 7f8002b8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         173 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000ae, readdata = xxxxxxxx
ALUA = 7f8002b8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         174 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe000ae, readdata = xxxxxxxx
ALUA = 7f8002bc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000af, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         174 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000af, readdata = xxxxxxxx
ALUA = 7f8002bc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         175 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8002c0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000b0, readdata = xxxxxxxx
ALUA = 7f8002c0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         175 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000b0, readdata = xxxxxxxx
ALUA = 7f8002c0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         176 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe000b0, readdata = xxxxxxxx
ALUA = 7f8002c4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000b1, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         176 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000b1, readdata = xxxxxxxx
ALUA = 7f8002c4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         177 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8002c8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000b2, readdata = xxxxxxxx
ALUA = 7f8002c8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         177 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000b2, readdata = xxxxxxxx
ALUA = 7f8002c8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         178 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe000b2, readdata = xxxxxxxx
ALUA = 7f8002cc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000b3, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         178 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000b3, readdata = xxxxxxxx
ALUA = 7f8002cc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         179 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8002d0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000b4, readdata = xxxxxxxx
ALUA = 7f8002d0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         179 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000b4, readdata = xxxxxxxx
ALUA = 7f8002d0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         180 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe000b4, readdata = xxxxxxxx
ALUA = 7f8002d4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000b5, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         180 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000b5, readdata = xxxxxxxx
ALUA = 7f8002d4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         181 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8002d8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000b6, readdata = xxxxxxxx
ALUA = 7f8002d8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         181 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000b6, readdata = xxxxxxxx
ALUA = 7f8002d8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         182 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe000b6, readdata = xxxxxxxx
ALUA = 7f8002dc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000b7, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         182 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000b7, readdata = xxxxxxxx
ALUA = 7f8002dc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         183 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8002e0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000b8, readdata = xxxxxxxx
ALUA = 7f8002e0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         183 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000b8, readdata = xxxxxxxx
ALUA = 7f8002e0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         184 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe000b8, readdata = xxxxxxxx
ALUA = 7f8002e4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000b9, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         184 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000b9, readdata = xxxxxxxx
ALUA = 7f8002e4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         185 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8002e8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000ba, readdata = xxxxxxxx
ALUA = 7f8002e8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         185 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000ba, readdata = xxxxxxxx
ALUA = 7f8002e8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         186 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe000ba, readdata = xxxxxxxx
ALUA = 7f8002ec, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000bb, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         186 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000bb, readdata = xxxxxxxx
ALUA = 7f8002ec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         187 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8002f0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000bc, readdata = xxxxxxxx
ALUA = 7f8002f0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         187 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000bc, readdata = xxxxxxxx
ALUA = 7f8002f0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         188 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe000bc, readdata = xxxxxxxx
ALUA = 7f8002f4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000bd, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         188 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000bd, readdata = xxxxxxxx
ALUA = 7f8002f4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         189 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8002f8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000be, readdata = xxxxxxxx
ALUA = 7f8002f8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         189 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000be, readdata = xxxxxxxx
ALUA = 7f8002f8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         190 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe000be, readdata = xxxxxxxx
ALUA = 7f8002fc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000bf, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         190 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000bf, readdata = xxxxxxxx
ALUA = 7f8002fc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         191 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800300, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000c0, readdata = xxxxxxxx
ALUA = 7f800300, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         191 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000c0, readdata = xxxxxxxx
ALUA = 7f800300, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         192 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe000c0, readdata = xxxxxxxx
ALUA = 7f800304, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000c1, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         192 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000c1, readdata = xxxxxxxx
ALUA = 7f800304, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         193 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800308, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000c2, readdata = xxxxxxxx
ALUA = 7f800308, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         193 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000c2, readdata = xxxxxxxx
ALUA = 7f800308, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         194 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe000c2, readdata = xxxxxxxx
ALUA = 7f80030c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000c3, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         194 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000c3, readdata = xxxxxxxx
ALUA = 7f80030c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         195 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800310, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000c4, readdata = xxxxxxxx
ALUA = 7f800310, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         195 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000c4, readdata = xxxxxxxx
ALUA = 7f800310, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         196 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe000c4, readdata = xxxxxxxx
ALUA = 7f800314, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000c5, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         196 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000c5, readdata = xxxxxxxx
ALUA = 7f800314, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         197 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800318, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000c6, readdata = xxxxxxxx
ALUA = 7f800318, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         197 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000c6, readdata = xxxxxxxx
ALUA = 7f800318, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         198 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe000c6, readdata = xxxxxxxx
ALUA = 7f80031c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000c7, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         198 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000c7, readdata = xxxxxxxx
ALUA = 7f80031c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         199 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800320, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000c8, readdata = xxxxxxxx
ALUA = 7f800320, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         199 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000c8, readdata = xxxxxxxx
ALUA = 7f800320, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         200 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe000c8, readdata = xxxxxxxx
ALUA = 7f800324, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000c9, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         200 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000c9, readdata = xxxxxxxx
ALUA = 7f800324, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         201 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800328, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000ca, readdata = xxxxxxxx
ALUA = 7f800328, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         201 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000ca, readdata = xxxxxxxx
ALUA = 7f800328, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         202 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe000ca, readdata = xxxxxxxx
ALUA = 7f80032c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000cb, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         202 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000cb, readdata = xxxxxxxx
ALUA = 7f80032c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         203 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800330, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000cc, readdata = xxxxxxxx
ALUA = 7f800330, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         203 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000cc, readdata = xxxxxxxx
ALUA = 7f800330, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         204 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe000cc, readdata = xxxxxxxx
ALUA = 7f800334, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000cd, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         204 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000cd, readdata = xxxxxxxx
ALUA = 7f800334, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         205 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800338, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000ce, readdata = xxxxxxxx
ALUA = 7f800338, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         205 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000ce, readdata = xxxxxxxx
ALUA = 7f800338, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         206 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe000ce, readdata = xxxxxxxx
ALUA = 7f80033c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000cf, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         206 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000cf, readdata = xxxxxxxx
ALUA = 7f80033c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         207 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800340, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000d0, readdata = xxxxxxxx
ALUA = 7f800340, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         207 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000d0, readdata = xxxxxxxx
ALUA = 7f800340, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         208 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe000d0, readdata = xxxxxxxx
ALUA = 7f800344, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000d1, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         208 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000d1, readdata = xxxxxxxx
ALUA = 7f800344, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         209 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800348, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000d2, readdata = xxxxxxxx
ALUA = 7f800348, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         209 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000d2, readdata = xxxxxxxx
ALUA = 7f800348, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         210 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe000d2, readdata = xxxxxxxx
ALUA = 7f80034c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000d3, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         210 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000d3, readdata = xxxxxxxx
ALUA = 7f80034c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         211 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800350, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000d4, readdata = xxxxxxxx
ALUA = 7f800350, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         211 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000d4, readdata = xxxxxxxx
ALUA = 7f800350, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         212 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe000d4, readdata = xxxxxxxx
ALUA = 7f800354, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000d5, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         212 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000d5, readdata = xxxxxxxx
ALUA = 7f800354, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         213 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800358, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000d6, readdata = xxxxxxxx
ALUA = 7f800358, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         213 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000d6, readdata = xxxxxxxx
ALUA = 7f800358, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         214 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe000d6, readdata = xxxxxxxx
ALUA = 7f80035c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000d7, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         214 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000d7, readdata = xxxxxxxx
ALUA = 7f80035c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         215 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800360, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000d8, readdata = xxxxxxxx
ALUA = 7f800360, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         215 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000d8, readdata = xxxxxxxx
ALUA = 7f800360, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         216 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe000d8, readdata = xxxxxxxx
ALUA = 7f800364, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000d9, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         216 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000d9, readdata = xxxxxxxx
ALUA = 7f800364, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         217 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800368, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000da, readdata = xxxxxxxx
ALUA = 7f800368, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         217 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000da, readdata = xxxxxxxx
ALUA = 7f800368, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         218 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe000da, readdata = xxxxxxxx
ALUA = 7f80036c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000db, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         218 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000db, readdata = xxxxxxxx
ALUA = 7f80036c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         219 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800370, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000dc, readdata = xxxxxxxx
ALUA = 7f800370, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         219 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000dc, readdata = xxxxxxxx
ALUA = 7f800370, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         220 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe000dc, readdata = xxxxxxxx
ALUA = 7f800374, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000dd, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         220 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000dd, readdata = xxxxxxxx
ALUA = 7f800374, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         221 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800378, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000de, readdata = xxxxxxxx
ALUA = 7f800378, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         221 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000de, readdata = xxxxxxxx
ALUA = 7f800378, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         222 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe000de, readdata = xxxxxxxx
ALUA = 7f80037c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000df, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         222 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000df, readdata = xxxxxxxx
ALUA = 7f80037c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         223 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800380, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000e0, readdata = xxxxxxxx
ALUA = 7f800380, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         223 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000e0, readdata = xxxxxxxx
ALUA = 7f800380, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         224 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe000e0, readdata = xxxxxxxx
ALUA = 7f800384, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000e1, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         224 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000e1, readdata = xxxxxxxx
ALUA = 7f800384, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         225 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800388, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000e2, readdata = xxxxxxxx
ALUA = 7f800388, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         225 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000e2, readdata = xxxxxxxx
ALUA = 7f800388, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         226 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe000e2, readdata = xxxxxxxx
ALUA = 7f80038c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000e3, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         226 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000e3, readdata = xxxxxxxx
ALUA = 7f80038c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         227 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800390, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000e4, readdata = xxxxxxxx
ALUA = 7f800390, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         227 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000e4, readdata = xxxxxxxx
ALUA = 7f800390, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         228 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe000e4, readdata = xxxxxxxx
ALUA = 7f800394, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000e5, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         228 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000e5, readdata = xxxxxxxx
ALUA = 7f800394, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         229 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800398, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000e6, readdata = xxxxxxxx
ALUA = 7f800398, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         229 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000e6, readdata = xxxxxxxx
ALUA = 7f800398, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         230 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe000e6, readdata = xxxxxxxx
ALUA = 7f80039c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000e7, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         230 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000e7, readdata = xxxxxxxx
ALUA = 7f80039c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         231 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8003a0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000e8, readdata = xxxxxxxx
ALUA = 7f8003a0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         231 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000e8, readdata = xxxxxxxx
ALUA = 7f8003a0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         232 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe000e8, readdata = xxxxxxxx
ALUA = 7f8003a4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000e9, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         232 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000e9, readdata = xxxxxxxx
ALUA = 7f8003a4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         233 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8003a8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000ea, readdata = xxxxxxxx
ALUA = 7f8003a8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         233 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000ea, readdata = xxxxxxxx
ALUA = 7f8003a8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         234 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe000ea, readdata = xxxxxxxx
ALUA = 7f8003ac, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000eb, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         234 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000eb, readdata = xxxxxxxx
ALUA = 7f8003ac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         235 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8003b0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000ec, readdata = xxxxxxxx
ALUA = 7f8003b0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         235 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000ec, readdata = xxxxxxxx
ALUA = 7f8003b0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         236 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe000ec, readdata = xxxxxxxx
ALUA = 7f8003b4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000ed, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         236 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000ed, readdata = xxxxxxxx
ALUA = 7f8003b4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         237 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8003b8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000ee, readdata = xxxxxxxx
ALUA = 7f8003b8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         237 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000ee, readdata = xxxxxxxx
ALUA = 7f8003b8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         238 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe000ee, readdata = xxxxxxxx
ALUA = 7f8003bc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000ef, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         238 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000ef, readdata = xxxxxxxx
ALUA = 7f8003bc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         239 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8003c0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000f0, readdata = xxxxxxxx
ALUA = 7f8003c0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         239 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000f0, readdata = xxxxxxxx
ALUA = 7f8003c0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         240 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe000f0, readdata = xxxxxxxx
ALUA = 7f8003c4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000f1, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         240 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000f1, readdata = xxxxxxxx
ALUA = 7f8003c4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         241 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8003c8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000f2, readdata = xxxxxxxx
ALUA = 7f8003c8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         241 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000f2, readdata = xxxxxxxx
ALUA = 7f8003c8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         242 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe000f2, readdata = xxxxxxxx
ALUA = 7f8003cc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000f3, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         242 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000f3, readdata = xxxxxxxx
ALUA = 7f8003cc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         243 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8003d0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000f4, readdata = xxxxxxxx
ALUA = 7f8003d0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         243 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000f4, readdata = xxxxxxxx
ALUA = 7f8003d0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         244 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe000f4, readdata = xxxxxxxx
ALUA = 7f8003d4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000f5, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         244 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000f5, readdata = xxxxxxxx
ALUA = 7f8003d4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         245 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8003d8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000f6, readdata = xxxxxxxx
ALUA = 7f8003d8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         245 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000f6, readdata = xxxxxxxx
ALUA = 7f8003d8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         246 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe000f6, readdata = xxxxxxxx
ALUA = 7f8003dc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000f7, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         246 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000f7, readdata = xxxxxxxx
ALUA = 7f8003dc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         247 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8003e0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000f8, readdata = xxxxxxxx
ALUA = 7f8003e0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         247 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000f8, readdata = xxxxxxxx
ALUA = 7f8003e0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         248 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe000f8, readdata = xxxxxxxx
ALUA = 7f8003e4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000f9, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         248 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000f9, readdata = xxxxxxxx
ALUA = 7f8003e4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         249 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8003e8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000fa, readdata = xxxxxxxx
ALUA = 7f8003e8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         249 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000fa, readdata = xxxxxxxx
ALUA = 7f8003e8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         250 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe000fa, readdata = xxxxxxxx
ALUA = 7f8003ec, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000fb, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         250 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000fb, readdata = xxxxxxxx
ALUA = 7f8003ec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         251 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8003f0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000fc, readdata = xxxxxxxx
ALUA = 7f8003f0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         251 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000fc, readdata = xxxxxxxx
ALUA = 7f8003f0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         252 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe000fc, readdata = xxxxxxxx
ALUA = 7f8003f4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000fd, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         252 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000fd, readdata = xxxxxxxx
ALUA = 7f8003f4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         253 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8003f8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000fe, readdata = xxxxxxxx
ALUA = 7f8003f8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         253 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000fe, readdata = xxxxxxxx
ALUA = 7f8003f8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         254 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe000fe, readdata = xxxxxxxx
ALUA = 7f8003fc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe000ff, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         254 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe000ff, readdata = xxxxxxxx
ALUA = 7f8003fc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         255 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800400, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00100, readdata = xxxxxxxx
ALUA = 7f800400, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         255 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00100, readdata = xxxxxxxx
ALUA = 7f800400, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         256 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00100, readdata = xxxxxxxx
ALUA = 7f800404, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00101, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         256 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00101, readdata = xxxxxxxx
ALUA = 7f800404, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         257 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800408, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00102, readdata = xxxxxxxx
ALUA = 7f800408, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         257 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00102, readdata = xxxxxxxx
ALUA = 7f800408, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         258 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00102, readdata = xxxxxxxx
ALUA = 7f80040c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00103, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         258 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00103, readdata = xxxxxxxx
ALUA = 7f80040c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         259 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800410, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00104, readdata = xxxxxxxx
ALUA = 7f800410, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         259 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00104, readdata = xxxxxxxx
ALUA = 7f800410, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         260 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00104, readdata = xxxxxxxx
ALUA = 7f800414, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00105, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         260 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00105, readdata = xxxxxxxx
ALUA = 7f800414, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         261 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800418, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00106, readdata = xxxxxxxx
ALUA = 7f800418, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         261 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00106, readdata = xxxxxxxx
ALUA = 7f800418, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         262 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00106, readdata = xxxxxxxx
ALUA = 7f80041c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00107, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         262 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00107, readdata = xxxxxxxx
ALUA = 7f80041c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         263 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800420, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00108, readdata = xxxxxxxx
ALUA = 7f800420, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         263 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00108, readdata = xxxxxxxx
ALUA = 7f800420, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         264 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00108, readdata = xxxxxxxx
ALUA = 7f800424, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00109, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         264 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00109, readdata = xxxxxxxx
ALUA = 7f800424, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         265 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800428, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0010a, readdata = xxxxxxxx
ALUA = 7f800428, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         265 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0010a, readdata = xxxxxxxx
ALUA = 7f800428, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         266 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0010a, readdata = xxxxxxxx
ALUA = 7f80042c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0010b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         266 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0010b, readdata = xxxxxxxx
ALUA = 7f80042c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         267 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800430, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0010c, readdata = xxxxxxxx
ALUA = 7f800430, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         267 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0010c, readdata = xxxxxxxx
ALUA = 7f800430, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         268 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0010c, readdata = xxxxxxxx
ALUA = 7f800434, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0010d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         268 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0010d, readdata = xxxxxxxx
ALUA = 7f800434, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         269 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800438, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0010e, readdata = xxxxxxxx
ALUA = 7f800438, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         269 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0010e, readdata = xxxxxxxx
ALUA = 7f800438, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         270 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0010e, readdata = xxxxxxxx
ALUA = 7f80043c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0010f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         270 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0010f, readdata = xxxxxxxx
ALUA = 7f80043c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         271 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800440, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00110, readdata = xxxxxxxx
ALUA = 7f800440, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         271 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00110, readdata = xxxxxxxx
ALUA = 7f800440, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         272 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00110, readdata = xxxxxxxx
ALUA = 7f800444, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00111, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         272 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00111, readdata = xxxxxxxx
ALUA = 7f800444, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         273 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800448, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00112, readdata = xxxxxxxx
ALUA = 7f800448, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         273 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00112, readdata = xxxxxxxx
ALUA = 7f800448, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         274 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00112, readdata = xxxxxxxx
ALUA = 7f80044c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00113, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         274 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00113, readdata = xxxxxxxx
ALUA = 7f80044c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         275 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800450, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00114, readdata = xxxxxxxx
ALUA = 7f800450, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         275 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00114, readdata = xxxxxxxx
ALUA = 7f800450, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         276 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00114, readdata = xxxxxxxx
ALUA = 7f800454, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00115, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         276 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00115, readdata = xxxxxxxx
ALUA = 7f800454, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         277 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800458, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00116, readdata = xxxxxxxx
ALUA = 7f800458, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         277 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00116, readdata = xxxxxxxx
ALUA = 7f800458, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         278 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00116, readdata = xxxxxxxx
ALUA = 7f80045c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00117, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         278 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00117, readdata = xxxxxxxx
ALUA = 7f80045c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         279 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800460, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00118, readdata = xxxxxxxx
ALUA = 7f800460, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         279 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00118, readdata = xxxxxxxx
ALUA = 7f800460, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         280 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00118, readdata = xxxxxxxx
ALUA = 7f800464, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00119, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         280 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00119, readdata = xxxxxxxx
ALUA = 7f800464, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         281 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800468, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0011a, readdata = xxxxxxxx
ALUA = 7f800468, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         281 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0011a, readdata = xxxxxxxx
ALUA = 7f800468, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         282 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0011a, readdata = xxxxxxxx
ALUA = 7f80046c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0011b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         282 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0011b, readdata = xxxxxxxx
ALUA = 7f80046c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         283 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800470, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0011c, readdata = xxxxxxxx
ALUA = 7f800470, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         283 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0011c, readdata = xxxxxxxx
ALUA = 7f800470, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         284 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0011c, readdata = xxxxxxxx
ALUA = 7f800474, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0011d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         284 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0011d, readdata = xxxxxxxx
ALUA = 7f800474, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         285 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800478, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0011e, readdata = xxxxxxxx
ALUA = 7f800478, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         285 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0011e, readdata = xxxxxxxx
ALUA = 7f800478, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         286 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0011e, readdata = xxxxxxxx
ALUA = 7f80047c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0011f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         286 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0011f, readdata = xxxxxxxx
ALUA = 7f80047c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         287 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800480, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00120, readdata = xxxxxxxx
ALUA = 7f800480, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         287 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00120, readdata = xxxxxxxx
ALUA = 7f800480, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         288 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00120, readdata = xxxxxxxx
ALUA = 7f800484, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00121, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         288 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00121, readdata = xxxxxxxx
ALUA = 7f800484, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         289 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800488, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00122, readdata = xxxxxxxx
ALUA = 7f800488, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         289 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00122, readdata = xxxxxxxx
ALUA = 7f800488, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         290 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00122, readdata = xxxxxxxx
ALUA = 7f80048c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00123, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         290 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00123, readdata = xxxxxxxx
ALUA = 7f80048c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         291 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800490, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00124, readdata = xxxxxxxx
ALUA = 7f800490, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         291 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00124, readdata = xxxxxxxx
ALUA = 7f800490, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         292 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00124, readdata = xxxxxxxx
ALUA = 7f800494, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00125, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         292 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00125, readdata = xxxxxxxx
ALUA = 7f800494, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         293 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800498, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00126, readdata = xxxxxxxx
ALUA = 7f800498, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         293 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00126, readdata = xxxxxxxx
ALUA = 7f800498, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         294 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00126, readdata = xxxxxxxx
ALUA = 7f80049c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00127, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         294 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00127, readdata = xxxxxxxx
ALUA = 7f80049c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         295 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8004a0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00128, readdata = xxxxxxxx
ALUA = 7f8004a0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         295 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00128, readdata = xxxxxxxx
ALUA = 7f8004a0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         296 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00128, readdata = xxxxxxxx
ALUA = 7f8004a4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00129, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         296 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00129, readdata = xxxxxxxx
ALUA = 7f8004a4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         297 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8004a8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0012a, readdata = xxxxxxxx
ALUA = 7f8004a8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         297 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0012a, readdata = xxxxxxxx
ALUA = 7f8004a8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         298 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0012a, readdata = xxxxxxxx
ALUA = 7f8004ac, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0012b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         298 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0012b, readdata = xxxxxxxx
ALUA = 7f8004ac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         299 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8004b0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0012c, readdata = xxxxxxxx
ALUA = 7f8004b0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         299 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0012c, readdata = xxxxxxxx
ALUA = 7f8004b0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         300 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0012c, readdata = xxxxxxxx
ALUA = 7f8004b4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0012d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         300 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0012d, readdata = xxxxxxxx
ALUA = 7f8004b4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         301 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8004b8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0012e, readdata = xxxxxxxx
ALUA = 7f8004b8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         301 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0012e, readdata = xxxxxxxx
ALUA = 7f8004b8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         302 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0012e, readdata = xxxxxxxx
ALUA = 7f8004bc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0012f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         302 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0012f, readdata = xxxxxxxx
ALUA = 7f8004bc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         303 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8004c0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00130, readdata = xxxxxxxx
ALUA = 7f8004c0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         303 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00130, readdata = xxxxxxxx
ALUA = 7f8004c0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         304 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00130, readdata = xxxxxxxx
ALUA = 7f8004c4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00131, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         304 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00131, readdata = xxxxxxxx
ALUA = 7f8004c4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         305 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8004c8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00132, readdata = xxxxxxxx
ALUA = 7f8004c8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         305 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00132, readdata = xxxxxxxx
ALUA = 7f8004c8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         306 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00132, readdata = xxxxxxxx
ALUA = 7f8004cc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00133, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         306 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00133, readdata = xxxxxxxx
ALUA = 7f8004cc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         307 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8004d0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00134, readdata = xxxxxxxx
ALUA = 7f8004d0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         307 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00134, readdata = xxxxxxxx
ALUA = 7f8004d0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         308 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00134, readdata = xxxxxxxx
ALUA = 7f8004d4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00135, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         308 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00135, readdata = xxxxxxxx
ALUA = 7f8004d4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         309 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8004d8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00136, readdata = xxxxxxxx
ALUA = 7f8004d8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         309 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00136, readdata = xxxxxxxx
ALUA = 7f8004d8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         310 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00136, readdata = xxxxxxxx
ALUA = 7f8004dc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00137, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         310 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00137, readdata = xxxxxxxx
ALUA = 7f8004dc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         311 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8004e0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00138, readdata = xxxxxxxx
ALUA = 7f8004e0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         311 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00138, readdata = xxxxxxxx
ALUA = 7f8004e0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         312 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00138, readdata = xxxxxxxx
ALUA = 7f8004e4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00139, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         312 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00139, readdata = xxxxxxxx
ALUA = 7f8004e4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         313 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8004e8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0013a, readdata = xxxxxxxx
ALUA = 7f8004e8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         313 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0013a, readdata = xxxxxxxx
ALUA = 7f8004e8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         314 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0013a, readdata = xxxxxxxx
ALUA = 7f8004ec, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0013b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         314 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0013b, readdata = xxxxxxxx
ALUA = 7f8004ec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         315 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8004f0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0013c, readdata = xxxxxxxx
ALUA = 7f8004f0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         315 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0013c, readdata = xxxxxxxx
ALUA = 7f8004f0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         316 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0013c, readdata = xxxxxxxx
ALUA = 7f8004f4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0013d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         316 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0013d, readdata = xxxxxxxx
ALUA = 7f8004f4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         317 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8004f8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0013e, readdata = xxxxxxxx
ALUA = 7f8004f8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         317 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0013e, readdata = xxxxxxxx
ALUA = 7f8004f8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         318 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0013e, readdata = xxxxxxxx
ALUA = 7f8004fc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0013f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         318 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0013f, readdata = xxxxxxxx
ALUA = 7f8004fc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         319 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800500, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00140, readdata = xxxxxxxx
ALUA = 7f800500, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         319 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00140, readdata = xxxxxxxx
ALUA = 7f800500, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         320 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00140, readdata = xxxxxxxx
ALUA = 7f800504, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00141, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         320 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00141, readdata = xxxxxxxx
ALUA = 7f800504, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         321 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800508, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00142, readdata = xxxxxxxx
ALUA = 7f800508, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         321 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00142, readdata = xxxxxxxx
ALUA = 7f800508, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         322 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00142, readdata = xxxxxxxx
ALUA = 7f80050c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00143, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         322 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00143, readdata = xxxxxxxx
ALUA = 7f80050c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         323 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800510, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00144, readdata = xxxxxxxx
ALUA = 7f800510, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         323 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00144, readdata = xxxxxxxx
ALUA = 7f800510, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         324 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00144, readdata = xxxxxxxx
ALUA = 7f800514, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00145, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         324 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00145, readdata = xxxxxxxx
ALUA = 7f800514, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         325 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800518, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00146, readdata = xxxxxxxx
ALUA = 7f800518, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         325 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00146, readdata = xxxxxxxx
ALUA = 7f800518, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         326 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00146, readdata = xxxxxxxx
ALUA = 7f80051c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00147, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         326 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00147, readdata = xxxxxxxx
ALUA = 7f80051c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         327 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800520, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00148, readdata = xxxxxxxx
ALUA = 7f800520, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         327 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00148, readdata = xxxxxxxx
ALUA = 7f800520, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         328 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00148, readdata = xxxxxxxx
ALUA = 7f800524, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00149, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         328 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00149, readdata = xxxxxxxx
ALUA = 7f800524, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         329 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800528, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0014a, readdata = xxxxxxxx
ALUA = 7f800528, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         329 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0014a, readdata = xxxxxxxx
ALUA = 7f800528, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         330 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0014a, readdata = xxxxxxxx
ALUA = 7f80052c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0014b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         330 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0014b, readdata = xxxxxxxx
ALUA = 7f80052c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         331 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800530, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0014c, readdata = xxxxxxxx
ALUA = 7f800530, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         331 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0014c, readdata = xxxxxxxx
ALUA = 7f800530, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         332 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0014c, readdata = xxxxxxxx
ALUA = 7f800534, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0014d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         332 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0014d, readdata = xxxxxxxx
ALUA = 7f800534, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         333 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800538, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0014e, readdata = xxxxxxxx
ALUA = 7f800538, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         333 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0014e, readdata = xxxxxxxx
ALUA = 7f800538, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         334 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0014e, readdata = xxxxxxxx
ALUA = 7f80053c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0014f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         334 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0014f, readdata = xxxxxxxx
ALUA = 7f80053c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         335 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800540, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00150, readdata = xxxxxxxx
ALUA = 7f800540, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         335 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00150, readdata = xxxxxxxx
ALUA = 7f800540, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         336 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00150, readdata = xxxxxxxx
ALUA = 7f800544, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00151, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         336 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00151, readdata = xxxxxxxx
ALUA = 7f800544, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         337 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800548, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00152, readdata = xxxxxxxx
ALUA = 7f800548, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         337 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00152, readdata = xxxxxxxx
ALUA = 7f800548, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         338 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00152, readdata = xxxxxxxx
ALUA = 7f80054c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00153, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         338 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00153, readdata = xxxxxxxx
ALUA = 7f80054c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         339 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800550, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00154, readdata = xxxxxxxx
ALUA = 7f800550, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         339 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00154, readdata = xxxxxxxx
ALUA = 7f800550, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         340 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00154, readdata = xxxxxxxx
ALUA = 7f800554, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00155, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         340 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00155, readdata = xxxxxxxx
ALUA = 7f800554, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         341 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800558, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00156, readdata = xxxxxxxx
ALUA = 7f800558, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         341 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00156, readdata = xxxxxxxx
ALUA = 7f800558, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         342 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00156, readdata = xxxxxxxx
ALUA = 7f80055c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00157, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         342 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00157, readdata = xxxxxxxx
ALUA = 7f80055c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         343 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800560, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00158, readdata = xxxxxxxx
ALUA = 7f800560, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         343 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00158, readdata = xxxxxxxx
ALUA = 7f800560, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         344 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00158, readdata = xxxxxxxx
ALUA = 7f800564, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00159, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         344 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00159, readdata = xxxxxxxx
ALUA = 7f800564, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         345 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800568, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0015a, readdata = xxxxxxxx
ALUA = 7f800568, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         345 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0015a, readdata = xxxxxxxx
ALUA = 7f800568, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         346 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0015a, readdata = xxxxxxxx
ALUA = 7f80056c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0015b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         346 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0015b, readdata = xxxxxxxx
ALUA = 7f80056c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         347 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800570, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0015c, readdata = xxxxxxxx
ALUA = 7f800570, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         347 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0015c, readdata = xxxxxxxx
ALUA = 7f800570, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         348 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0015c, readdata = xxxxxxxx
ALUA = 7f800574, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0015d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         348 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0015d, readdata = xxxxxxxx
ALUA = 7f800574, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         349 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800578, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0015e, readdata = xxxxxxxx
ALUA = 7f800578, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         349 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0015e, readdata = xxxxxxxx
ALUA = 7f800578, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         350 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0015e, readdata = xxxxxxxx
ALUA = 7f80057c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0015f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         350 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0015f, readdata = xxxxxxxx
ALUA = 7f80057c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         351 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800580, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00160, readdata = xxxxxxxx
ALUA = 7f800580, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         351 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00160, readdata = xxxxxxxx
ALUA = 7f800580, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         352 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00160, readdata = xxxxxxxx
ALUA = 7f800584, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00161, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         352 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00161, readdata = xxxxxxxx
ALUA = 7f800584, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         353 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800588, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00162, readdata = xxxxxxxx
ALUA = 7f800588, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         353 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00162, readdata = xxxxxxxx
ALUA = 7f800588, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         354 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00162, readdata = xxxxxxxx
ALUA = 7f80058c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00163, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         354 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00163, readdata = xxxxxxxx
ALUA = 7f80058c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         355 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800590, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00164, readdata = xxxxxxxx
ALUA = 7f800590, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         355 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00164, readdata = xxxxxxxx
ALUA = 7f800590, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         356 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00164, readdata = xxxxxxxx
ALUA = 7f800594, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00165, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         356 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00165, readdata = xxxxxxxx
ALUA = 7f800594, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         357 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800598, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00166, readdata = xxxxxxxx
ALUA = 7f800598, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         357 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00166, readdata = xxxxxxxx
ALUA = 7f800598, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         358 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00166, readdata = xxxxxxxx
ALUA = 7f80059c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00167, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         358 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00167, readdata = xxxxxxxx
ALUA = 7f80059c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         359 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8005a0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00168, readdata = xxxxxxxx
ALUA = 7f8005a0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         359 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00168, readdata = xxxxxxxx
ALUA = 7f8005a0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         360 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00168, readdata = xxxxxxxx
ALUA = 7f8005a4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00169, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         360 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00169, readdata = xxxxxxxx
ALUA = 7f8005a4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         361 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8005a8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0016a, readdata = xxxxxxxx
ALUA = 7f8005a8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         361 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0016a, readdata = xxxxxxxx
ALUA = 7f8005a8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         362 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0016a, readdata = xxxxxxxx
ALUA = 7f8005ac, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0016b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         362 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0016b, readdata = xxxxxxxx
ALUA = 7f8005ac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         363 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8005b0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0016c, readdata = xxxxxxxx
ALUA = 7f8005b0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         363 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0016c, readdata = xxxxxxxx
ALUA = 7f8005b0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         364 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0016c, readdata = xxxxxxxx
ALUA = 7f8005b4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0016d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         364 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0016d, readdata = xxxxxxxx
ALUA = 7f8005b4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         365 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8005b8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0016e, readdata = xxxxxxxx
ALUA = 7f8005b8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         365 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0016e, readdata = xxxxxxxx
ALUA = 7f8005b8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         366 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0016e, readdata = xxxxxxxx
ALUA = 7f8005bc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0016f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         366 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0016f, readdata = xxxxxxxx
ALUA = 7f8005bc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         367 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8005c0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00170, readdata = xxxxxxxx
ALUA = 7f8005c0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         367 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00170, readdata = xxxxxxxx
ALUA = 7f8005c0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         368 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00170, readdata = xxxxxxxx
ALUA = 7f8005c4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00171, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         368 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00171, readdata = xxxxxxxx
ALUA = 7f8005c4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         369 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8005c8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00172, readdata = xxxxxxxx
ALUA = 7f8005c8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         369 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00172, readdata = xxxxxxxx
ALUA = 7f8005c8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         370 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00172, readdata = xxxxxxxx
ALUA = 7f8005cc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00173, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         370 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00173, readdata = xxxxxxxx
ALUA = 7f8005cc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         371 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8005d0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00174, readdata = xxxxxxxx
ALUA = 7f8005d0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         371 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00174, readdata = xxxxxxxx
ALUA = 7f8005d0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         372 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00174, readdata = xxxxxxxx
ALUA = 7f8005d4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00175, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         372 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00175, readdata = xxxxxxxx
ALUA = 7f8005d4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         373 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8005d8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00176, readdata = xxxxxxxx
ALUA = 7f8005d8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         373 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00176, readdata = xxxxxxxx
ALUA = 7f8005d8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         374 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00176, readdata = xxxxxxxx
ALUA = 7f8005dc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00177, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         374 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00177, readdata = xxxxxxxx
ALUA = 7f8005dc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         375 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8005e0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00178, readdata = xxxxxxxx
ALUA = 7f8005e0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         375 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00178, readdata = xxxxxxxx
ALUA = 7f8005e0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         376 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00178, readdata = xxxxxxxx
ALUA = 7f8005e4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00179, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         376 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00179, readdata = xxxxxxxx
ALUA = 7f8005e4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         377 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8005e8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0017a, readdata = xxxxxxxx
ALUA = 7f8005e8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         377 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0017a, readdata = xxxxxxxx
ALUA = 7f8005e8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         378 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0017a, readdata = xxxxxxxx
ALUA = 7f8005ec, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0017b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         378 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0017b, readdata = xxxxxxxx
ALUA = 7f8005ec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         379 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8005f0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0017c, readdata = xxxxxxxx
ALUA = 7f8005f0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         379 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0017c, readdata = xxxxxxxx
ALUA = 7f8005f0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         380 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0017c, readdata = xxxxxxxx
ALUA = 7f8005f4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0017d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         380 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0017d, readdata = xxxxxxxx
ALUA = 7f8005f4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         381 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8005f8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0017e, readdata = xxxxxxxx
ALUA = 7f8005f8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         381 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0017e, readdata = xxxxxxxx
ALUA = 7f8005f8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         382 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0017e, readdata = xxxxxxxx
ALUA = 7f8005fc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0017f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         382 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0017f, readdata = xxxxxxxx
ALUA = 7f8005fc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         383 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800600, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00180, readdata = xxxxxxxx
ALUA = 7f800600, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         383 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00180, readdata = xxxxxxxx
ALUA = 7f800600, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         384 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00180, readdata = xxxxxxxx
ALUA = 7f800604, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00181, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         384 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00181, readdata = xxxxxxxx
ALUA = 7f800604, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         385 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800608, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00182, readdata = xxxxxxxx
ALUA = 7f800608, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         385 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00182, readdata = xxxxxxxx
ALUA = 7f800608, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         386 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00182, readdata = xxxxxxxx
ALUA = 7f80060c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00183, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         386 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00183, readdata = xxxxxxxx
ALUA = 7f80060c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         387 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800610, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00184, readdata = xxxxxxxx
ALUA = 7f800610, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         387 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00184, readdata = xxxxxxxx
ALUA = 7f800610, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         388 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00184, readdata = xxxxxxxx
ALUA = 7f800614, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00185, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         388 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00185, readdata = xxxxxxxx
ALUA = 7f800614, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         389 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800618, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00186, readdata = xxxxxxxx
ALUA = 7f800618, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         389 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00186, readdata = xxxxxxxx
ALUA = 7f800618, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         390 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00186, readdata = xxxxxxxx
ALUA = 7f80061c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00187, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         390 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00187, readdata = xxxxxxxx
ALUA = 7f80061c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         391 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800620, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00188, readdata = xxxxxxxx
ALUA = 7f800620, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         391 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00188, readdata = xxxxxxxx
ALUA = 7f800620, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         392 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00188, readdata = xxxxxxxx
ALUA = 7f800624, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00189, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         392 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00189, readdata = xxxxxxxx
ALUA = 7f800624, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         393 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800628, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0018a, readdata = xxxxxxxx
ALUA = 7f800628, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         393 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0018a, readdata = xxxxxxxx
ALUA = 7f800628, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         394 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0018a, readdata = xxxxxxxx
ALUA = 7f80062c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0018b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         394 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0018b, readdata = xxxxxxxx
ALUA = 7f80062c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         395 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800630, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0018c, readdata = xxxxxxxx
ALUA = 7f800630, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         395 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0018c, readdata = xxxxxxxx
ALUA = 7f800630, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         396 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0018c, readdata = xxxxxxxx
ALUA = 7f800634, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0018d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         396 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0018d, readdata = xxxxxxxx
ALUA = 7f800634, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         397 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800638, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0018e, readdata = xxxxxxxx
ALUA = 7f800638, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         397 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0018e, readdata = xxxxxxxx
ALUA = 7f800638, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         398 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0018e, readdata = xxxxxxxx
ALUA = 7f80063c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0018f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         398 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0018f, readdata = xxxxxxxx
ALUA = 7f80063c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         399 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800640, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00190, readdata = xxxxxxxx
ALUA = 7f800640, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         399 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00190, readdata = xxxxxxxx
ALUA = 7f800640, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         400 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00190, readdata = xxxxxxxx
ALUA = 7f800644, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00191, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         400 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00191, readdata = xxxxxxxx
ALUA = 7f800644, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         401 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800648, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00192, readdata = xxxxxxxx
ALUA = 7f800648, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         401 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00192, readdata = xxxxxxxx
ALUA = 7f800648, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         402 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00192, readdata = xxxxxxxx
ALUA = 7f80064c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00193, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         402 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00193, readdata = xxxxxxxx
ALUA = 7f80064c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         403 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800650, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00194, readdata = xxxxxxxx
ALUA = 7f800650, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         403 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00194, readdata = xxxxxxxx
ALUA = 7f800650, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         404 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00194, readdata = xxxxxxxx
ALUA = 7f800654, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00195, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         404 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00195, readdata = xxxxxxxx
ALUA = 7f800654, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         405 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800658, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00196, readdata = xxxxxxxx
ALUA = 7f800658, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         405 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00196, readdata = xxxxxxxx
ALUA = 7f800658, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         406 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00196, readdata = xxxxxxxx
ALUA = 7f80065c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00197, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         406 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00197, readdata = xxxxxxxx
ALUA = 7f80065c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         407 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800660, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00198, readdata = xxxxxxxx
ALUA = 7f800660, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         407 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00198, readdata = xxxxxxxx
ALUA = 7f800660, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         408 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00198, readdata = xxxxxxxx
ALUA = 7f800664, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00199, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         408 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00199, readdata = xxxxxxxx
ALUA = 7f800664, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         409 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800668, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0019a, readdata = xxxxxxxx
ALUA = 7f800668, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         409 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0019a, readdata = xxxxxxxx
ALUA = 7f800668, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         410 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0019a, readdata = xxxxxxxx
ALUA = 7f80066c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0019b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         410 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0019b, readdata = xxxxxxxx
ALUA = 7f80066c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         411 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800670, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0019c, readdata = xxxxxxxx
ALUA = 7f800670, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         411 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0019c, readdata = xxxxxxxx
ALUA = 7f800670, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         412 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0019c, readdata = xxxxxxxx
ALUA = 7f800674, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0019d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         412 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0019d, readdata = xxxxxxxx
ALUA = 7f800674, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         413 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800678, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0019e, readdata = xxxxxxxx
ALUA = 7f800678, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         413 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0019e, readdata = xxxxxxxx
ALUA = 7f800678, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         414 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0019e, readdata = xxxxxxxx
ALUA = 7f80067c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0019f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         414 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0019f, readdata = xxxxxxxx
ALUA = 7f80067c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         415 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800680, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001a0, readdata = xxxxxxxx
ALUA = 7f800680, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         415 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001a0, readdata = xxxxxxxx
ALUA = 7f800680, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         416 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe001a0, readdata = xxxxxxxx
ALUA = 7f800684, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001a1, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         416 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001a1, readdata = xxxxxxxx
ALUA = 7f800684, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         417 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800688, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001a2, readdata = xxxxxxxx
ALUA = 7f800688, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         417 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001a2, readdata = xxxxxxxx
ALUA = 7f800688, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         418 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe001a2, readdata = xxxxxxxx
ALUA = 7f80068c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001a3, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         418 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001a3, readdata = xxxxxxxx
ALUA = 7f80068c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         419 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800690, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001a4, readdata = xxxxxxxx
ALUA = 7f800690, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         419 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001a4, readdata = xxxxxxxx
ALUA = 7f800690, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         420 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe001a4, readdata = xxxxxxxx
ALUA = 7f800694, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001a5, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         420 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001a5, readdata = xxxxxxxx
ALUA = 7f800694, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         421 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800698, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001a6, readdata = xxxxxxxx
ALUA = 7f800698, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         421 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001a6, readdata = xxxxxxxx
ALUA = 7f800698, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         422 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe001a6, readdata = xxxxxxxx
ALUA = 7f80069c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001a7, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         422 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001a7, readdata = xxxxxxxx
ALUA = 7f80069c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         423 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8006a0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001a8, readdata = xxxxxxxx
ALUA = 7f8006a0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         423 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001a8, readdata = xxxxxxxx
ALUA = 7f8006a0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         424 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe001a8, readdata = xxxxxxxx
ALUA = 7f8006a4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001a9, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         424 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001a9, readdata = xxxxxxxx
ALUA = 7f8006a4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         425 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8006a8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001aa, readdata = xxxxxxxx
ALUA = 7f8006a8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         425 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001aa, readdata = xxxxxxxx
ALUA = 7f8006a8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         426 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe001aa, readdata = xxxxxxxx
ALUA = 7f8006ac, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001ab, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         426 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001ab, readdata = xxxxxxxx
ALUA = 7f8006ac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         427 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8006b0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001ac, readdata = xxxxxxxx
ALUA = 7f8006b0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         427 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001ac, readdata = xxxxxxxx
ALUA = 7f8006b0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         428 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe001ac, readdata = xxxxxxxx
ALUA = 7f8006b4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001ad, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         428 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001ad, readdata = xxxxxxxx
ALUA = 7f8006b4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         429 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8006b8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001ae, readdata = xxxxxxxx
ALUA = 7f8006b8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         429 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001ae, readdata = xxxxxxxx
ALUA = 7f8006b8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         430 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe001ae, readdata = xxxxxxxx
ALUA = 7f8006bc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001af, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         430 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001af, readdata = xxxxxxxx
ALUA = 7f8006bc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         431 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8006c0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001b0, readdata = xxxxxxxx
ALUA = 7f8006c0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         431 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001b0, readdata = xxxxxxxx
ALUA = 7f8006c0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         432 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe001b0, readdata = xxxxxxxx
ALUA = 7f8006c4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001b1, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         432 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001b1, readdata = xxxxxxxx
ALUA = 7f8006c4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         433 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8006c8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001b2, readdata = xxxxxxxx
ALUA = 7f8006c8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         433 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001b2, readdata = xxxxxxxx
ALUA = 7f8006c8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         434 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe001b2, readdata = xxxxxxxx
ALUA = 7f8006cc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001b3, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         434 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001b3, readdata = xxxxxxxx
ALUA = 7f8006cc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         435 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8006d0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001b4, readdata = xxxxxxxx
ALUA = 7f8006d0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         435 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001b4, readdata = xxxxxxxx
ALUA = 7f8006d0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         436 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe001b4, readdata = xxxxxxxx
ALUA = 7f8006d4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001b5, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         436 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001b5, readdata = xxxxxxxx
ALUA = 7f8006d4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         437 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8006d8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001b6, readdata = xxxxxxxx
ALUA = 7f8006d8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         437 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001b6, readdata = xxxxxxxx
ALUA = 7f8006d8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         438 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe001b6, readdata = xxxxxxxx
ALUA = 7f8006dc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001b7, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         438 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001b7, readdata = xxxxxxxx
ALUA = 7f8006dc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         439 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8006e0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001b8, readdata = xxxxxxxx
ALUA = 7f8006e0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         439 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001b8, readdata = xxxxxxxx
ALUA = 7f8006e0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         440 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe001b8, readdata = xxxxxxxx
ALUA = 7f8006e4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001b9, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         440 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001b9, readdata = xxxxxxxx
ALUA = 7f8006e4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         441 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8006e8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001ba, readdata = xxxxxxxx
ALUA = 7f8006e8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         441 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001ba, readdata = xxxxxxxx
ALUA = 7f8006e8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         442 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe001ba, readdata = xxxxxxxx
ALUA = 7f8006ec, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001bb, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         442 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001bb, readdata = xxxxxxxx
ALUA = 7f8006ec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         443 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8006f0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001bc, readdata = xxxxxxxx
ALUA = 7f8006f0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         443 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001bc, readdata = xxxxxxxx
ALUA = 7f8006f0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         444 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe001bc, readdata = xxxxxxxx
ALUA = 7f8006f4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001bd, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         444 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001bd, readdata = xxxxxxxx
ALUA = 7f8006f4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         445 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8006f8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001be, readdata = xxxxxxxx
ALUA = 7f8006f8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         445 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001be, readdata = xxxxxxxx
ALUA = 7f8006f8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         446 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe001be, readdata = xxxxxxxx
ALUA = 7f8006fc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001bf, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         446 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001bf, readdata = xxxxxxxx
ALUA = 7f8006fc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         447 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800700, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001c0, readdata = xxxxxxxx
ALUA = 7f800700, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         447 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001c0, readdata = xxxxxxxx
ALUA = 7f800700, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         448 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe001c0, readdata = xxxxxxxx
ALUA = 7f800704, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001c1, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         448 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001c1, readdata = xxxxxxxx
ALUA = 7f800704, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         449 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800708, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001c2, readdata = xxxxxxxx
ALUA = 7f800708, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         449 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001c2, readdata = xxxxxxxx
ALUA = 7f800708, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         450 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe001c2, readdata = xxxxxxxx
ALUA = 7f80070c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001c3, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         450 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001c3, readdata = xxxxxxxx
ALUA = 7f80070c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         451 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800710, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001c4, readdata = xxxxxxxx
ALUA = 7f800710, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         451 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001c4, readdata = xxxxxxxx
ALUA = 7f800710, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         452 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe001c4, readdata = xxxxxxxx
ALUA = 7f800714, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001c5, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         452 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001c5, readdata = xxxxxxxx
ALUA = 7f800714, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         453 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800718, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001c6, readdata = xxxxxxxx
ALUA = 7f800718, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         453 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001c6, readdata = xxxxxxxx
ALUA = 7f800718, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         454 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe001c6, readdata = xxxxxxxx
ALUA = 7f80071c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001c7, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         454 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001c7, readdata = xxxxxxxx
ALUA = 7f80071c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         455 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800720, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001c8, readdata = xxxxxxxx
ALUA = 7f800720, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         455 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001c8, readdata = xxxxxxxx
ALUA = 7f800720, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         456 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe001c8, readdata = xxxxxxxx
ALUA = 7f800724, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001c9, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         456 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001c9, readdata = xxxxxxxx
ALUA = 7f800724, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         457 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800728, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001ca, readdata = xxxxxxxx
ALUA = 7f800728, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         457 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001ca, readdata = xxxxxxxx
ALUA = 7f800728, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         458 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe001ca, readdata = xxxxxxxx
ALUA = 7f80072c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001cb, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         458 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001cb, readdata = xxxxxxxx
ALUA = 7f80072c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         459 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800730, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001cc, readdata = xxxxxxxx
ALUA = 7f800730, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         459 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001cc, readdata = xxxxxxxx
ALUA = 7f800730, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         460 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe001cc, readdata = xxxxxxxx
ALUA = 7f800734, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001cd, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         460 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001cd, readdata = xxxxxxxx
ALUA = 7f800734, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         461 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800738, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001ce, readdata = xxxxxxxx
ALUA = 7f800738, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         461 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001ce, readdata = xxxxxxxx
ALUA = 7f800738, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         462 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe001ce, readdata = xxxxxxxx
ALUA = 7f80073c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001cf, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         462 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001cf, readdata = xxxxxxxx
ALUA = 7f80073c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         463 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800740, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001d0, readdata = xxxxxxxx
ALUA = 7f800740, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         463 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001d0, readdata = xxxxxxxx
ALUA = 7f800740, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         464 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe001d0, readdata = xxxxxxxx
ALUA = 7f800744, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001d1, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         464 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001d1, readdata = xxxxxxxx
ALUA = 7f800744, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         465 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800748, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001d2, readdata = xxxxxxxx
ALUA = 7f800748, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         465 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001d2, readdata = xxxxxxxx
ALUA = 7f800748, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         466 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe001d2, readdata = xxxxxxxx
ALUA = 7f80074c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001d3, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         466 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001d3, readdata = xxxxxxxx
ALUA = 7f80074c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         467 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800750, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001d4, readdata = xxxxxxxx
ALUA = 7f800750, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         467 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001d4, readdata = xxxxxxxx
ALUA = 7f800750, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         468 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe001d4, readdata = xxxxxxxx
ALUA = 7f800754, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001d5, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         468 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001d5, readdata = xxxxxxxx
ALUA = 7f800754, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         469 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800758, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001d6, readdata = xxxxxxxx
ALUA = 7f800758, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         469 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001d6, readdata = xxxxxxxx
ALUA = 7f800758, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         470 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe001d6, readdata = xxxxxxxx
ALUA = 7f80075c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001d7, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         470 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001d7, readdata = xxxxxxxx
ALUA = 7f80075c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         471 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800760, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001d8, readdata = xxxxxxxx
ALUA = 7f800760, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         471 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001d8, readdata = xxxxxxxx
ALUA = 7f800760, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         472 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe001d8, readdata = xxxxxxxx
ALUA = 7f800764, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001d9, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         472 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001d9, readdata = xxxxxxxx
ALUA = 7f800764, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         473 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800768, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001da, readdata = xxxxxxxx
ALUA = 7f800768, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         473 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001da, readdata = xxxxxxxx
ALUA = 7f800768, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         474 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe001da, readdata = xxxxxxxx
ALUA = 7f80076c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001db, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         474 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001db, readdata = xxxxxxxx
ALUA = 7f80076c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         475 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800770, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001dc, readdata = xxxxxxxx
ALUA = 7f800770, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         475 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001dc, readdata = xxxxxxxx
ALUA = 7f800770, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         476 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe001dc, readdata = xxxxxxxx
ALUA = 7f800774, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001dd, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         476 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001dd, readdata = xxxxxxxx
ALUA = 7f800774, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         477 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800778, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001de, readdata = xxxxxxxx
ALUA = 7f800778, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         477 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001de, readdata = xxxxxxxx
ALUA = 7f800778, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         478 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe001de, readdata = xxxxxxxx
ALUA = 7f80077c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001df, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         478 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001df, readdata = xxxxxxxx
ALUA = 7f80077c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         479 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800780, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001e0, readdata = xxxxxxxx
ALUA = 7f800780, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         479 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001e0, readdata = xxxxxxxx
ALUA = 7f800780, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         480 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe001e0, readdata = xxxxxxxx
ALUA = 7f800784, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001e1, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         480 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001e1, readdata = xxxxxxxx
ALUA = 7f800784, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         481 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800788, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001e2, readdata = xxxxxxxx
ALUA = 7f800788, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         481 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001e2, readdata = xxxxxxxx
ALUA = 7f800788, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         482 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe001e2, readdata = xxxxxxxx
ALUA = 7f80078c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001e3, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         482 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001e3, readdata = xxxxxxxx
ALUA = 7f80078c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         483 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800790, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001e4, readdata = xxxxxxxx
ALUA = 7f800790, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         483 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001e4, readdata = xxxxxxxx
ALUA = 7f800790, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         484 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe001e4, readdata = xxxxxxxx
ALUA = 7f800794, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001e5, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         484 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001e5, readdata = xxxxxxxx
ALUA = 7f800794, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         485 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800798, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001e6, readdata = xxxxxxxx
ALUA = 7f800798, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         485 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001e6, readdata = xxxxxxxx
ALUA = 7f800798, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         486 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe001e6, readdata = xxxxxxxx
ALUA = 7f80079c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001e7, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         486 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001e7, readdata = xxxxxxxx
ALUA = 7f80079c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         487 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8007a0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001e8, readdata = xxxxxxxx
ALUA = 7f8007a0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         487 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001e8, readdata = xxxxxxxx
ALUA = 7f8007a0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         488 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe001e8, readdata = xxxxxxxx
ALUA = 7f8007a4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001e9, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         488 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001e9, readdata = xxxxxxxx
ALUA = 7f8007a4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         489 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8007a8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001ea, readdata = xxxxxxxx
ALUA = 7f8007a8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         489 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001ea, readdata = xxxxxxxx
ALUA = 7f8007a8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         490 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe001ea, readdata = xxxxxxxx
ALUA = 7f8007ac, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001eb, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         490 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001eb, readdata = xxxxxxxx
ALUA = 7f8007ac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         491 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8007b0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001ec, readdata = xxxxxxxx
ALUA = 7f8007b0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         491 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001ec, readdata = xxxxxxxx
ALUA = 7f8007b0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         492 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe001ec, readdata = xxxxxxxx
ALUA = 7f8007b4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001ed, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         492 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001ed, readdata = xxxxxxxx
ALUA = 7f8007b4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         493 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8007b8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001ee, readdata = xxxxxxxx
ALUA = 7f8007b8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         493 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001ee, readdata = xxxxxxxx
ALUA = 7f8007b8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         494 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe001ee, readdata = xxxxxxxx
ALUA = 7f8007bc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001ef, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         494 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001ef, readdata = xxxxxxxx
ALUA = 7f8007bc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         495 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8007c0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001f0, readdata = xxxxxxxx
ALUA = 7f8007c0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         495 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001f0, readdata = xxxxxxxx
ALUA = 7f8007c0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         496 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe001f0, readdata = xxxxxxxx
ALUA = 7f8007c4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001f1, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         496 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001f1, readdata = xxxxxxxx
ALUA = 7f8007c4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         497 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8007c8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001f2, readdata = xxxxxxxx
ALUA = 7f8007c8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         497 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001f2, readdata = xxxxxxxx
ALUA = 7f8007c8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         498 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe001f2, readdata = xxxxxxxx
ALUA = 7f8007cc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001f3, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         498 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001f3, readdata = xxxxxxxx
ALUA = 7f8007cc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         499 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8007d0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001f4, readdata = xxxxxxxx
ALUA = 7f8007d0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         499 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001f4, readdata = xxxxxxxx
ALUA = 7f8007d0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         500 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe001f4, readdata = xxxxxxxx
ALUA = 7f8007d4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001f5, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         500 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001f5, readdata = xxxxxxxx
ALUA = 7f8007d4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         501 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8007d8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001f6, readdata = xxxxxxxx
ALUA = 7f8007d8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         501 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001f6, readdata = xxxxxxxx
ALUA = 7f8007d8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         502 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe001f6, readdata = xxxxxxxx
ALUA = 7f8007dc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001f7, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         502 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001f7, readdata = xxxxxxxx
ALUA = 7f8007dc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         503 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8007e0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001f8, readdata = xxxxxxxx
ALUA = 7f8007e0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         503 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001f8, readdata = xxxxxxxx
ALUA = 7f8007e0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         504 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe001f8, readdata = xxxxxxxx
ALUA = 7f8007e4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001f9, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         504 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001f9, readdata = xxxxxxxx
ALUA = 7f8007e4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         505 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8007e8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001fa, readdata = xxxxxxxx
ALUA = 7f8007e8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         505 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001fa, readdata = xxxxxxxx
ALUA = 7f8007e8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         506 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe001fa, readdata = xxxxxxxx
ALUA = 7f8007ec, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001fb, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         506 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001fb, readdata = xxxxxxxx
ALUA = 7f8007ec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         507 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8007f0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001fc, readdata = xxxxxxxx
ALUA = 7f8007f0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         507 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001fc, readdata = xxxxxxxx
ALUA = 7f8007f0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         508 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe001fc, readdata = xxxxxxxx
ALUA = 7f8007f4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001fd, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         508 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001fd, readdata = xxxxxxxx
ALUA = 7f8007f4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         509 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8007f8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001fe, readdata = xxxxxxxx
ALUA = 7f8007f8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         509 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001fe, readdata = xxxxxxxx
ALUA = 7f8007f8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         510 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe001fe, readdata = xxxxxxxx
ALUA = 7f8007fc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe001ff, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         510 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe001ff, readdata = xxxxxxxx
ALUA = 7f8007fc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         511 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800800, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00200, readdata = xxxxxxxx
ALUA = 7f800800, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         511 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00200, readdata = xxxxxxxx
ALUA = 7f800800, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         512 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00200, readdata = xxxxxxxx
ALUA = 7f800804, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00201, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         512 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00201, readdata = xxxxxxxx
ALUA = 7f800804, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         513 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800808, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00202, readdata = xxxxxxxx
ALUA = 7f800808, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         513 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00202, readdata = xxxxxxxx
ALUA = 7f800808, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         514 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00202, readdata = xxxxxxxx
ALUA = 7f80080c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00203, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         514 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00203, readdata = xxxxxxxx
ALUA = 7f80080c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         515 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800810, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00204, readdata = xxxxxxxx
ALUA = 7f800810, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         515 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00204, readdata = xxxxxxxx
ALUA = 7f800810, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         516 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00204, readdata = xxxxxxxx
ALUA = 7f800814, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00205, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         516 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00205, readdata = xxxxxxxx
ALUA = 7f800814, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         517 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800818, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00206, readdata = xxxxxxxx
ALUA = 7f800818, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         517 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00206, readdata = xxxxxxxx
ALUA = 7f800818, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         518 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00206, readdata = xxxxxxxx
ALUA = 7f80081c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00207, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         518 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00207, readdata = xxxxxxxx
ALUA = 7f80081c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         519 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800820, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00208, readdata = xxxxxxxx
ALUA = 7f800820, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         519 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00208, readdata = xxxxxxxx
ALUA = 7f800820, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         520 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00208, readdata = xxxxxxxx
ALUA = 7f800824, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00209, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         520 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00209, readdata = xxxxxxxx
ALUA = 7f800824, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         521 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800828, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0020a, readdata = xxxxxxxx
ALUA = 7f800828, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         521 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0020a, readdata = xxxxxxxx
ALUA = 7f800828, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         522 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0020a, readdata = xxxxxxxx
ALUA = 7f80082c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0020b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         522 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0020b, readdata = xxxxxxxx
ALUA = 7f80082c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         523 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800830, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0020c, readdata = xxxxxxxx
ALUA = 7f800830, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         523 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0020c, readdata = xxxxxxxx
ALUA = 7f800830, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         524 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0020c, readdata = xxxxxxxx
ALUA = 7f800834, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0020d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         524 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0020d, readdata = xxxxxxxx
ALUA = 7f800834, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         525 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800838, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0020e, readdata = xxxxxxxx
ALUA = 7f800838, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         525 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0020e, readdata = xxxxxxxx
ALUA = 7f800838, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         526 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0020e, readdata = xxxxxxxx
ALUA = 7f80083c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0020f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         526 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0020f, readdata = xxxxxxxx
ALUA = 7f80083c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         527 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800840, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00210, readdata = xxxxxxxx
ALUA = 7f800840, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         527 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00210, readdata = xxxxxxxx
ALUA = 7f800840, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         528 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00210, readdata = xxxxxxxx
ALUA = 7f800844, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00211, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         528 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00211, readdata = xxxxxxxx
ALUA = 7f800844, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         529 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800848, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00212, readdata = xxxxxxxx
ALUA = 7f800848, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         529 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00212, readdata = xxxxxxxx
ALUA = 7f800848, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         530 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00212, readdata = xxxxxxxx
ALUA = 7f80084c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00213, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         530 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00213, readdata = xxxxxxxx
ALUA = 7f80084c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         531 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800850, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00214, readdata = xxxxxxxx
ALUA = 7f800850, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         531 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00214, readdata = xxxxxxxx
ALUA = 7f800850, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         532 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00214, readdata = xxxxxxxx
ALUA = 7f800854, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00215, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         532 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00215, readdata = xxxxxxxx
ALUA = 7f800854, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         533 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800858, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00216, readdata = xxxxxxxx
ALUA = 7f800858, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         533 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00216, readdata = xxxxxxxx
ALUA = 7f800858, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         534 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00216, readdata = xxxxxxxx
ALUA = 7f80085c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00217, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         534 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00217, readdata = xxxxxxxx
ALUA = 7f80085c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         535 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800860, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00218, readdata = xxxxxxxx
ALUA = 7f800860, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         535 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00218, readdata = xxxxxxxx
ALUA = 7f800860, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         536 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00218, readdata = xxxxxxxx
ALUA = 7f800864, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00219, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         536 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00219, readdata = xxxxxxxx
ALUA = 7f800864, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         537 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800868, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0021a, readdata = xxxxxxxx
ALUA = 7f800868, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         537 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0021a, readdata = xxxxxxxx
ALUA = 7f800868, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         538 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0021a, readdata = xxxxxxxx
ALUA = 7f80086c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0021b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         538 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0021b, readdata = xxxxxxxx
ALUA = 7f80086c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         539 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800870, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0021c, readdata = xxxxxxxx
ALUA = 7f800870, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         539 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0021c, readdata = xxxxxxxx
ALUA = 7f800870, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         540 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0021c, readdata = xxxxxxxx
ALUA = 7f800874, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0021d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         540 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0021d, readdata = xxxxxxxx
ALUA = 7f800874, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         541 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800878, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0021e, readdata = xxxxxxxx
ALUA = 7f800878, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         541 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0021e, readdata = xxxxxxxx
ALUA = 7f800878, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         542 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0021e, readdata = xxxxxxxx
ALUA = 7f80087c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0021f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         542 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0021f, readdata = xxxxxxxx
ALUA = 7f80087c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         543 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800880, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00220, readdata = xxxxxxxx
ALUA = 7f800880, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         543 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00220, readdata = xxxxxxxx
ALUA = 7f800880, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         544 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00220, readdata = xxxxxxxx
ALUA = 7f800884, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00221, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         544 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00221, readdata = xxxxxxxx
ALUA = 7f800884, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         545 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800888, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00222, readdata = xxxxxxxx
ALUA = 7f800888, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         545 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00222, readdata = xxxxxxxx
ALUA = 7f800888, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         546 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00222, readdata = xxxxxxxx
ALUA = 7f80088c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00223, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         546 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00223, readdata = xxxxxxxx
ALUA = 7f80088c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         547 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800890, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00224, readdata = xxxxxxxx
ALUA = 7f800890, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         547 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00224, readdata = xxxxxxxx
ALUA = 7f800890, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         548 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00224, readdata = xxxxxxxx
ALUA = 7f800894, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00225, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         548 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00225, readdata = xxxxxxxx
ALUA = 7f800894, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         549 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800898, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00226, readdata = xxxxxxxx
ALUA = 7f800898, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         549 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00226, readdata = xxxxxxxx
ALUA = 7f800898, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         550 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00226, readdata = xxxxxxxx
ALUA = 7f80089c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00227, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         550 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00227, readdata = xxxxxxxx
ALUA = 7f80089c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         551 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8008a0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00228, readdata = xxxxxxxx
ALUA = 7f8008a0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         551 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00228, readdata = xxxxxxxx
ALUA = 7f8008a0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         552 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00228, readdata = xxxxxxxx
ALUA = 7f8008a4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00229, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         552 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00229, readdata = xxxxxxxx
ALUA = 7f8008a4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         553 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8008a8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0022a, readdata = xxxxxxxx
ALUA = 7f8008a8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         553 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0022a, readdata = xxxxxxxx
ALUA = 7f8008a8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         554 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0022a, readdata = xxxxxxxx
ALUA = 7f8008ac, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0022b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         554 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0022b, readdata = xxxxxxxx
ALUA = 7f8008ac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         555 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8008b0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0022c, readdata = xxxxxxxx
ALUA = 7f8008b0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         555 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0022c, readdata = xxxxxxxx
ALUA = 7f8008b0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         556 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0022c, readdata = xxxxxxxx
ALUA = 7f8008b4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0022d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         556 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0022d, readdata = xxxxxxxx
ALUA = 7f8008b4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         557 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8008b8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0022e, readdata = xxxxxxxx
ALUA = 7f8008b8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         557 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0022e, readdata = xxxxxxxx
ALUA = 7f8008b8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         558 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0022e, readdata = xxxxxxxx
ALUA = 7f8008bc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0022f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         558 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0022f, readdata = xxxxxxxx
ALUA = 7f8008bc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         559 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8008c0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00230, readdata = xxxxxxxx
ALUA = 7f8008c0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         559 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00230, readdata = xxxxxxxx
ALUA = 7f8008c0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         560 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00230, readdata = xxxxxxxx
ALUA = 7f8008c4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00231, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         560 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00231, readdata = xxxxxxxx
ALUA = 7f8008c4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         561 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8008c8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00232, readdata = xxxxxxxx
ALUA = 7f8008c8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         561 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00232, readdata = xxxxxxxx
ALUA = 7f8008c8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         562 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00232, readdata = xxxxxxxx
ALUA = 7f8008cc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00233, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         562 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00233, readdata = xxxxxxxx
ALUA = 7f8008cc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         563 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8008d0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00234, readdata = xxxxxxxx
ALUA = 7f8008d0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         563 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00234, readdata = xxxxxxxx
ALUA = 7f8008d0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         564 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00234, readdata = xxxxxxxx
ALUA = 7f8008d4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00235, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         564 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00235, readdata = xxxxxxxx
ALUA = 7f8008d4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         565 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8008d8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00236, readdata = xxxxxxxx
ALUA = 7f8008d8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         565 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00236, readdata = xxxxxxxx
ALUA = 7f8008d8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         566 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00236, readdata = xxxxxxxx
ALUA = 7f8008dc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00237, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         566 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00237, readdata = xxxxxxxx
ALUA = 7f8008dc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         567 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8008e0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00238, readdata = xxxxxxxx
ALUA = 7f8008e0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         567 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00238, readdata = xxxxxxxx
ALUA = 7f8008e0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         568 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00238, readdata = xxxxxxxx
ALUA = 7f8008e4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00239, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         568 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00239, readdata = xxxxxxxx
ALUA = 7f8008e4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         569 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8008e8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0023a, readdata = xxxxxxxx
ALUA = 7f8008e8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         569 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0023a, readdata = xxxxxxxx
ALUA = 7f8008e8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         570 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0023a, readdata = xxxxxxxx
ALUA = 7f8008ec, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0023b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         570 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0023b, readdata = xxxxxxxx
ALUA = 7f8008ec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         571 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8008f0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0023c, readdata = xxxxxxxx
ALUA = 7f8008f0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         571 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0023c, readdata = xxxxxxxx
ALUA = 7f8008f0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         572 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0023c, readdata = xxxxxxxx
ALUA = 7f8008f4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0023d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         572 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0023d, readdata = xxxxxxxx
ALUA = 7f8008f4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         573 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8008f8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0023e, readdata = xxxxxxxx
ALUA = 7f8008f8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         573 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0023e, readdata = xxxxxxxx
ALUA = 7f8008f8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         574 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0023e, readdata = xxxxxxxx
ALUA = 7f8008fc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0023f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         574 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0023f, readdata = xxxxxxxx
ALUA = 7f8008fc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         575 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800900, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00240, readdata = xxxxxxxx
ALUA = 7f800900, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         575 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00240, readdata = xxxxxxxx
ALUA = 7f800900, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         576 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00240, readdata = xxxxxxxx
ALUA = 7f800904, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00241, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         576 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00241, readdata = xxxxxxxx
ALUA = 7f800904, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         577 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800908, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00242, readdata = xxxxxxxx
ALUA = 7f800908, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         577 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00242, readdata = xxxxxxxx
ALUA = 7f800908, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         578 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00242, readdata = xxxxxxxx
ALUA = 7f80090c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00243, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         578 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00243, readdata = xxxxxxxx
ALUA = 7f80090c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         579 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800910, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00244, readdata = xxxxxxxx
ALUA = 7f800910, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         579 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00244, readdata = xxxxxxxx
ALUA = 7f800910, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         580 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00244, readdata = xxxxxxxx
ALUA = 7f800914, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00245, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         580 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00245, readdata = xxxxxxxx
ALUA = 7f800914, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         581 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800918, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00246, readdata = xxxxxxxx
ALUA = 7f800918, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         581 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00246, readdata = xxxxxxxx
ALUA = 7f800918, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         582 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00246, readdata = xxxxxxxx
ALUA = 7f80091c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00247, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         582 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00247, readdata = xxxxxxxx
ALUA = 7f80091c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         583 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800920, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00248, readdata = xxxxxxxx
ALUA = 7f800920, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         583 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00248, readdata = xxxxxxxx
ALUA = 7f800920, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         584 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00248, readdata = xxxxxxxx
ALUA = 7f800924, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00249, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         584 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00249, readdata = xxxxxxxx
ALUA = 7f800924, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         585 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800928, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0024a, readdata = xxxxxxxx
ALUA = 7f800928, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         585 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0024a, readdata = xxxxxxxx
ALUA = 7f800928, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         586 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0024a, readdata = xxxxxxxx
ALUA = 7f80092c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0024b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         586 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0024b, readdata = xxxxxxxx
ALUA = 7f80092c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         587 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800930, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0024c, readdata = xxxxxxxx
ALUA = 7f800930, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         587 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0024c, readdata = xxxxxxxx
ALUA = 7f800930, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         588 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0024c, readdata = xxxxxxxx
ALUA = 7f800934, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0024d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         588 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0024d, readdata = xxxxxxxx
ALUA = 7f800934, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         589 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800938, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0024e, readdata = xxxxxxxx
ALUA = 7f800938, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         589 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0024e, readdata = xxxxxxxx
ALUA = 7f800938, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         590 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0024e, readdata = xxxxxxxx
ALUA = 7f80093c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0024f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         590 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0024f, readdata = xxxxxxxx
ALUA = 7f80093c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         591 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800940, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00250, readdata = xxxxxxxx
ALUA = 7f800940, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         591 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00250, readdata = xxxxxxxx
ALUA = 7f800940, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         592 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00250, readdata = xxxxxxxx
ALUA = 7f800944, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00251, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         592 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00251, readdata = xxxxxxxx
ALUA = 7f800944, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         593 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800948, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00252, readdata = xxxxxxxx
ALUA = 7f800948, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         593 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00252, readdata = xxxxxxxx
ALUA = 7f800948, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         594 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00252, readdata = xxxxxxxx
ALUA = 7f80094c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00253, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         594 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00253, readdata = xxxxxxxx
ALUA = 7f80094c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         595 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800950, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00254, readdata = xxxxxxxx
ALUA = 7f800950, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         595 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00254, readdata = xxxxxxxx
ALUA = 7f800950, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         596 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00254, readdata = xxxxxxxx
ALUA = 7f800954, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00255, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         596 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00255, readdata = xxxxxxxx
ALUA = 7f800954, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         597 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800958, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00256, readdata = xxxxxxxx
ALUA = 7f800958, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         597 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00256, readdata = xxxxxxxx
ALUA = 7f800958, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         598 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00256, readdata = xxxxxxxx
ALUA = 7f80095c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00257, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         598 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00257, readdata = xxxxxxxx
ALUA = 7f80095c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         599 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800960, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00258, readdata = xxxxxxxx
ALUA = 7f800960, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         599 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00258, readdata = xxxxxxxx
ALUA = 7f800960, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         600 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00258, readdata = xxxxxxxx
ALUA = 7f800964, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00259, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         600 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00259, readdata = xxxxxxxx
ALUA = 7f800964, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         601 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800968, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0025a, readdata = xxxxxxxx
ALUA = 7f800968, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         601 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0025a, readdata = xxxxxxxx
ALUA = 7f800968, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         602 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0025a, readdata = xxxxxxxx
ALUA = 7f80096c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0025b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         602 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0025b, readdata = xxxxxxxx
ALUA = 7f80096c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         603 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800970, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0025c, readdata = xxxxxxxx
ALUA = 7f800970, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         603 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0025c, readdata = xxxxxxxx
ALUA = 7f800970, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         604 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0025c, readdata = xxxxxxxx
ALUA = 7f800974, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0025d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         604 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0025d, readdata = xxxxxxxx
ALUA = 7f800974, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         605 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800978, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0025e, readdata = xxxxxxxx
ALUA = 7f800978, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         605 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0025e, readdata = xxxxxxxx
ALUA = 7f800978, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         606 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0025e, readdata = xxxxxxxx
ALUA = 7f80097c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0025f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         606 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0025f, readdata = xxxxxxxx
ALUA = 7f80097c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         607 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800980, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00260, readdata = xxxxxxxx
ALUA = 7f800980, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         607 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00260, readdata = xxxxxxxx
ALUA = 7f800980, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         608 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00260, readdata = xxxxxxxx
ALUA = 7f800984, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00261, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         608 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00261, readdata = xxxxxxxx
ALUA = 7f800984, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         609 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800988, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00262, readdata = xxxxxxxx
ALUA = 7f800988, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         609 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00262, readdata = xxxxxxxx
ALUA = 7f800988, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         610 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00262, readdata = xxxxxxxx
ALUA = 7f80098c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00263, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         610 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00263, readdata = xxxxxxxx
ALUA = 7f80098c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         611 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800990, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00264, readdata = xxxxxxxx
ALUA = 7f800990, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         611 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00264, readdata = xxxxxxxx
ALUA = 7f800990, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         612 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00264, readdata = xxxxxxxx
ALUA = 7f800994, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00265, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         612 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00265, readdata = xxxxxxxx
ALUA = 7f800994, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         613 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800998, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00266, readdata = xxxxxxxx
ALUA = 7f800998, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         613 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00266, readdata = xxxxxxxx
ALUA = 7f800998, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         614 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00266, readdata = xxxxxxxx
ALUA = 7f80099c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00267, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         614 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00267, readdata = xxxxxxxx
ALUA = 7f80099c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         615 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8009a0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00268, readdata = xxxxxxxx
ALUA = 7f8009a0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         615 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00268, readdata = xxxxxxxx
ALUA = 7f8009a0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         616 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00268, readdata = xxxxxxxx
ALUA = 7f8009a4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00269, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         616 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00269, readdata = xxxxxxxx
ALUA = 7f8009a4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         617 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8009a8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0026a, readdata = xxxxxxxx
ALUA = 7f8009a8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         617 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0026a, readdata = xxxxxxxx
ALUA = 7f8009a8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         618 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0026a, readdata = xxxxxxxx
ALUA = 7f8009ac, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0026b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         618 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0026b, readdata = xxxxxxxx
ALUA = 7f8009ac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         619 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8009b0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0026c, readdata = xxxxxxxx
ALUA = 7f8009b0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         619 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0026c, readdata = xxxxxxxx
ALUA = 7f8009b0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         620 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0026c, readdata = xxxxxxxx
ALUA = 7f8009b4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0026d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         620 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0026d, readdata = xxxxxxxx
ALUA = 7f8009b4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         621 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8009b8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0026e, readdata = xxxxxxxx
ALUA = 7f8009b8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         621 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0026e, readdata = xxxxxxxx
ALUA = 7f8009b8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         622 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0026e, readdata = xxxxxxxx
ALUA = 7f8009bc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0026f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         622 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0026f, readdata = xxxxxxxx
ALUA = 7f8009bc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         623 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8009c0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00270, readdata = xxxxxxxx
ALUA = 7f8009c0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         623 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00270, readdata = xxxxxxxx
ALUA = 7f8009c0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         624 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00270, readdata = xxxxxxxx
ALUA = 7f8009c4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00271, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         624 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00271, readdata = xxxxxxxx
ALUA = 7f8009c4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         625 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8009c8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00272, readdata = xxxxxxxx
ALUA = 7f8009c8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         625 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00272, readdata = xxxxxxxx
ALUA = 7f8009c8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         626 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00272, readdata = xxxxxxxx
ALUA = 7f8009cc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00273, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         626 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00273, readdata = xxxxxxxx
ALUA = 7f8009cc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         627 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8009d0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00274, readdata = xxxxxxxx
ALUA = 7f8009d0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         627 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00274, readdata = xxxxxxxx
ALUA = 7f8009d0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         628 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00274, readdata = xxxxxxxx
ALUA = 7f8009d4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00275, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         628 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00275, readdata = xxxxxxxx
ALUA = 7f8009d4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         629 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8009d8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00276, readdata = xxxxxxxx
ALUA = 7f8009d8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         629 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00276, readdata = xxxxxxxx
ALUA = 7f8009d8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         630 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00276, readdata = xxxxxxxx
ALUA = 7f8009dc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00277, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         630 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00277, readdata = xxxxxxxx
ALUA = 7f8009dc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         631 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8009e0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00278, readdata = xxxxxxxx
ALUA = 7f8009e0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         631 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00278, readdata = xxxxxxxx
ALUA = 7f8009e0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         632 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00278, readdata = xxxxxxxx
ALUA = 7f8009e4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00279, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         632 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00279, readdata = xxxxxxxx
ALUA = 7f8009e4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         633 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8009e8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0027a, readdata = xxxxxxxx
ALUA = 7f8009e8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         633 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0027a, readdata = xxxxxxxx
ALUA = 7f8009e8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         634 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0027a, readdata = xxxxxxxx
ALUA = 7f8009ec, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0027b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         634 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0027b, readdata = xxxxxxxx
ALUA = 7f8009ec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         635 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8009f0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0027c, readdata = xxxxxxxx
ALUA = 7f8009f0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         635 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0027c, readdata = xxxxxxxx
ALUA = 7f8009f0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         636 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0027c, readdata = xxxxxxxx
ALUA = 7f8009f4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0027d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         636 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0027d, readdata = xxxxxxxx
ALUA = 7f8009f4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         637 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8009f8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0027e, readdata = xxxxxxxx
ALUA = 7f8009f8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         637 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0027e, readdata = xxxxxxxx
ALUA = 7f8009f8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         638 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0027e, readdata = xxxxxxxx
ALUA = 7f8009fc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0027f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         638 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0027f, readdata = xxxxxxxx
ALUA = 7f8009fc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         639 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800a00, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00280, readdata = xxxxxxxx
ALUA = 7f800a00, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         639 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00280, readdata = xxxxxxxx
ALUA = 7f800a00, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         640 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00280, readdata = xxxxxxxx
ALUA = 7f800a04, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00281, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         640 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00281, readdata = xxxxxxxx
ALUA = 7f800a04, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         641 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800a08, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00282, readdata = xxxxxxxx
ALUA = 7f800a08, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         641 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00282, readdata = xxxxxxxx
ALUA = 7f800a08, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         642 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00282, readdata = xxxxxxxx
ALUA = 7f800a0c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00283, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         642 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00283, readdata = xxxxxxxx
ALUA = 7f800a0c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         643 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800a10, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00284, readdata = xxxxxxxx
ALUA = 7f800a10, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         643 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00284, readdata = xxxxxxxx
ALUA = 7f800a10, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         644 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00284, readdata = xxxxxxxx
ALUA = 7f800a14, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00285, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         644 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00285, readdata = xxxxxxxx
ALUA = 7f800a14, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         645 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800a18, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00286, readdata = xxxxxxxx
ALUA = 7f800a18, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         645 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00286, readdata = xxxxxxxx
ALUA = 7f800a18, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         646 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00286, readdata = xxxxxxxx
ALUA = 7f800a1c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00287, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         646 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00287, readdata = xxxxxxxx
ALUA = 7f800a1c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         647 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800a20, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00288, readdata = xxxxxxxx
ALUA = 7f800a20, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         647 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00288, readdata = xxxxxxxx
ALUA = 7f800a20, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         648 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00288, readdata = xxxxxxxx
ALUA = 7f800a24, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00289, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         648 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00289, readdata = xxxxxxxx
ALUA = 7f800a24, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         649 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800a28, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0028a, readdata = xxxxxxxx
ALUA = 7f800a28, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         649 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0028a, readdata = xxxxxxxx
ALUA = 7f800a28, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         650 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0028a, readdata = xxxxxxxx
ALUA = 7f800a2c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0028b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         650 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0028b, readdata = xxxxxxxx
ALUA = 7f800a2c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         651 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800a30, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0028c, readdata = xxxxxxxx
ALUA = 7f800a30, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         651 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0028c, readdata = xxxxxxxx
ALUA = 7f800a30, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         652 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0028c, readdata = xxxxxxxx
ALUA = 7f800a34, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0028d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         652 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0028d, readdata = xxxxxxxx
ALUA = 7f800a34, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         653 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800a38, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0028e, readdata = xxxxxxxx
ALUA = 7f800a38, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         653 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0028e, readdata = xxxxxxxx
ALUA = 7f800a38, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         654 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0028e, readdata = xxxxxxxx
ALUA = 7f800a3c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0028f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         654 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0028f, readdata = xxxxxxxx
ALUA = 7f800a3c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         655 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800a40, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00290, readdata = xxxxxxxx
ALUA = 7f800a40, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         655 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00290, readdata = xxxxxxxx
ALUA = 7f800a40, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         656 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00290, readdata = xxxxxxxx
ALUA = 7f800a44, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00291, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         656 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00291, readdata = xxxxxxxx
ALUA = 7f800a44, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         657 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800a48, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00292, readdata = xxxxxxxx
ALUA = 7f800a48, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         657 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00292, readdata = xxxxxxxx
ALUA = 7f800a48, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         658 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00292, readdata = xxxxxxxx
ALUA = 7f800a4c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00293, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         658 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00293, readdata = xxxxxxxx
ALUA = 7f800a4c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         659 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800a50, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00294, readdata = xxxxxxxx
ALUA = 7f800a50, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         659 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00294, readdata = xxxxxxxx
ALUA = 7f800a50, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         660 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00294, readdata = xxxxxxxx
ALUA = 7f800a54, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00295, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         660 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00295, readdata = xxxxxxxx
ALUA = 7f800a54, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         661 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800a58, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00296, readdata = xxxxxxxx
ALUA = 7f800a58, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         661 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00296, readdata = xxxxxxxx
ALUA = 7f800a58, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         662 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00296, readdata = xxxxxxxx
ALUA = 7f800a5c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00297, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         662 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00297, readdata = xxxxxxxx
ALUA = 7f800a5c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         663 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800a60, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00298, readdata = xxxxxxxx
ALUA = 7f800a60, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         663 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00298, readdata = xxxxxxxx
ALUA = 7f800a60, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         664 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00298, readdata = xxxxxxxx
ALUA = 7f800a64, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00299, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         664 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00299, readdata = xxxxxxxx
ALUA = 7f800a64, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         665 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800a68, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0029a, readdata = xxxxxxxx
ALUA = 7f800a68, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         665 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0029a, readdata = xxxxxxxx
ALUA = 7f800a68, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         666 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0029a, readdata = xxxxxxxx
ALUA = 7f800a6c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0029b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         666 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0029b, readdata = xxxxxxxx
ALUA = 7f800a6c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         667 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800a70, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0029c, readdata = xxxxxxxx
ALUA = 7f800a70, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         667 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0029c, readdata = xxxxxxxx
ALUA = 7f800a70, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         668 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0029c, readdata = xxxxxxxx
ALUA = 7f800a74, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0029d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         668 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0029d, readdata = xxxxxxxx
ALUA = 7f800a74, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         669 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800a78, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0029e, readdata = xxxxxxxx
ALUA = 7f800a78, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         669 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0029e, readdata = xxxxxxxx
ALUA = 7f800a78, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         670 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0029e, readdata = xxxxxxxx
ALUA = 7f800a7c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0029f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         670 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0029f, readdata = xxxxxxxx
ALUA = 7f800a7c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         671 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800a80, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002a0, readdata = xxxxxxxx
ALUA = 7f800a80, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         671 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002a0, readdata = xxxxxxxx
ALUA = 7f800a80, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         672 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe002a0, readdata = xxxxxxxx
ALUA = 7f800a84, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002a1, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         672 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002a1, readdata = xxxxxxxx
ALUA = 7f800a84, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         673 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800a88, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002a2, readdata = xxxxxxxx
ALUA = 7f800a88, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         673 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002a2, readdata = xxxxxxxx
ALUA = 7f800a88, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         674 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe002a2, readdata = xxxxxxxx
ALUA = 7f800a8c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002a3, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         674 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002a3, readdata = xxxxxxxx
ALUA = 7f800a8c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         675 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800a90, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002a4, readdata = xxxxxxxx
ALUA = 7f800a90, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         675 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002a4, readdata = xxxxxxxx
ALUA = 7f800a90, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         676 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe002a4, readdata = xxxxxxxx
ALUA = 7f800a94, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002a5, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         676 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002a5, readdata = xxxxxxxx
ALUA = 7f800a94, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         677 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800a98, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002a6, readdata = xxxxxxxx
ALUA = 7f800a98, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         677 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002a6, readdata = xxxxxxxx
ALUA = 7f800a98, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         678 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe002a6, readdata = xxxxxxxx
ALUA = 7f800a9c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002a7, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         678 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002a7, readdata = xxxxxxxx
ALUA = 7f800a9c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         679 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800aa0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002a8, readdata = xxxxxxxx
ALUA = 7f800aa0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         679 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002a8, readdata = xxxxxxxx
ALUA = 7f800aa0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         680 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe002a8, readdata = xxxxxxxx
ALUA = 7f800aa4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002a9, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         680 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002a9, readdata = xxxxxxxx
ALUA = 7f800aa4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         681 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800aa8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002aa, readdata = xxxxxxxx
ALUA = 7f800aa8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         681 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002aa, readdata = xxxxxxxx
ALUA = 7f800aa8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         682 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe002aa, readdata = xxxxxxxx
ALUA = 7f800aac, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002ab, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         682 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002ab, readdata = xxxxxxxx
ALUA = 7f800aac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         683 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800ab0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002ac, readdata = xxxxxxxx
ALUA = 7f800ab0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         683 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002ac, readdata = xxxxxxxx
ALUA = 7f800ab0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         684 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe002ac, readdata = xxxxxxxx
ALUA = 7f800ab4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002ad, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         684 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002ad, readdata = xxxxxxxx
ALUA = 7f800ab4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         685 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800ab8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002ae, readdata = xxxxxxxx
ALUA = 7f800ab8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         685 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002ae, readdata = xxxxxxxx
ALUA = 7f800ab8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         686 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe002ae, readdata = xxxxxxxx
ALUA = 7f800abc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002af, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         686 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002af, readdata = xxxxxxxx
ALUA = 7f800abc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         687 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800ac0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002b0, readdata = xxxxxxxx
ALUA = 7f800ac0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         687 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002b0, readdata = xxxxxxxx
ALUA = 7f800ac0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         688 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe002b0, readdata = xxxxxxxx
ALUA = 7f800ac4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002b1, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         688 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002b1, readdata = xxxxxxxx
ALUA = 7f800ac4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         689 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800ac8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002b2, readdata = xxxxxxxx
ALUA = 7f800ac8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         689 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002b2, readdata = xxxxxxxx
ALUA = 7f800ac8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         690 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe002b2, readdata = xxxxxxxx
ALUA = 7f800acc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002b3, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         690 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002b3, readdata = xxxxxxxx
ALUA = 7f800acc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         691 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800ad0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002b4, readdata = xxxxxxxx
ALUA = 7f800ad0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         691 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002b4, readdata = xxxxxxxx
ALUA = 7f800ad0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         692 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe002b4, readdata = xxxxxxxx
ALUA = 7f800ad4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002b5, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         692 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002b5, readdata = xxxxxxxx
ALUA = 7f800ad4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         693 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800ad8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002b6, readdata = xxxxxxxx
ALUA = 7f800ad8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         693 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002b6, readdata = xxxxxxxx
ALUA = 7f800ad8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         694 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe002b6, readdata = xxxxxxxx
ALUA = 7f800adc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002b7, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         694 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002b7, readdata = xxxxxxxx
ALUA = 7f800adc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         695 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800ae0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002b8, readdata = xxxxxxxx
ALUA = 7f800ae0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         695 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002b8, readdata = xxxxxxxx
ALUA = 7f800ae0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         696 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe002b8, readdata = xxxxxxxx
ALUA = 7f800ae4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002b9, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         696 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002b9, readdata = xxxxxxxx
ALUA = 7f800ae4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         697 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800ae8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002ba, readdata = xxxxxxxx
ALUA = 7f800ae8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         697 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002ba, readdata = xxxxxxxx
ALUA = 7f800ae8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         698 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe002ba, readdata = xxxxxxxx
ALUA = 7f800aec, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002bb, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         698 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002bb, readdata = xxxxxxxx
ALUA = 7f800aec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         699 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800af0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002bc, readdata = xxxxxxxx
ALUA = 7f800af0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         699 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002bc, readdata = xxxxxxxx
ALUA = 7f800af0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         700 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe002bc, readdata = xxxxxxxx
ALUA = 7f800af4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002bd, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         700 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002bd, readdata = xxxxxxxx
ALUA = 7f800af4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         701 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800af8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002be, readdata = xxxxxxxx
ALUA = 7f800af8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         701 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002be, readdata = xxxxxxxx
ALUA = 7f800af8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         702 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe002be, readdata = xxxxxxxx
ALUA = 7f800afc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002bf, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         702 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002bf, readdata = xxxxxxxx
ALUA = 7f800afc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         703 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800b00, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002c0, readdata = xxxxxxxx
ALUA = 7f800b00, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         703 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002c0, readdata = xxxxxxxx
ALUA = 7f800b00, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         704 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe002c0, readdata = xxxxxxxx
ALUA = 7f800b04, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002c1, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         704 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002c1, readdata = xxxxxxxx
ALUA = 7f800b04, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         705 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800b08, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002c2, readdata = xxxxxxxx
ALUA = 7f800b08, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         705 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002c2, readdata = xxxxxxxx
ALUA = 7f800b08, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         706 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe002c2, readdata = xxxxxxxx
ALUA = 7f800b0c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002c3, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         706 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002c3, readdata = xxxxxxxx
ALUA = 7f800b0c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         707 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800b10, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002c4, readdata = xxxxxxxx
ALUA = 7f800b10, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         707 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002c4, readdata = xxxxxxxx
ALUA = 7f800b10, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         708 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe002c4, readdata = xxxxxxxx
ALUA = 7f800b14, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002c5, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         708 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002c5, readdata = xxxxxxxx
ALUA = 7f800b14, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         709 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800b18, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002c6, readdata = xxxxxxxx
ALUA = 7f800b18, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         709 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002c6, readdata = xxxxxxxx
ALUA = 7f800b18, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         710 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe002c6, readdata = xxxxxxxx
ALUA = 7f800b1c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002c7, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         710 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002c7, readdata = xxxxxxxx
ALUA = 7f800b1c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         711 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800b20, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002c8, readdata = xxxxxxxx
ALUA = 7f800b20, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         711 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002c8, readdata = xxxxxxxx
ALUA = 7f800b20, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         712 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe002c8, readdata = xxxxxxxx
ALUA = 7f800b24, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002c9, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         712 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002c9, readdata = xxxxxxxx
ALUA = 7f800b24, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         713 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800b28, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002ca, readdata = xxxxxxxx
ALUA = 7f800b28, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         713 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002ca, readdata = xxxxxxxx
ALUA = 7f800b28, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         714 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe002ca, readdata = xxxxxxxx
ALUA = 7f800b2c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002cb, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         714 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002cb, readdata = xxxxxxxx
ALUA = 7f800b2c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         715 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800b30, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002cc, readdata = xxxxxxxx
ALUA = 7f800b30, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         715 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002cc, readdata = xxxxxxxx
ALUA = 7f800b30, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         716 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe002cc, readdata = xxxxxxxx
ALUA = 7f800b34, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002cd, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         716 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002cd, readdata = xxxxxxxx
ALUA = 7f800b34, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         717 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800b38, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002ce, readdata = xxxxxxxx
ALUA = 7f800b38, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         717 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002ce, readdata = xxxxxxxx
ALUA = 7f800b38, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         718 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe002ce, readdata = xxxxxxxx
ALUA = 7f800b3c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002cf, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         718 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002cf, readdata = xxxxxxxx
ALUA = 7f800b3c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         719 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800b40, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002d0, readdata = xxxxxxxx
ALUA = 7f800b40, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         719 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002d0, readdata = xxxxxxxx
ALUA = 7f800b40, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         720 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe002d0, readdata = xxxxxxxx
ALUA = 7f800b44, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002d1, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         720 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002d1, readdata = xxxxxxxx
ALUA = 7f800b44, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         721 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800b48, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002d2, readdata = xxxxxxxx
ALUA = 7f800b48, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         721 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002d2, readdata = xxxxxxxx
ALUA = 7f800b48, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         722 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe002d2, readdata = xxxxxxxx
ALUA = 7f800b4c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002d3, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         722 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002d3, readdata = xxxxxxxx
ALUA = 7f800b4c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         723 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800b50, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002d4, readdata = xxxxxxxx
ALUA = 7f800b50, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         723 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002d4, readdata = xxxxxxxx
ALUA = 7f800b50, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         724 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe002d4, readdata = xxxxxxxx
ALUA = 7f800b54, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002d5, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         724 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002d5, readdata = xxxxxxxx
ALUA = 7f800b54, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         725 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800b58, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002d6, readdata = xxxxxxxx
ALUA = 7f800b58, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         725 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002d6, readdata = xxxxxxxx
ALUA = 7f800b58, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         726 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe002d6, readdata = xxxxxxxx
ALUA = 7f800b5c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002d7, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         726 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002d7, readdata = xxxxxxxx
ALUA = 7f800b5c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         727 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800b60, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002d8, readdata = xxxxxxxx
ALUA = 7f800b60, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         727 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002d8, readdata = xxxxxxxx
ALUA = 7f800b60, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         728 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe002d8, readdata = xxxxxxxx
ALUA = 7f800b64, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002d9, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         728 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002d9, readdata = xxxxxxxx
ALUA = 7f800b64, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         729 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800b68, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002da, readdata = xxxxxxxx
ALUA = 7f800b68, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         729 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002da, readdata = xxxxxxxx
ALUA = 7f800b68, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         730 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe002da, readdata = xxxxxxxx
ALUA = 7f800b6c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002db, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         730 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002db, readdata = xxxxxxxx
ALUA = 7f800b6c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         731 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800b70, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002dc, readdata = xxxxxxxx
ALUA = 7f800b70, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         731 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002dc, readdata = xxxxxxxx
ALUA = 7f800b70, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         732 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe002dc, readdata = xxxxxxxx
ALUA = 7f800b74, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002dd, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         732 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002dd, readdata = xxxxxxxx
ALUA = 7f800b74, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         733 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800b78, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002de, readdata = xxxxxxxx
ALUA = 7f800b78, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         733 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002de, readdata = xxxxxxxx
ALUA = 7f800b78, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         734 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe002de, readdata = xxxxxxxx
ALUA = 7f800b7c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002df, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         734 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002df, readdata = xxxxxxxx
ALUA = 7f800b7c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         735 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800b80, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002e0, readdata = xxxxxxxx
ALUA = 7f800b80, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         735 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002e0, readdata = xxxxxxxx
ALUA = 7f800b80, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         736 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe002e0, readdata = xxxxxxxx
ALUA = 7f800b84, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002e1, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         736 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002e1, readdata = xxxxxxxx
ALUA = 7f800b84, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         737 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800b88, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002e2, readdata = xxxxxxxx
ALUA = 7f800b88, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         737 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002e2, readdata = xxxxxxxx
ALUA = 7f800b88, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         738 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe002e2, readdata = xxxxxxxx
ALUA = 7f800b8c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002e3, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         738 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002e3, readdata = xxxxxxxx
ALUA = 7f800b8c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         739 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800b90, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002e4, readdata = xxxxxxxx
ALUA = 7f800b90, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         739 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002e4, readdata = xxxxxxxx
ALUA = 7f800b90, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         740 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe002e4, readdata = xxxxxxxx
ALUA = 7f800b94, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002e5, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         740 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002e5, readdata = xxxxxxxx
ALUA = 7f800b94, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         741 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800b98, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002e6, readdata = xxxxxxxx
ALUA = 7f800b98, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         741 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002e6, readdata = xxxxxxxx
ALUA = 7f800b98, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         742 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe002e6, readdata = xxxxxxxx
ALUA = 7f800b9c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002e7, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         742 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002e7, readdata = xxxxxxxx
ALUA = 7f800b9c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         743 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800ba0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002e8, readdata = xxxxxxxx
ALUA = 7f800ba0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         743 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002e8, readdata = xxxxxxxx
ALUA = 7f800ba0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         744 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe002e8, readdata = xxxxxxxx
ALUA = 7f800ba4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002e9, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         744 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002e9, readdata = xxxxxxxx
ALUA = 7f800ba4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         745 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800ba8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002ea, readdata = xxxxxxxx
ALUA = 7f800ba8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         745 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002ea, readdata = xxxxxxxx
ALUA = 7f800ba8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         746 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe002ea, readdata = xxxxxxxx
ALUA = 7f800bac, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002eb, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         746 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002eb, readdata = xxxxxxxx
ALUA = 7f800bac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         747 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800bb0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002ec, readdata = xxxxxxxx
ALUA = 7f800bb0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         747 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002ec, readdata = xxxxxxxx
ALUA = 7f800bb0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         748 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe002ec, readdata = xxxxxxxx
ALUA = 7f800bb4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002ed, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         748 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002ed, readdata = xxxxxxxx
ALUA = 7f800bb4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         749 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800bb8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002ee, readdata = xxxxxxxx
ALUA = 7f800bb8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         749 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002ee, readdata = xxxxxxxx
ALUA = 7f800bb8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         750 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe002ee, readdata = xxxxxxxx
ALUA = 7f800bbc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002ef, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         750 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002ef, readdata = xxxxxxxx
ALUA = 7f800bbc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         751 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800bc0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002f0, readdata = xxxxxxxx
ALUA = 7f800bc0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         751 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002f0, readdata = xxxxxxxx
ALUA = 7f800bc0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         752 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe002f0, readdata = xxxxxxxx
ALUA = 7f800bc4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002f1, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         752 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002f1, readdata = xxxxxxxx
ALUA = 7f800bc4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         753 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800bc8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002f2, readdata = xxxxxxxx
ALUA = 7f800bc8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         753 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002f2, readdata = xxxxxxxx
ALUA = 7f800bc8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         754 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe002f2, readdata = xxxxxxxx
ALUA = 7f800bcc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002f3, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         754 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002f3, readdata = xxxxxxxx
ALUA = 7f800bcc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         755 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800bd0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002f4, readdata = xxxxxxxx
ALUA = 7f800bd0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         755 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002f4, readdata = xxxxxxxx
ALUA = 7f800bd0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         756 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe002f4, readdata = xxxxxxxx
ALUA = 7f800bd4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002f5, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         756 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002f5, readdata = xxxxxxxx
ALUA = 7f800bd4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         757 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800bd8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002f6, readdata = xxxxxxxx
ALUA = 7f800bd8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         757 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002f6, readdata = xxxxxxxx
ALUA = 7f800bd8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         758 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe002f6, readdata = xxxxxxxx
ALUA = 7f800bdc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002f7, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         758 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002f7, readdata = xxxxxxxx
ALUA = 7f800bdc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         759 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800be0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002f8, readdata = xxxxxxxx
ALUA = 7f800be0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         759 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002f8, readdata = xxxxxxxx
ALUA = 7f800be0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         760 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe002f8, readdata = xxxxxxxx
ALUA = 7f800be4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002f9, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         760 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002f9, readdata = xxxxxxxx
ALUA = 7f800be4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         761 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800be8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002fa, readdata = xxxxxxxx
ALUA = 7f800be8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         761 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002fa, readdata = xxxxxxxx
ALUA = 7f800be8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         762 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe002fa, readdata = xxxxxxxx
ALUA = 7f800bec, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002fb, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         762 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002fb, readdata = xxxxxxxx
ALUA = 7f800bec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         763 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800bf0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002fc, readdata = xxxxxxxx
ALUA = 7f800bf0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         763 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002fc, readdata = xxxxxxxx
ALUA = 7f800bf0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         764 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe002fc, readdata = xxxxxxxx
ALUA = 7f800bf4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002fd, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         764 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002fd, readdata = xxxxxxxx
ALUA = 7f800bf4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         765 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800bf8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002fe, readdata = xxxxxxxx
ALUA = 7f800bf8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         765 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002fe, readdata = xxxxxxxx
ALUA = 7f800bf8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         766 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe002fe, readdata = xxxxxxxx
ALUA = 7f800bfc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe002ff, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         766 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe002ff, readdata = xxxxxxxx
ALUA = 7f800bfc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         767 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800c00, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00300, readdata = xxxxxxxx
ALUA = 7f800c00, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         767 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00300, readdata = xxxxxxxx
ALUA = 7f800c00, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         768 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00300, readdata = xxxxxxxx
ALUA = 7f800c04, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00301, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         768 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00301, readdata = xxxxxxxx
ALUA = 7f800c04, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         769 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800c08, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00302, readdata = xxxxxxxx
ALUA = 7f800c08, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         769 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00302, readdata = xxxxxxxx
ALUA = 7f800c08, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         770 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00302, readdata = xxxxxxxx
ALUA = 7f800c0c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00303, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         770 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00303, readdata = xxxxxxxx
ALUA = 7f800c0c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         771 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800c10, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00304, readdata = xxxxxxxx
ALUA = 7f800c10, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         771 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00304, readdata = xxxxxxxx
ALUA = 7f800c10, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         772 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00304, readdata = xxxxxxxx
ALUA = 7f800c14, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00305, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         772 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00305, readdata = xxxxxxxx
ALUA = 7f800c14, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         773 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800c18, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00306, readdata = xxxxxxxx
ALUA = 7f800c18, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         773 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00306, readdata = xxxxxxxx
ALUA = 7f800c18, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         774 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00306, readdata = xxxxxxxx
ALUA = 7f800c1c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00307, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         774 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00307, readdata = xxxxxxxx
ALUA = 7f800c1c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         775 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800c20, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00308, readdata = xxxxxxxx
ALUA = 7f800c20, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         775 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00308, readdata = xxxxxxxx
ALUA = 7f800c20, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         776 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00308, readdata = xxxxxxxx
ALUA = 7f800c24, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00309, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         776 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00309, readdata = xxxxxxxx
ALUA = 7f800c24, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         777 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800c28, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0030a, readdata = xxxxxxxx
ALUA = 7f800c28, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         777 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0030a, readdata = xxxxxxxx
ALUA = 7f800c28, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         778 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0030a, readdata = xxxxxxxx
ALUA = 7f800c2c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0030b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         778 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0030b, readdata = xxxxxxxx
ALUA = 7f800c2c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         779 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800c30, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0030c, readdata = xxxxxxxx
ALUA = 7f800c30, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         779 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0030c, readdata = xxxxxxxx
ALUA = 7f800c30, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         780 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0030c, readdata = xxxxxxxx
ALUA = 7f800c34, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0030d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         780 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0030d, readdata = xxxxxxxx
ALUA = 7f800c34, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         781 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800c38, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0030e, readdata = xxxxxxxx
ALUA = 7f800c38, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         781 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0030e, readdata = xxxxxxxx
ALUA = 7f800c38, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         782 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0030e, readdata = xxxxxxxx
ALUA = 7f800c3c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0030f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         782 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0030f, readdata = xxxxxxxx
ALUA = 7f800c3c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         783 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800c40, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00310, readdata = xxxxxxxx
ALUA = 7f800c40, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         783 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00310, readdata = xxxxxxxx
ALUA = 7f800c40, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         784 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00310, readdata = xxxxxxxx
ALUA = 7f800c44, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00311, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         784 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00311, readdata = xxxxxxxx
ALUA = 7f800c44, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         785 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800c48, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00312, readdata = xxxxxxxx
ALUA = 7f800c48, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         785 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00312, readdata = xxxxxxxx
ALUA = 7f800c48, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         786 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00312, readdata = xxxxxxxx
ALUA = 7f800c4c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00313, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         786 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00313, readdata = xxxxxxxx
ALUA = 7f800c4c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         787 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800c50, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00314, readdata = xxxxxxxx
ALUA = 7f800c50, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         787 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00314, readdata = xxxxxxxx
ALUA = 7f800c50, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         788 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00314, readdata = xxxxxxxx
ALUA = 7f800c54, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00315, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         788 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00315, readdata = xxxxxxxx
ALUA = 7f800c54, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         789 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800c58, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00316, readdata = xxxxxxxx
ALUA = 7f800c58, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         789 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00316, readdata = xxxxxxxx
ALUA = 7f800c58, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         790 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00316, readdata = xxxxxxxx
ALUA = 7f800c5c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00317, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         790 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00317, readdata = xxxxxxxx
ALUA = 7f800c5c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         791 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800c60, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00318, readdata = xxxxxxxx
ALUA = 7f800c60, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         791 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00318, readdata = xxxxxxxx
ALUA = 7f800c60, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         792 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00318, readdata = xxxxxxxx
ALUA = 7f800c64, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00319, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         792 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00319, readdata = xxxxxxxx
ALUA = 7f800c64, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         793 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800c68, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0031a, readdata = xxxxxxxx
ALUA = 7f800c68, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         793 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0031a, readdata = xxxxxxxx
ALUA = 7f800c68, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         794 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0031a, readdata = xxxxxxxx
ALUA = 7f800c6c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0031b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         794 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0031b, readdata = xxxxxxxx
ALUA = 7f800c6c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         795 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800c70, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0031c, readdata = xxxxxxxx
ALUA = 7f800c70, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         795 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0031c, readdata = xxxxxxxx
ALUA = 7f800c70, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         796 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0031c, readdata = xxxxxxxx
ALUA = 7f800c74, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0031d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         796 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0031d, readdata = xxxxxxxx
ALUA = 7f800c74, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         797 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800c78, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0031e, readdata = xxxxxxxx
ALUA = 7f800c78, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         797 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0031e, readdata = xxxxxxxx
ALUA = 7f800c78, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         798 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0031e, readdata = xxxxxxxx
ALUA = 7f800c7c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0031f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         798 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0031f, readdata = xxxxxxxx
ALUA = 7f800c7c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         799 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800c80, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00320, readdata = xxxxxxxx
ALUA = 7f800c80, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         799 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00320, readdata = xxxxxxxx
ALUA = 7f800c80, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         800 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00320, readdata = xxxxxxxx
ALUA = 7f800c84, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00321, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         800 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00321, readdata = xxxxxxxx
ALUA = 7f800c84, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         801 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800c88, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00322, readdata = xxxxxxxx
ALUA = 7f800c88, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         801 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00322, readdata = xxxxxxxx
ALUA = 7f800c88, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         802 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00322, readdata = xxxxxxxx
ALUA = 7f800c8c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00323, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         802 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00323, readdata = xxxxxxxx
ALUA = 7f800c8c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         803 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800c90, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00324, readdata = xxxxxxxx
ALUA = 7f800c90, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         803 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00324, readdata = xxxxxxxx
ALUA = 7f800c90, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         804 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00324, readdata = xxxxxxxx
ALUA = 7f800c94, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00325, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         804 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00325, readdata = xxxxxxxx
ALUA = 7f800c94, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         805 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800c98, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00326, readdata = xxxxxxxx
ALUA = 7f800c98, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         805 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00326, readdata = xxxxxxxx
ALUA = 7f800c98, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         806 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00326, readdata = xxxxxxxx
ALUA = 7f800c9c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00327, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         806 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00327, readdata = xxxxxxxx
ALUA = 7f800c9c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         807 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800ca0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00328, readdata = xxxxxxxx
ALUA = 7f800ca0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         807 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00328, readdata = xxxxxxxx
ALUA = 7f800ca0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         808 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00328, readdata = xxxxxxxx
ALUA = 7f800ca4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00329, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         808 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00329, readdata = xxxxxxxx
ALUA = 7f800ca4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         809 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800ca8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0032a, readdata = xxxxxxxx
ALUA = 7f800ca8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         809 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0032a, readdata = xxxxxxxx
ALUA = 7f800ca8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         810 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0032a, readdata = xxxxxxxx
ALUA = 7f800cac, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0032b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         810 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0032b, readdata = xxxxxxxx
ALUA = 7f800cac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         811 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800cb0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0032c, readdata = xxxxxxxx
ALUA = 7f800cb0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         811 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0032c, readdata = xxxxxxxx
ALUA = 7f800cb0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         812 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0032c, readdata = xxxxxxxx
ALUA = 7f800cb4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0032d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         812 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0032d, readdata = xxxxxxxx
ALUA = 7f800cb4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         813 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800cb8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0032e, readdata = xxxxxxxx
ALUA = 7f800cb8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         813 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0032e, readdata = xxxxxxxx
ALUA = 7f800cb8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         814 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0032e, readdata = xxxxxxxx
ALUA = 7f800cbc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0032f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         814 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0032f, readdata = xxxxxxxx
ALUA = 7f800cbc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         815 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800cc0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00330, readdata = xxxxxxxx
ALUA = 7f800cc0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         815 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00330, readdata = xxxxxxxx
ALUA = 7f800cc0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         816 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00330, readdata = xxxxxxxx
ALUA = 7f800cc4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00331, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         816 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00331, readdata = xxxxxxxx
ALUA = 7f800cc4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         817 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800cc8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00332, readdata = xxxxxxxx
ALUA = 7f800cc8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         817 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00332, readdata = xxxxxxxx
ALUA = 7f800cc8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         818 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00332, readdata = xxxxxxxx
ALUA = 7f800ccc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00333, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         818 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00333, readdata = xxxxxxxx
ALUA = 7f800ccc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         819 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800cd0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00334, readdata = xxxxxxxx
ALUA = 7f800cd0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         819 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00334, readdata = xxxxxxxx
ALUA = 7f800cd0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         820 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00334, readdata = xxxxxxxx
ALUA = 7f800cd4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00335, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         820 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00335, readdata = xxxxxxxx
ALUA = 7f800cd4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         821 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800cd8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00336, readdata = xxxxxxxx
ALUA = 7f800cd8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         821 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00336, readdata = xxxxxxxx
ALUA = 7f800cd8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         822 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00336, readdata = xxxxxxxx
ALUA = 7f800cdc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00337, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         822 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00337, readdata = xxxxxxxx
ALUA = 7f800cdc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         823 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800ce0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00338, readdata = xxxxxxxx
ALUA = 7f800ce0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         823 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00338, readdata = xxxxxxxx
ALUA = 7f800ce0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         824 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00338, readdata = xxxxxxxx
ALUA = 7f800ce4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00339, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         824 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00339, readdata = xxxxxxxx
ALUA = 7f800ce4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         825 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800ce8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0033a, readdata = xxxxxxxx
ALUA = 7f800ce8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         825 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0033a, readdata = xxxxxxxx
ALUA = 7f800ce8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         826 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0033a, readdata = xxxxxxxx
ALUA = 7f800cec, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0033b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         826 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0033b, readdata = xxxxxxxx
ALUA = 7f800cec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         827 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800cf0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0033c, readdata = xxxxxxxx
ALUA = 7f800cf0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         827 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0033c, readdata = xxxxxxxx
ALUA = 7f800cf0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         828 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0033c, readdata = xxxxxxxx
ALUA = 7f800cf4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0033d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         828 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0033d, readdata = xxxxxxxx
ALUA = 7f800cf4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         829 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800cf8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0033e, readdata = xxxxxxxx
ALUA = 7f800cf8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         829 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0033e, readdata = xxxxxxxx
ALUA = 7f800cf8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         830 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0033e, readdata = xxxxxxxx
ALUA = 7f800cfc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0033f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         830 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0033f, readdata = xxxxxxxx
ALUA = 7f800cfc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         831 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800d00, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00340, readdata = xxxxxxxx
ALUA = 7f800d00, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         831 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00340, readdata = xxxxxxxx
ALUA = 7f800d00, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         832 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00340, readdata = xxxxxxxx
ALUA = 7f800d04, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00341, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         832 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00341, readdata = xxxxxxxx
ALUA = 7f800d04, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         833 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800d08, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00342, readdata = xxxxxxxx
ALUA = 7f800d08, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         833 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00342, readdata = xxxxxxxx
ALUA = 7f800d08, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         834 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00342, readdata = xxxxxxxx
ALUA = 7f800d0c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00343, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         834 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00343, readdata = xxxxxxxx
ALUA = 7f800d0c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         835 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800d10, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00344, readdata = xxxxxxxx
ALUA = 7f800d10, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         835 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00344, readdata = xxxxxxxx
ALUA = 7f800d10, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         836 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00344, readdata = xxxxxxxx
ALUA = 7f800d14, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00345, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         836 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00345, readdata = xxxxxxxx
ALUA = 7f800d14, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         837 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800d18, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00346, readdata = xxxxxxxx
ALUA = 7f800d18, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         837 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00346, readdata = xxxxxxxx
ALUA = 7f800d18, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         838 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00346, readdata = xxxxxxxx
ALUA = 7f800d1c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00347, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         838 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00347, readdata = xxxxxxxx
ALUA = 7f800d1c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         839 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800d20, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00348, readdata = xxxxxxxx
ALUA = 7f800d20, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         839 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00348, readdata = xxxxxxxx
ALUA = 7f800d20, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         840 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00348, readdata = xxxxxxxx
ALUA = 7f800d24, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00349, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         840 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00349, readdata = xxxxxxxx
ALUA = 7f800d24, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         841 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800d28, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0034a, readdata = xxxxxxxx
ALUA = 7f800d28, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         841 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0034a, readdata = xxxxxxxx
ALUA = 7f800d28, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         842 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0034a, readdata = xxxxxxxx
ALUA = 7f800d2c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0034b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         842 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0034b, readdata = xxxxxxxx
ALUA = 7f800d2c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         843 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800d30, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0034c, readdata = xxxxxxxx
ALUA = 7f800d30, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         843 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0034c, readdata = xxxxxxxx
ALUA = 7f800d30, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         844 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0034c, readdata = xxxxxxxx
ALUA = 7f800d34, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0034d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         844 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0034d, readdata = xxxxxxxx
ALUA = 7f800d34, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         845 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800d38, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0034e, readdata = xxxxxxxx
ALUA = 7f800d38, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         845 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0034e, readdata = xxxxxxxx
ALUA = 7f800d38, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         846 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0034e, readdata = xxxxxxxx
ALUA = 7f800d3c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0034f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         846 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0034f, readdata = xxxxxxxx
ALUA = 7f800d3c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         847 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800d40, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00350, readdata = xxxxxxxx
ALUA = 7f800d40, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         847 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00350, readdata = xxxxxxxx
ALUA = 7f800d40, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         848 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00350, readdata = xxxxxxxx
ALUA = 7f800d44, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00351, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         848 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00351, readdata = xxxxxxxx
ALUA = 7f800d44, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         849 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800d48, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00352, readdata = xxxxxxxx
ALUA = 7f800d48, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         849 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00352, readdata = xxxxxxxx
ALUA = 7f800d48, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         850 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00352, readdata = xxxxxxxx
ALUA = 7f800d4c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00353, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         850 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00353, readdata = xxxxxxxx
ALUA = 7f800d4c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         851 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800d50, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00354, readdata = xxxxxxxx
ALUA = 7f800d50, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         851 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00354, readdata = xxxxxxxx
ALUA = 7f800d50, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         852 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00354, readdata = xxxxxxxx
ALUA = 7f800d54, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00355, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         852 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00355, readdata = xxxxxxxx
ALUA = 7f800d54, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         853 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800d58, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00356, readdata = xxxxxxxx
ALUA = 7f800d58, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         853 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00356, readdata = xxxxxxxx
ALUA = 7f800d58, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         854 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00356, readdata = xxxxxxxx
ALUA = 7f800d5c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00357, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         854 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00357, readdata = xxxxxxxx
ALUA = 7f800d5c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         855 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800d60, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00358, readdata = xxxxxxxx
ALUA = 7f800d60, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         855 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00358, readdata = xxxxxxxx
ALUA = 7f800d60, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         856 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00358, readdata = xxxxxxxx
ALUA = 7f800d64, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00359, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         856 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00359, readdata = xxxxxxxx
ALUA = 7f800d64, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         857 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800d68, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0035a, readdata = xxxxxxxx
ALUA = 7f800d68, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         857 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0035a, readdata = xxxxxxxx
ALUA = 7f800d68, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         858 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0035a, readdata = xxxxxxxx
ALUA = 7f800d6c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0035b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         858 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0035b, readdata = xxxxxxxx
ALUA = 7f800d6c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         859 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800d70, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0035c, readdata = xxxxxxxx
ALUA = 7f800d70, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         859 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0035c, readdata = xxxxxxxx
ALUA = 7f800d70, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         860 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0035c, readdata = xxxxxxxx
ALUA = 7f800d74, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0035d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         860 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0035d, readdata = xxxxxxxx
ALUA = 7f800d74, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         861 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800d78, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0035e, readdata = xxxxxxxx
ALUA = 7f800d78, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         861 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0035e, readdata = xxxxxxxx
ALUA = 7f800d78, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         862 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0035e, readdata = xxxxxxxx
ALUA = 7f800d7c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0035f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         862 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0035f, readdata = xxxxxxxx
ALUA = 7f800d7c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         863 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800d80, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00360, readdata = xxxxxxxx
ALUA = 7f800d80, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         863 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00360, readdata = xxxxxxxx
ALUA = 7f800d80, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         864 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00360, readdata = xxxxxxxx
ALUA = 7f800d84, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00361, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         864 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00361, readdata = xxxxxxxx
ALUA = 7f800d84, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         865 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800d88, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00362, readdata = xxxxxxxx
ALUA = 7f800d88, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         865 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00362, readdata = xxxxxxxx
ALUA = 7f800d88, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         866 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00362, readdata = xxxxxxxx
ALUA = 7f800d8c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00363, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         866 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00363, readdata = xxxxxxxx
ALUA = 7f800d8c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         867 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800d90, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00364, readdata = xxxxxxxx
ALUA = 7f800d90, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         867 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00364, readdata = xxxxxxxx
ALUA = 7f800d90, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         868 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00364, readdata = xxxxxxxx
ALUA = 7f800d94, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00365, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         868 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00365, readdata = xxxxxxxx
ALUA = 7f800d94, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         869 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800d98, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00366, readdata = xxxxxxxx
ALUA = 7f800d98, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         869 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00366, readdata = xxxxxxxx
ALUA = 7f800d98, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         870 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00366, readdata = xxxxxxxx
ALUA = 7f800d9c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00367, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         870 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00367, readdata = xxxxxxxx
ALUA = 7f800d9c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         871 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800da0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00368, readdata = xxxxxxxx
ALUA = 7f800da0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         871 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00368, readdata = xxxxxxxx
ALUA = 7f800da0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         872 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00368, readdata = xxxxxxxx
ALUA = 7f800da4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00369, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         872 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00369, readdata = xxxxxxxx
ALUA = 7f800da4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         873 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800da8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0036a, readdata = xxxxxxxx
ALUA = 7f800da8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         873 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0036a, readdata = xxxxxxxx
ALUA = 7f800da8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         874 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0036a, readdata = xxxxxxxx
ALUA = 7f800dac, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0036b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         874 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0036b, readdata = xxxxxxxx
ALUA = 7f800dac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         875 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800db0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0036c, readdata = xxxxxxxx
ALUA = 7f800db0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         875 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0036c, readdata = xxxxxxxx
ALUA = 7f800db0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         876 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0036c, readdata = xxxxxxxx
ALUA = 7f800db4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0036d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         876 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0036d, readdata = xxxxxxxx
ALUA = 7f800db4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         877 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800db8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0036e, readdata = xxxxxxxx
ALUA = 7f800db8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         877 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0036e, readdata = xxxxxxxx
ALUA = 7f800db8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         878 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0036e, readdata = xxxxxxxx
ALUA = 7f800dbc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0036f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         878 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0036f, readdata = xxxxxxxx
ALUA = 7f800dbc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         879 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800dc0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00370, readdata = xxxxxxxx
ALUA = 7f800dc0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         879 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00370, readdata = xxxxxxxx
ALUA = 7f800dc0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         880 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00370, readdata = xxxxxxxx
ALUA = 7f800dc4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00371, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         880 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00371, readdata = xxxxxxxx
ALUA = 7f800dc4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         881 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800dc8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00372, readdata = xxxxxxxx
ALUA = 7f800dc8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         881 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00372, readdata = xxxxxxxx
ALUA = 7f800dc8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         882 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00372, readdata = xxxxxxxx
ALUA = 7f800dcc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00373, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         882 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00373, readdata = xxxxxxxx
ALUA = 7f800dcc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         883 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800dd0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00374, readdata = xxxxxxxx
ALUA = 7f800dd0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         883 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00374, readdata = xxxxxxxx
ALUA = 7f800dd0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         884 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00374, readdata = xxxxxxxx
ALUA = 7f800dd4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00375, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         884 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00375, readdata = xxxxxxxx
ALUA = 7f800dd4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         885 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800dd8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00376, readdata = xxxxxxxx
ALUA = 7f800dd8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         885 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00376, readdata = xxxxxxxx
ALUA = 7f800dd8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         886 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00376, readdata = xxxxxxxx
ALUA = 7f800ddc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00377, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         886 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00377, readdata = xxxxxxxx
ALUA = 7f800ddc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         887 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800de0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00378, readdata = xxxxxxxx
ALUA = 7f800de0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         887 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00378, readdata = xxxxxxxx
ALUA = 7f800de0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         888 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00378, readdata = xxxxxxxx
ALUA = 7f800de4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00379, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         888 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00379, readdata = xxxxxxxx
ALUA = 7f800de4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         889 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800de8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0037a, readdata = xxxxxxxx
ALUA = 7f800de8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         889 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0037a, readdata = xxxxxxxx
ALUA = 7f800de8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         890 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0037a, readdata = xxxxxxxx
ALUA = 7f800dec, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0037b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         890 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0037b, readdata = xxxxxxxx
ALUA = 7f800dec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         891 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800df0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0037c, readdata = xxxxxxxx
ALUA = 7f800df0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         891 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0037c, readdata = xxxxxxxx
ALUA = 7f800df0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         892 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0037c, readdata = xxxxxxxx
ALUA = 7f800df4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0037d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         892 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0037d, readdata = xxxxxxxx
ALUA = 7f800df4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         893 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800df8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0037e, readdata = xxxxxxxx
ALUA = 7f800df8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         893 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0037e, readdata = xxxxxxxx
ALUA = 7f800df8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         894 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0037e, readdata = xxxxxxxx
ALUA = 7f800dfc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0037f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         894 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0037f, readdata = xxxxxxxx
ALUA = 7f800dfc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         895 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800e00, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00380, readdata = xxxxxxxx
ALUA = 7f800e00, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         895 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00380, readdata = xxxxxxxx
ALUA = 7f800e00, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         896 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00380, readdata = xxxxxxxx
ALUA = 7f800e04, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00381, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         896 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00381, readdata = xxxxxxxx
ALUA = 7f800e04, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         897 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800e08, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00382, readdata = xxxxxxxx
ALUA = 7f800e08, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         897 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00382, readdata = xxxxxxxx
ALUA = 7f800e08, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         898 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00382, readdata = xxxxxxxx
ALUA = 7f800e0c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00383, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         898 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00383, readdata = xxxxxxxx
ALUA = 7f800e0c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         899 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800e10, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00384, readdata = xxxxxxxx
ALUA = 7f800e10, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         899 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00384, readdata = xxxxxxxx
ALUA = 7f800e10, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         900 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00384, readdata = xxxxxxxx
ALUA = 7f800e14, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00385, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         900 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00385, readdata = xxxxxxxx
ALUA = 7f800e14, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         901 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800e18, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00386, readdata = xxxxxxxx
ALUA = 7f800e18, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         901 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00386, readdata = xxxxxxxx
ALUA = 7f800e18, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         902 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00386, readdata = xxxxxxxx
ALUA = 7f800e1c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00387, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         902 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00387, readdata = xxxxxxxx
ALUA = 7f800e1c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         903 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800e20, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00388, readdata = xxxxxxxx
ALUA = 7f800e20, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         903 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00388, readdata = xxxxxxxx
ALUA = 7f800e20, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         904 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00388, readdata = xxxxxxxx
ALUA = 7f800e24, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00389, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         904 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00389, readdata = xxxxxxxx
ALUA = 7f800e24, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         905 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800e28, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0038a, readdata = xxxxxxxx
ALUA = 7f800e28, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         905 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0038a, readdata = xxxxxxxx
ALUA = 7f800e28, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         906 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0038a, readdata = xxxxxxxx
ALUA = 7f800e2c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0038b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         906 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0038b, readdata = xxxxxxxx
ALUA = 7f800e2c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         907 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800e30, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0038c, readdata = xxxxxxxx
ALUA = 7f800e30, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         907 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0038c, readdata = xxxxxxxx
ALUA = 7f800e30, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         908 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0038c, readdata = xxxxxxxx
ALUA = 7f800e34, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0038d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         908 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0038d, readdata = xxxxxxxx
ALUA = 7f800e34, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         909 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800e38, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0038e, readdata = xxxxxxxx
ALUA = 7f800e38, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         909 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0038e, readdata = xxxxxxxx
ALUA = 7f800e38, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         910 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0038e, readdata = xxxxxxxx
ALUA = 7f800e3c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0038f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         910 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0038f, readdata = xxxxxxxx
ALUA = 7f800e3c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         911 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800e40, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00390, readdata = xxxxxxxx
ALUA = 7f800e40, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         911 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00390, readdata = xxxxxxxx
ALUA = 7f800e40, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         912 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00390, readdata = xxxxxxxx
ALUA = 7f800e44, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00391, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         912 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00391, readdata = xxxxxxxx
ALUA = 7f800e44, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         913 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800e48, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00392, readdata = xxxxxxxx
ALUA = 7f800e48, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         913 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00392, readdata = xxxxxxxx
ALUA = 7f800e48, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         914 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00392, readdata = xxxxxxxx
ALUA = 7f800e4c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00393, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         914 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00393, readdata = xxxxxxxx
ALUA = 7f800e4c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         915 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800e50, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00394, readdata = xxxxxxxx
ALUA = 7f800e50, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         915 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00394, readdata = xxxxxxxx
ALUA = 7f800e50, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         916 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00394, readdata = xxxxxxxx
ALUA = 7f800e54, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00395, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         916 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00395, readdata = xxxxxxxx
ALUA = 7f800e54, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         917 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800e58, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00396, readdata = xxxxxxxx
ALUA = 7f800e58, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         917 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00396, readdata = xxxxxxxx
ALUA = 7f800e58, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         918 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00396, readdata = xxxxxxxx
ALUA = 7f800e5c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00397, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         918 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00397, readdata = xxxxxxxx
ALUA = 7f800e5c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         919 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800e60, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00398, readdata = xxxxxxxx
ALUA = 7f800e60, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         919 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00398, readdata = xxxxxxxx
ALUA = 7f800e60, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         920 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00398, readdata = xxxxxxxx
ALUA = 7f800e64, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00399, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         920 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00399, readdata = xxxxxxxx
ALUA = 7f800e64, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         921 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800e68, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0039a, readdata = xxxxxxxx
ALUA = 7f800e68, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         921 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0039a, readdata = xxxxxxxx
ALUA = 7f800e68, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         922 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0039a, readdata = xxxxxxxx
ALUA = 7f800e6c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0039b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         922 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0039b, readdata = xxxxxxxx
ALUA = 7f800e6c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         923 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800e70, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0039c, readdata = xxxxxxxx
ALUA = 7f800e70, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         923 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0039c, readdata = xxxxxxxx
ALUA = 7f800e70, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         924 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0039c, readdata = xxxxxxxx
ALUA = 7f800e74, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0039d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         924 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0039d, readdata = xxxxxxxx
ALUA = 7f800e74, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         925 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800e78, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0039e, readdata = xxxxxxxx
ALUA = 7f800e78, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         925 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0039e, readdata = xxxxxxxx
ALUA = 7f800e78, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         926 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0039e, readdata = xxxxxxxx
ALUA = 7f800e7c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0039f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         926 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0039f, readdata = xxxxxxxx
ALUA = 7f800e7c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         927 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800e80, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003a0, readdata = xxxxxxxx
ALUA = 7f800e80, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         927 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003a0, readdata = xxxxxxxx
ALUA = 7f800e80, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         928 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe003a0, readdata = xxxxxxxx
ALUA = 7f800e84, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003a1, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         928 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003a1, readdata = xxxxxxxx
ALUA = 7f800e84, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         929 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800e88, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003a2, readdata = xxxxxxxx
ALUA = 7f800e88, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         929 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003a2, readdata = xxxxxxxx
ALUA = 7f800e88, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         930 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe003a2, readdata = xxxxxxxx
ALUA = 7f800e8c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003a3, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         930 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003a3, readdata = xxxxxxxx
ALUA = 7f800e8c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         931 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800e90, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003a4, readdata = xxxxxxxx
ALUA = 7f800e90, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         931 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003a4, readdata = xxxxxxxx
ALUA = 7f800e90, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         932 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe003a4, readdata = xxxxxxxx
ALUA = 7f800e94, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003a5, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         932 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003a5, readdata = xxxxxxxx
ALUA = 7f800e94, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         933 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800e98, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003a6, readdata = xxxxxxxx
ALUA = 7f800e98, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         933 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003a6, readdata = xxxxxxxx
ALUA = 7f800e98, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         934 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe003a6, readdata = xxxxxxxx
ALUA = 7f800e9c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003a7, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         934 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003a7, readdata = xxxxxxxx
ALUA = 7f800e9c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         935 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800ea0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003a8, readdata = xxxxxxxx
ALUA = 7f800ea0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         935 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003a8, readdata = xxxxxxxx
ALUA = 7f800ea0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         936 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe003a8, readdata = xxxxxxxx
ALUA = 7f800ea4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003a9, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         936 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003a9, readdata = xxxxxxxx
ALUA = 7f800ea4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         937 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800ea8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003aa, readdata = xxxxxxxx
ALUA = 7f800ea8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         937 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003aa, readdata = xxxxxxxx
ALUA = 7f800ea8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         938 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe003aa, readdata = xxxxxxxx
ALUA = 7f800eac, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003ab, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         938 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003ab, readdata = xxxxxxxx
ALUA = 7f800eac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         939 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800eb0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003ac, readdata = xxxxxxxx
ALUA = 7f800eb0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         939 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003ac, readdata = xxxxxxxx
ALUA = 7f800eb0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         940 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe003ac, readdata = xxxxxxxx
ALUA = 7f800eb4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003ad, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         940 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003ad, readdata = xxxxxxxx
ALUA = 7f800eb4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         941 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800eb8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003ae, readdata = xxxxxxxx
ALUA = 7f800eb8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         941 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003ae, readdata = xxxxxxxx
ALUA = 7f800eb8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         942 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe003ae, readdata = xxxxxxxx
ALUA = 7f800ebc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003af, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         942 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003af, readdata = xxxxxxxx
ALUA = 7f800ebc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         943 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800ec0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003b0, readdata = xxxxxxxx
ALUA = 7f800ec0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         943 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003b0, readdata = xxxxxxxx
ALUA = 7f800ec0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         944 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe003b0, readdata = xxxxxxxx
ALUA = 7f800ec4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003b1, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         944 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003b1, readdata = xxxxxxxx
ALUA = 7f800ec4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         945 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800ec8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003b2, readdata = xxxxxxxx
ALUA = 7f800ec8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         945 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003b2, readdata = xxxxxxxx
ALUA = 7f800ec8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         946 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe003b2, readdata = xxxxxxxx
ALUA = 7f800ecc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003b3, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         946 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003b3, readdata = xxxxxxxx
ALUA = 7f800ecc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         947 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800ed0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003b4, readdata = xxxxxxxx
ALUA = 7f800ed0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         947 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003b4, readdata = xxxxxxxx
ALUA = 7f800ed0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         948 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe003b4, readdata = xxxxxxxx
ALUA = 7f800ed4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003b5, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         948 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003b5, readdata = xxxxxxxx
ALUA = 7f800ed4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         949 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800ed8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003b6, readdata = xxxxxxxx
ALUA = 7f800ed8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         949 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003b6, readdata = xxxxxxxx
ALUA = 7f800ed8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         950 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe003b6, readdata = xxxxxxxx
ALUA = 7f800edc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003b7, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         950 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003b7, readdata = xxxxxxxx
ALUA = 7f800edc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         951 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800ee0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003b8, readdata = xxxxxxxx
ALUA = 7f800ee0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         951 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003b8, readdata = xxxxxxxx
ALUA = 7f800ee0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         952 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe003b8, readdata = xxxxxxxx
ALUA = 7f800ee4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003b9, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         952 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003b9, readdata = xxxxxxxx
ALUA = 7f800ee4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         953 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800ee8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003ba, readdata = xxxxxxxx
ALUA = 7f800ee8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         953 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003ba, readdata = xxxxxxxx
ALUA = 7f800ee8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         954 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe003ba, readdata = xxxxxxxx
ALUA = 7f800eec, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003bb, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         954 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003bb, readdata = xxxxxxxx
ALUA = 7f800eec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         955 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800ef0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003bc, readdata = xxxxxxxx
ALUA = 7f800ef0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         955 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003bc, readdata = xxxxxxxx
ALUA = 7f800ef0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         956 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe003bc, readdata = xxxxxxxx
ALUA = 7f800ef4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003bd, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         956 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003bd, readdata = xxxxxxxx
ALUA = 7f800ef4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         957 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800ef8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003be, readdata = xxxxxxxx
ALUA = 7f800ef8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         957 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003be, readdata = xxxxxxxx
ALUA = 7f800ef8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         958 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe003be, readdata = xxxxxxxx
ALUA = 7f800efc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003bf, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         958 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003bf, readdata = xxxxxxxx
ALUA = 7f800efc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         959 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800f00, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003c0, readdata = xxxxxxxx
ALUA = 7f800f00, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         959 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003c0, readdata = xxxxxxxx
ALUA = 7f800f00, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         960 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe003c0, readdata = xxxxxxxx
ALUA = 7f800f04, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003c1, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         960 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003c1, readdata = xxxxxxxx
ALUA = 7f800f04, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         961 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800f08, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003c2, readdata = xxxxxxxx
ALUA = 7f800f08, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         961 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003c2, readdata = xxxxxxxx
ALUA = 7f800f08, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         962 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe003c2, readdata = xxxxxxxx
ALUA = 7f800f0c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003c3, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         962 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003c3, readdata = xxxxxxxx
ALUA = 7f800f0c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         963 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800f10, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003c4, readdata = xxxxxxxx
ALUA = 7f800f10, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         963 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003c4, readdata = xxxxxxxx
ALUA = 7f800f10, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         964 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe003c4, readdata = xxxxxxxx
ALUA = 7f800f14, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003c5, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         964 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003c5, readdata = xxxxxxxx
ALUA = 7f800f14, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         965 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800f18, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003c6, readdata = xxxxxxxx
ALUA = 7f800f18, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         965 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003c6, readdata = xxxxxxxx
ALUA = 7f800f18, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         966 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe003c6, readdata = xxxxxxxx
ALUA = 7f800f1c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003c7, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         966 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003c7, readdata = xxxxxxxx
ALUA = 7f800f1c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         967 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800f20, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003c8, readdata = xxxxxxxx
ALUA = 7f800f20, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         967 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003c8, readdata = xxxxxxxx
ALUA = 7f800f20, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         968 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe003c8, readdata = xxxxxxxx
ALUA = 7f800f24, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003c9, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         968 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003c9, readdata = xxxxxxxx
ALUA = 7f800f24, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         969 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800f28, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003ca, readdata = xxxxxxxx
ALUA = 7f800f28, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         969 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003ca, readdata = xxxxxxxx
ALUA = 7f800f28, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         970 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe003ca, readdata = xxxxxxxx
ALUA = 7f800f2c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003cb, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         970 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003cb, readdata = xxxxxxxx
ALUA = 7f800f2c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         971 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800f30, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003cc, readdata = xxxxxxxx
ALUA = 7f800f30, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         971 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003cc, readdata = xxxxxxxx
ALUA = 7f800f30, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         972 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe003cc, readdata = xxxxxxxx
ALUA = 7f800f34, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003cd, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         972 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003cd, readdata = xxxxxxxx
ALUA = 7f800f34, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         973 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800f38, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003ce, readdata = xxxxxxxx
ALUA = 7f800f38, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         973 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003ce, readdata = xxxxxxxx
ALUA = 7f800f38, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         974 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe003ce, readdata = xxxxxxxx
ALUA = 7f800f3c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003cf, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         974 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003cf, readdata = xxxxxxxx
ALUA = 7f800f3c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         975 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800f40, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003d0, readdata = xxxxxxxx
ALUA = 7f800f40, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         975 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003d0, readdata = xxxxxxxx
ALUA = 7f800f40, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         976 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe003d0, readdata = xxxxxxxx
ALUA = 7f800f44, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003d1, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         976 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003d1, readdata = xxxxxxxx
ALUA = 7f800f44, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         977 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800f48, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003d2, readdata = xxxxxxxx
ALUA = 7f800f48, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         977 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003d2, readdata = xxxxxxxx
ALUA = 7f800f48, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         978 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe003d2, readdata = xxxxxxxx
ALUA = 7f800f4c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003d3, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         978 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003d3, readdata = xxxxxxxx
ALUA = 7f800f4c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         979 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800f50, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003d4, readdata = xxxxxxxx
ALUA = 7f800f50, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         979 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003d4, readdata = xxxxxxxx
ALUA = 7f800f50, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         980 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe003d4, readdata = xxxxxxxx
ALUA = 7f800f54, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003d5, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         980 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003d5, readdata = xxxxxxxx
ALUA = 7f800f54, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         981 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800f58, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003d6, readdata = xxxxxxxx
ALUA = 7f800f58, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         981 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003d6, readdata = xxxxxxxx
ALUA = 7f800f58, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         982 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe003d6, readdata = xxxxxxxx
ALUA = 7f800f5c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003d7, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         982 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003d7, readdata = xxxxxxxx
ALUA = 7f800f5c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         983 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800f60, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003d8, readdata = xxxxxxxx
ALUA = 7f800f60, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         983 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003d8, readdata = xxxxxxxx
ALUA = 7f800f60, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         984 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe003d8, readdata = xxxxxxxx
ALUA = 7f800f64, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003d9, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         984 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003d9, readdata = xxxxxxxx
ALUA = 7f800f64, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         985 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800f68, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003da, readdata = xxxxxxxx
ALUA = 7f800f68, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         985 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003da, readdata = xxxxxxxx
ALUA = 7f800f68, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         986 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe003da, readdata = xxxxxxxx
ALUA = 7f800f6c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003db, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         986 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003db, readdata = xxxxxxxx
ALUA = 7f800f6c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         987 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800f70, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003dc, readdata = xxxxxxxx
ALUA = 7f800f70, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         987 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003dc, readdata = xxxxxxxx
ALUA = 7f800f70, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         988 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe003dc, readdata = xxxxxxxx
ALUA = 7f800f74, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003dd, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         988 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003dd, readdata = xxxxxxxx
ALUA = 7f800f74, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         989 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800f78, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003de, readdata = xxxxxxxx
ALUA = 7f800f78, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         989 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003de, readdata = xxxxxxxx
ALUA = 7f800f78, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         990 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe003de, readdata = xxxxxxxx
ALUA = 7f800f7c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003df, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         990 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003df, readdata = xxxxxxxx
ALUA = 7f800f7c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         991 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800f80, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003e0, readdata = xxxxxxxx
ALUA = 7f800f80, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         991 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003e0, readdata = xxxxxxxx
ALUA = 7f800f80, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         992 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe003e0, readdata = xxxxxxxx
ALUA = 7f800f84, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003e1, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         992 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003e1, readdata = xxxxxxxx
ALUA = 7f800f84, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         993 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800f88, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003e2, readdata = xxxxxxxx
ALUA = 7f800f88, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         993 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003e2, readdata = xxxxxxxx
ALUA = 7f800f88, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         994 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe003e2, readdata = xxxxxxxx
ALUA = 7f800f8c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003e3, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         994 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003e3, readdata = xxxxxxxx
ALUA = 7f800f8c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         995 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800f90, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003e4, readdata = xxxxxxxx
ALUA = 7f800f90, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         995 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003e4, readdata = xxxxxxxx
ALUA = 7f800f90, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         996 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe003e4, readdata = xxxxxxxx
ALUA = 7f800f94, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003e5, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         996 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003e5, readdata = xxxxxxxx
ALUA = 7f800f94, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         997 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800f98, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003e6, readdata = xxxxxxxx
ALUA = 7f800f98, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         997 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003e6, readdata = xxxxxxxx
ALUA = 7f800f98, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         998 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe003e6, readdata = xxxxxxxx
ALUA = 7f800f9c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003e7, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         998 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003e7, readdata = xxxxxxxx
ALUA = 7f800f9c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------         999 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800fa0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003e8, readdata = xxxxxxxx
ALUA = 7f800fa0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction         999 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003e8, readdata = xxxxxxxx
ALUA = 7f800fa0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1000 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe003e8, readdata = xxxxxxxx
ALUA = 7f800fa4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003e9, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1000 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003e9, readdata = xxxxxxxx
ALUA = 7f800fa4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1001 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800fa8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003ea, readdata = xxxxxxxx
ALUA = 7f800fa8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1001 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003ea, readdata = xxxxxxxx
ALUA = 7f800fa8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1002 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe003ea, readdata = xxxxxxxx
ALUA = 7f800fac, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003eb, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1002 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003eb, readdata = xxxxxxxx
ALUA = 7f800fac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1003 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800fb0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003ec, readdata = xxxxxxxx
ALUA = 7f800fb0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1003 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003ec, readdata = xxxxxxxx
ALUA = 7f800fb0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1004 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe003ec, readdata = xxxxxxxx
ALUA = 7f800fb4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003ed, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1004 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003ed, readdata = xxxxxxxx
ALUA = 7f800fb4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1005 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800fb8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003ee, readdata = xxxxxxxx
ALUA = 7f800fb8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1005 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003ee, readdata = xxxxxxxx
ALUA = 7f800fb8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1006 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe003ee, readdata = xxxxxxxx
ALUA = 7f800fbc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003ef, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1006 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003ef, readdata = xxxxxxxx
ALUA = 7f800fbc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1007 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800fc0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003f0, readdata = xxxxxxxx
ALUA = 7f800fc0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1007 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003f0, readdata = xxxxxxxx
ALUA = 7f800fc0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1008 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe003f0, readdata = xxxxxxxx
ALUA = 7f800fc4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003f1, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1008 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003f1, readdata = xxxxxxxx
ALUA = 7f800fc4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1009 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800fc8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003f2, readdata = xxxxxxxx
ALUA = 7f800fc8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1009 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003f2, readdata = xxxxxxxx
ALUA = 7f800fc8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1010 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe003f2, readdata = xxxxxxxx
ALUA = 7f800fcc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003f3, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1010 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003f3, readdata = xxxxxxxx
ALUA = 7f800fcc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1011 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800fd0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003f4, readdata = xxxxxxxx
ALUA = 7f800fd0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1011 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003f4, readdata = xxxxxxxx
ALUA = 7f800fd0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1012 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe003f4, readdata = xxxxxxxx
ALUA = 7f800fd4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003f5, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1012 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003f5, readdata = xxxxxxxx
ALUA = 7f800fd4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1013 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800fd8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003f6, readdata = xxxxxxxx
ALUA = 7f800fd8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1013 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003f6, readdata = xxxxxxxx
ALUA = 7f800fd8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1014 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe003f6, readdata = xxxxxxxx
ALUA = 7f800fdc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003f7, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1014 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003f7, readdata = xxxxxxxx
ALUA = 7f800fdc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1015 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800fe0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003f8, readdata = xxxxxxxx
ALUA = 7f800fe0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1015 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003f8, readdata = xxxxxxxx
ALUA = 7f800fe0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1016 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe003f8, readdata = xxxxxxxx
ALUA = 7f800fe4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003f9, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1016 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003f9, readdata = xxxxxxxx
ALUA = 7f800fe4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1017 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800fe8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003fa, readdata = xxxxxxxx
ALUA = 7f800fe8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1017 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003fa, readdata = xxxxxxxx
ALUA = 7f800fe8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1018 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe003fa, readdata = xxxxxxxx
ALUA = 7f800fec, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003fb, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1018 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003fb, readdata = xxxxxxxx
ALUA = 7f800fec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1019 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800ff0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003fc, readdata = xxxxxxxx
ALUA = 7f800ff0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1019 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003fc, readdata = xxxxxxxx
ALUA = 7f800ff0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1020 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe003fc, readdata = xxxxxxxx
ALUA = 7f800ff4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003fd, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1020 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003fd, readdata = xxxxxxxx
ALUA = 7f800ff4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1021 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f800ff8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003fe, readdata = xxxxxxxx
ALUA = 7f800ff8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1021 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003fe, readdata = xxxxxxxx
ALUA = 7f800ff8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1022 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe003fe, readdata = xxxxxxxx
ALUA = 7f800ffc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe003ff, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1022 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe003ff, readdata = xxxxxxxx
ALUA = 7f800ffc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1023 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801000, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00400, readdata = xxxxxxxx
ALUA = 7f801000, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1023 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00400, readdata = xxxxxxxx
ALUA = 7f801000, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1024 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00400, readdata = xxxxxxxx
ALUA = 7f801004, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00401, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1024 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00401, readdata = xxxxxxxx
ALUA = 7f801004, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1025 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801008, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00402, readdata = xxxxxxxx
ALUA = 7f801008, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1025 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00402, readdata = xxxxxxxx
ALUA = 7f801008, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1026 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00402, readdata = xxxxxxxx
ALUA = 7f80100c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00403, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1026 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00403, readdata = xxxxxxxx
ALUA = 7f80100c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1027 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801010, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00404, readdata = xxxxxxxx
ALUA = 7f801010, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1027 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00404, readdata = xxxxxxxx
ALUA = 7f801010, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1028 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00404, readdata = xxxxxxxx
ALUA = 7f801014, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00405, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1028 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00405, readdata = xxxxxxxx
ALUA = 7f801014, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1029 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801018, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00406, readdata = xxxxxxxx
ALUA = 7f801018, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1029 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00406, readdata = xxxxxxxx
ALUA = 7f801018, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1030 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00406, readdata = xxxxxxxx
ALUA = 7f80101c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00407, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1030 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00407, readdata = xxxxxxxx
ALUA = 7f80101c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1031 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801020, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00408, readdata = xxxxxxxx
ALUA = 7f801020, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1031 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00408, readdata = xxxxxxxx
ALUA = 7f801020, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1032 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00408, readdata = xxxxxxxx
ALUA = 7f801024, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00409, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1032 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00409, readdata = xxxxxxxx
ALUA = 7f801024, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1033 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801028, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0040a, readdata = xxxxxxxx
ALUA = 7f801028, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1033 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0040a, readdata = xxxxxxxx
ALUA = 7f801028, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1034 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0040a, readdata = xxxxxxxx
ALUA = 7f80102c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0040b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1034 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0040b, readdata = xxxxxxxx
ALUA = 7f80102c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1035 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801030, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0040c, readdata = xxxxxxxx
ALUA = 7f801030, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1035 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0040c, readdata = xxxxxxxx
ALUA = 7f801030, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1036 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0040c, readdata = xxxxxxxx
ALUA = 7f801034, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0040d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1036 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0040d, readdata = xxxxxxxx
ALUA = 7f801034, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1037 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801038, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0040e, readdata = xxxxxxxx
ALUA = 7f801038, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1037 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0040e, readdata = xxxxxxxx
ALUA = 7f801038, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1038 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0040e, readdata = xxxxxxxx
ALUA = 7f80103c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0040f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1038 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0040f, readdata = xxxxxxxx
ALUA = 7f80103c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1039 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801040, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00410, readdata = xxxxxxxx
ALUA = 7f801040, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1039 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00410, readdata = xxxxxxxx
ALUA = 7f801040, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1040 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00410, readdata = xxxxxxxx
ALUA = 7f801044, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00411, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1040 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00411, readdata = xxxxxxxx
ALUA = 7f801044, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1041 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801048, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00412, readdata = xxxxxxxx
ALUA = 7f801048, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1041 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00412, readdata = xxxxxxxx
ALUA = 7f801048, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1042 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00412, readdata = xxxxxxxx
ALUA = 7f80104c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00413, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1042 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00413, readdata = xxxxxxxx
ALUA = 7f80104c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1043 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801050, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00414, readdata = xxxxxxxx
ALUA = 7f801050, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1043 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00414, readdata = xxxxxxxx
ALUA = 7f801050, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1044 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00414, readdata = xxxxxxxx
ALUA = 7f801054, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00415, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1044 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00415, readdata = xxxxxxxx
ALUA = 7f801054, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1045 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801058, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00416, readdata = xxxxxxxx
ALUA = 7f801058, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1045 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00416, readdata = xxxxxxxx
ALUA = 7f801058, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1046 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00416, readdata = xxxxxxxx
ALUA = 7f80105c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00417, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1046 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00417, readdata = xxxxxxxx
ALUA = 7f80105c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1047 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801060, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00418, readdata = xxxxxxxx
ALUA = 7f801060, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1047 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00418, readdata = xxxxxxxx
ALUA = 7f801060, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1048 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00418, readdata = xxxxxxxx
ALUA = 7f801064, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00419, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1048 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00419, readdata = xxxxxxxx
ALUA = 7f801064, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1049 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801068, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0041a, readdata = xxxxxxxx
ALUA = 7f801068, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1049 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0041a, readdata = xxxxxxxx
ALUA = 7f801068, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1050 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0041a, readdata = xxxxxxxx
ALUA = 7f80106c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0041b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1050 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0041b, readdata = xxxxxxxx
ALUA = 7f80106c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1051 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801070, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0041c, readdata = xxxxxxxx
ALUA = 7f801070, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1051 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0041c, readdata = xxxxxxxx
ALUA = 7f801070, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1052 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0041c, readdata = xxxxxxxx
ALUA = 7f801074, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0041d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1052 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0041d, readdata = xxxxxxxx
ALUA = 7f801074, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1053 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801078, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0041e, readdata = xxxxxxxx
ALUA = 7f801078, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1053 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0041e, readdata = xxxxxxxx
ALUA = 7f801078, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1054 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0041e, readdata = xxxxxxxx
ALUA = 7f80107c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0041f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1054 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0041f, readdata = xxxxxxxx
ALUA = 7f80107c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1055 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801080, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00420, readdata = xxxxxxxx
ALUA = 7f801080, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1055 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00420, readdata = xxxxxxxx
ALUA = 7f801080, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1056 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00420, readdata = xxxxxxxx
ALUA = 7f801084, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00421, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1056 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00421, readdata = xxxxxxxx
ALUA = 7f801084, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1057 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801088, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00422, readdata = xxxxxxxx
ALUA = 7f801088, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1057 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00422, readdata = xxxxxxxx
ALUA = 7f801088, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1058 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00422, readdata = xxxxxxxx
ALUA = 7f80108c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00423, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1058 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00423, readdata = xxxxxxxx
ALUA = 7f80108c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1059 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801090, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00424, readdata = xxxxxxxx
ALUA = 7f801090, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1059 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00424, readdata = xxxxxxxx
ALUA = 7f801090, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1060 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00424, readdata = xxxxxxxx
ALUA = 7f801094, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00425, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1060 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00425, readdata = xxxxxxxx
ALUA = 7f801094, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1061 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801098, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00426, readdata = xxxxxxxx
ALUA = 7f801098, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1061 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00426, readdata = xxxxxxxx
ALUA = 7f801098, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1062 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00426, readdata = xxxxxxxx
ALUA = 7f80109c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00427, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1062 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00427, readdata = xxxxxxxx
ALUA = 7f80109c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1063 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8010a0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00428, readdata = xxxxxxxx
ALUA = 7f8010a0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1063 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00428, readdata = xxxxxxxx
ALUA = 7f8010a0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1064 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00428, readdata = xxxxxxxx
ALUA = 7f8010a4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00429, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1064 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00429, readdata = xxxxxxxx
ALUA = 7f8010a4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1065 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8010a8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0042a, readdata = xxxxxxxx
ALUA = 7f8010a8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1065 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0042a, readdata = xxxxxxxx
ALUA = 7f8010a8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1066 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0042a, readdata = xxxxxxxx
ALUA = 7f8010ac, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0042b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1066 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0042b, readdata = xxxxxxxx
ALUA = 7f8010ac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1067 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8010b0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0042c, readdata = xxxxxxxx
ALUA = 7f8010b0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1067 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0042c, readdata = xxxxxxxx
ALUA = 7f8010b0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1068 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0042c, readdata = xxxxxxxx
ALUA = 7f8010b4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0042d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1068 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0042d, readdata = xxxxxxxx
ALUA = 7f8010b4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1069 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8010b8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0042e, readdata = xxxxxxxx
ALUA = 7f8010b8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1069 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0042e, readdata = xxxxxxxx
ALUA = 7f8010b8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1070 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0042e, readdata = xxxxxxxx
ALUA = 7f8010bc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0042f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1070 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0042f, readdata = xxxxxxxx
ALUA = 7f8010bc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1071 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8010c0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00430, readdata = xxxxxxxx
ALUA = 7f8010c0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1071 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00430, readdata = xxxxxxxx
ALUA = 7f8010c0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1072 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00430, readdata = xxxxxxxx
ALUA = 7f8010c4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00431, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1072 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00431, readdata = xxxxxxxx
ALUA = 7f8010c4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1073 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8010c8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00432, readdata = xxxxxxxx
ALUA = 7f8010c8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1073 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00432, readdata = xxxxxxxx
ALUA = 7f8010c8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1074 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00432, readdata = xxxxxxxx
ALUA = 7f8010cc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00433, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1074 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00433, readdata = xxxxxxxx
ALUA = 7f8010cc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1075 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8010d0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00434, readdata = xxxxxxxx
ALUA = 7f8010d0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1075 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00434, readdata = xxxxxxxx
ALUA = 7f8010d0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1076 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00434, readdata = xxxxxxxx
ALUA = 7f8010d4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00435, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1076 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00435, readdata = xxxxxxxx
ALUA = 7f8010d4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1077 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8010d8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00436, readdata = xxxxxxxx
ALUA = 7f8010d8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1077 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00436, readdata = xxxxxxxx
ALUA = 7f8010d8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1078 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00436, readdata = xxxxxxxx
ALUA = 7f8010dc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00437, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1078 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00437, readdata = xxxxxxxx
ALUA = 7f8010dc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1079 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8010e0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00438, readdata = xxxxxxxx
ALUA = 7f8010e0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1079 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00438, readdata = xxxxxxxx
ALUA = 7f8010e0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1080 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00438, readdata = xxxxxxxx
ALUA = 7f8010e4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00439, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1080 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00439, readdata = xxxxxxxx
ALUA = 7f8010e4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1081 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8010e8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0043a, readdata = xxxxxxxx
ALUA = 7f8010e8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1081 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0043a, readdata = xxxxxxxx
ALUA = 7f8010e8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1082 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0043a, readdata = xxxxxxxx
ALUA = 7f8010ec, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0043b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1082 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0043b, readdata = xxxxxxxx
ALUA = 7f8010ec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1083 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8010f0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0043c, readdata = xxxxxxxx
ALUA = 7f8010f0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1083 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0043c, readdata = xxxxxxxx
ALUA = 7f8010f0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1084 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0043c, readdata = xxxxxxxx
ALUA = 7f8010f4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0043d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1084 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0043d, readdata = xxxxxxxx
ALUA = 7f8010f4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1085 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8010f8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0043e, readdata = xxxxxxxx
ALUA = 7f8010f8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1085 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0043e, readdata = xxxxxxxx
ALUA = 7f8010f8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1086 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0043e, readdata = xxxxxxxx
ALUA = 7f8010fc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0043f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1086 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0043f, readdata = xxxxxxxx
ALUA = 7f8010fc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1087 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801100, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00440, readdata = xxxxxxxx
ALUA = 7f801100, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1087 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00440, readdata = xxxxxxxx
ALUA = 7f801100, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1088 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00440, readdata = xxxxxxxx
ALUA = 7f801104, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00441, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1088 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00441, readdata = xxxxxxxx
ALUA = 7f801104, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1089 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801108, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00442, readdata = xxxxxxxx
ALUA = 7f801108, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1089 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00442, readdata = xxxxxxxx
ALUA = 7f801108, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1090 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00442, readdata = xxxxxxxx
ALUA = 7f80110c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00443, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1090 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00443, readdata = xxxxxxxx
ALUA = 7f80110c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1091 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801110, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00444, readdata = xxxxxxxx
ALUA = 7f801110, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1091 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00444, readdata = xxxxxxxx
ALUA = 7f801110, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1092 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00444, readdata = xxxxxxxx
ALUA = 7f801114, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00445, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1092 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00445, readdata = xxxxxxxx
ALUA = 7f801114, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1093 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801118, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00446, readdata = xxxxxxxx
ALUA = 7f801118, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1093 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00446, readdata = xxxxxxxx
ALUA = 7f801118, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1094 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00446, readdata = xxxxxxxx
ALUA = 7f80111c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00447, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1094 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00447, readdata = xxxxxxxx
ALUA = 7f80111c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1095 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801120, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00448, readdata = xxxxxxxx
ALUA = 7f801120, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1095 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00448, readdata = xxxxxxxx
ALUA = 7f801120, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1096 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00448, readdata = xxxxxxxx
ALUA = 7f801124, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00449, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1096 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00449, readdata = xxxxxxxx
ALUA = 7f801124, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1097 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801128, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0044a, readdata = xxxxxxxx
ALUA = 7f801128, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1097 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0044a, readdata = xxxxxxxx
ALUA = 7f801128, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1098 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0044a, readdata = xxxxxxxx
ALUA = 7f80112c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0044b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1098 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0044b, readdata = xxxxxxxx
ALUA = 7f80112c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1099 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801130, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0044c, readdata = xxxxxxxx
ALUA = 7f801130, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1099 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0044c, readdata = xxxxxxxx
ALUA = 7f801130, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1100 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0044c, readdata = xxxxxxxx
ALUA = 7f801134, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0044d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1100 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0044d, readdata = xxxxxxxx
ALUA = 7f801134, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1101 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801138, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0044e, readdata = xxxxxxxx
ALUA = 7f801138, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1101 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0044e, readdata = xxxxxxxx
ALUA = 7f801138, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1102 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0044e, readdata = xxxxxxxx
ALUA = 7f80113c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0044f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1102 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0044f, readdata = xxxxxxxx
ALUA = 7f80113c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1103 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801140, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00450, readdata = xxxxxxxx
ALUA = 7f801140, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1103 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00450, readdata = xxxxxxxx
ALUA = 7f801140, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1104 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00450, readdata = xxxxxxxx
ALUA = 7f801144, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00451, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1104 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00451, readdata = xxxxxxxx
ALUA = 7f801144, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1105 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801148, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00452, readdata = xxxxxxxx
ALUA = 7f801148, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1105 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00452, readdata = xxxxxxxx
ALUA = 7f801148, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1106 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00452, readdata = xxxxxxxx
ALUA = 7f80114c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00453, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1106 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00453, readdata = xxxxxxxx
ALUA = 7f80114c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1107 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801150, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00454, readdata = xxxxxxxx
ALUA = 7f801150, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1107 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00454, readdata = xxxxxxxx
ALUA = 7f801150, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1108 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00454, readdata = xxxxxxxx
ALUA = 7f801154, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00455, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1108 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00455, readdata = xxxxxxxx
ALUA = 7f801154, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1109 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801158, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00456, readdata = xxxxxxxx
ALUA = 7f801158, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1109 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00456, readdata = xxxxxxxx
ALUA = 7f801158, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1110 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00456, readdata = xxxxxxxx
ALUA = 7f80115c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00457, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1110 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00457, readdata = xxxxxxxx
ALUA = 7f80115c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1111 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801160, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00458, readdata = xxxxxxxx
ALUA = 7f801160, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1111 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00458, readdata = xxxxxxxx
ALUA = 7f801160, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1112 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00458, readdata = xxxxxxxx
ALUA = 7f801164, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00459, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1112 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00459, readdata = xxxxxxxx
ALUA = 7f801164, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1113 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801168, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0045a, readdata = xxxxxxxx
ALUA = 7f801168, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1113 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0045a, readdata = xxxxxxxx
ALUA = 7f801168, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1114 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0045a, readdata = xxxxxxxx
ALUA = 7f80116c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0045b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1114 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0045b, readdata = xxxxxxxx
ALUA = 7f80116c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1115 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801170, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0045c, readdata = xxxxxxxx
ALUA = 7f801170, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1115 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0045c, readdata = xxxxxxxx
ALUA = 7f801170, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1116 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0045c, readdata = xxxxxxxx
ALUA = 7f801174, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0045d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1116 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0045d, readdata = xxxxxxxx
ALUA = 7f801174, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1117 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801178, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0045e, readdata = xxxxxxxx
ALUA = 7f801178, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1117 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0045e, readdata = xxxxxxxx
ALUA = 7f801178, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1118 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0045e, readdata = xxxxxxxx
ALUA = 7f80117c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0045f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1118 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0045f, readdata = xxxxxxxx
ALUA = 7f80117c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1119 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801180, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00460, readdata = xxxxxxxx
ALUA = 7f801180, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1119 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00460, readdata = xxxxxxxx
ALUA = 7f801180, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1120 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00460, readdata = xxxxxxxx
ALUA = 7f801184, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00461, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1120 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00461, readdata = xxxxxxxx
ALUA = 7f801184, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1121 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801188, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00462, readdata = xxxxxxxx
ALUA = 7f801188, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1121 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00462, readdata = xxxxxxxx
ALUA = 7f801188, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1122 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00462, readdata = xxxxxxxx
ALUA = 7f80118c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00463, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1122 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00463, readdata = xxxxxxxx
ALUA = 7f80118c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1123 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801190, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00464, readdata = xxxxxxxx
ALUA = 7f801190, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1123 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00464, readdata = xxxxxxxx
ALUA = 7f801190, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1124 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00464, readdata = xxxxxxxx
ALUA = 7f801194, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00465, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1124 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00465, readdata = xxxxxxxx
ALUA = 7f801194, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1125 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801198, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00466, readdata = xxxxxxxx
ALUA = 7f801198, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1125 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00466, readdata = xxxxxxxx
ALUA = 7f801198, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1126 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00466, readdata = xxxxxxxx
ALUA = 7f80119c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00467, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1126 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00467, readdata = xxxxxxxx
ALUA = 7f80119c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1127 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8011a0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00468, readdata = xxxxxxxx
ALUA = 7f8011a0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1127 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00468, readdata = xxxxxxxx
ALUA = 7f8011a0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1128 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00468, readdata = xxxxxxxx
ALUA = 7f8011a4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00469, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1128 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00469, readdata = xxxxxxxx
ALUA = 7f8011a4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1129 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8011a8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0046a, readdata = xxxxxxxx
ALUA = 7f8011a8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1129 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0046a, readdata = xxxxxxxx
ALUA = 7f8011a8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1130 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0046a, readdata = xxxxxxxx
ALUA = 7f8011ac, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0046b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1130 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0046b, readdata = xxxxxxxx
ALUA = 7f8011ac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1131 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8011b0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0046c, readdata = xxxxxxxx
ALUA = 7f8011b0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1131 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0046c, readdata = xxxxxxxx
ALUA = 7f8011b0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1132 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0046c, readdata = xxxxxxxx
ALUA = 7f8011b4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0046d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1132 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0046d, readdata = xxxxxxxx
ALUA = 7f8011b4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1133 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8011b8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0046e, readdata = xxxxxxxx
ALUA = 7f8011b8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1133 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0046e, readdata = xxxxxxxx
ALUA = 7f8011b8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1134 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0046e, readdata = xxxxxxxx
ALUA = 7f8011bc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0046f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1134 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0046f, readdata = xxxxxxxx
ALUA = 7f8011bc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1135 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8011c0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00470, readdata = xxxxxxxx
ALUA = 7f8011c0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1135 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00470, readdata = xxxxxxxx
ALUA = 7f8011c0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1136 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00470, readdata = xxxxxxxx
ALUA = 7f8011c4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00471, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1136 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00471, readdata = xxxxxxxx
ALUA = 7f8011c4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1137 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8011c8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00472, readdata = xxxxxxxx
ALUA = 7f8011c8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1137 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00472, readdata = xxxxxxxx
ALUA = 7f8011c8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1138 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00472, readdata = xxxxxxxx
ALUA = 7f8011cc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00473, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1138 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00473, readdata = xxxxxxxx
ALUA = 7f8011cc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1139 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8011d0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00474, readdata = xxxxxxxx
ALUA = 7f8011d0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1139 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00474, readdata = xxxxxxxx
ALUA = 7f8011d0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1140 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00474, readdata = xxxxxxxx
ALUA = 7f8011d4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00475, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1140 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00475, readdata = xxxxxxxx
ALUA = 7f8011d4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1141 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8011d8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00476, readdata = xxxxxxxx
ALUA = 7f8011d8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1141 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00476, readdata = xxxxxxxx
ALUA = 7f8011d8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1142 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00476, readdata = xxxxxxxx
ALUA = 7f8011dc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00477, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1142 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00477, readdata = xxxxxxxx
ALUA = 7f8011dc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1143 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8011e0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00478, readdata = xxxxxxxx
ALUA = 7f8011e0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1143 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00478, readdata = xxxxxxxx
ALUA = 7f8011e0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1144 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00478, readdata = xxxxxxxx
ALUA = 7f8011e4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00479, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1144 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00479, readdata = xxxxxxxx
ALUA = 7f8011e4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1145 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8011e8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0047a, readdata = xxxxxxxx
ALUA = 7f8011e8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1145 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0047a, readdata = xxxxxxxx
ALUA = 7f8011e8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1146 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0047a, readdata = xxxxxxxx
ALUA = 7f8011ec, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0047b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1146 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0047b, readdata = xxxxxxxx
ALUA = 7f8011ec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1147 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8011f0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0047c, readdata = xxxxxxxx
ALUA = 7f8011f0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1147 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0047c, readdata = xxxxxxxx
ALUA = 7f8011f0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1148 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0047c, readdata = xxxxxxxx
ALUA = 7f8011f4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0047d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1148 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0047d, readdata = xxxxxxxx
ALUA = 7f8011f4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1149 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8011f8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0047e, readdata = xxxxxxxx
ALUA = 7f8011f8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1149 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0047e, readdata = xxxxxxxx
ALUA = 7f8011f8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1150 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0047e, readdata = xxxxxxxx
ALUA = 7f8011fc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0047f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1150 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0047f, readdata = xxxxxxxx
ALUA = 7f8011fc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1151 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801200, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00480, readdata = xxxxxxxx
ALUA = 7f801200, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1151 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00480, readdata = xxxxxxxx
ALUA = 7f801200, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1152 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00480, readdata = xxxxxxxx
ALUA = 7f801204, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00481, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1152 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00481, readdata = xxxxxxxx
ALUA = 7f801204, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1153 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801208, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00482, readdata = xxxxxxxx
ALUA = 7f801208, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1153 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00482, readdata = xxxxxxxx
ALUA = 7f801208, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1154 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00482, readdata = xxxxxxxx
ALUA = 7f80120c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00483, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1154 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00483, readdata = xxxxxxxx
ALUA = 7f80120c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1155 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801210, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00484, readdata = xxxxxxxx
ALUA = 7f801210, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1155 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00484, readdata = xxxxxxxx
ALUA = 7f801210, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1156 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00484, readdata = xxxxxxxx
ALUA = 7f801214, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00485, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1156 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00485, readdata = xxxxxxxx
ALUA = 7f801214, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1157 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801218, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00486, readdata = xxxxxxxx
ALUA = 7f801218, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1157 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00486, readdata = xxxxxxxx
ALUA = 7f801218, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1158 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00486, readdata = xxxxxxxx
ALUA = 7f80121c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00487, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1158 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00487, readdata = xxxxxxxx
ALUA = 7f80121c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1159 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801220, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00488, readdata = xxxxxxxx
ALUA = 7f801220, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1159 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00488, readdata = xxxxxxxx
ALUA = 7f801220, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1160 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00488, readdata = xxxxxxxx
ALUA = 7f801224, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00489, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1160 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00489, readdata = xxxxxxxx
ALUA = 7f801224, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1161 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801228, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0048a, readdata = xxxxxxxx
ALUA = 7f801228, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1161 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0048a, readdata = xxxxxxxx
ALUA = 7f801228, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1162 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0048a, readdata = xxxxxxxx
ALUA = 7f80122c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0048b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1162 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0048b, readdata = xxxxxxxx
ALUA = 7f80122c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1163 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801230, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0048c, readdata = xxxxxxxx
ALUA = 7f801230, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1163 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0048c, readdata = xxxxxxxx
ALUA = 7f801230, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1164 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0048c, readdata = xxxxxxxx
ALUA = 7f801234, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0048d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1164 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0048d, readdata = xxxxxxxx
ALUA = 7f801234, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1165 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801238, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0048e, readdata = xxxxxxxx
ALUA = 7f801238, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1165 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0048e, readdata = xxxxxxxx
ALUA = 7f801238, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1166 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0048e, readdata = xxxxxxxx
ALUA = 7f80123c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0048f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1166 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0048f, readdata = xxxxxxxx
ALUA = 7f80123c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1167 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801240, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00490, readdata = xxxxxxxx
ALUA = 7f801240, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1167 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00490, readdata = xxxxxxxx
ALUA = 7f801240, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1168 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00490, readdata = xxxxxxxx
ALUA = 7f801244, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00491, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1168 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00491, readdata = xxxxxxxx
ALUA = 7f801244, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1169 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801248, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00492, readdata = xxxxxxxx
ALUA = 7f801248, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1169 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00492, readdata = xxxxxxxx
ALUA = 7f801248, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1170 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00492, readdata = xxxxxxxx
ALUA = 7f80124c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00493, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1170 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00493, readdata = xxxxxxxx
ALUA = 7f80124c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1171 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801250, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00494, readdata = xxxxxxxx
ALUA = 7f801250, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1171 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00494, readdata = xxxxxxxx
ALUA = 7f801250, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1172 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00494, readdata = xxxxxxxx
ALUA = 7f801254, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00495, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1172 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00495, readdata = xxxxxxxx
ALUA = 7f801254, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1173 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801258, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00496, readdata = xxxxxxxx
ALUA = 7f801258, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1173 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00496, readdata = xxxxxxxx
ALUA = 7f801258, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1174 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00496, readdata = xxxxxxxx
ALUA = 7f80125c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00497, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1174 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00497, readdata = xxxxxxxx
ALUA = 7f80125c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1175 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801260, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00498, readdata = xxxxxxxx
ALUA = 7f801260, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1175 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00498, readdata = xxxxxxxx
ALUA = 7f801260, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1176 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00498, readdata = xxxxxxxx
ALUA = 7f801264, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00499, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1176 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00499, readdata = xxxxxxxx
ALUA = 7f801264, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1177 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801268, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0049a, readdata = xxxxxxxx
ALUA = 7f801268, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1177 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0049a, readdata = xxxxxxxx
ALUA = 7f801268, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1178 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0049a, readdata = xxxxxxxx
ALUA = 7f80126c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0049b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1178 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0049b, readdata = xxxxxxxx
ALUA = 7f80126c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1179 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801270, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0049c, readdata = xxxxxxxx
ALUA = 7f801270, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1179 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0049c, readdata = xxxxxxxx
ALUA = 7f801270, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1180 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0049c, readdata = xxxxxxxx
ALUA = 7f801274, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0049d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1180 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0049d, readdata = xxxxxxxx
ALUA = 7f801274, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1181 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801278, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0049e, readdata = xxxxxxxx
ALUA = 7f801278, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1181 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0049e, readdata = xxxxxxxx
ALUA = 7f801278, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1182 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0049e, readdata = xxxxxxxx
ALUA = 7f80127c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0049f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1182 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0049f, readdata = xxxxxxxx
ALUA = 7f80127c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1183 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801280, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004a0, readdata = xxxxxxxx
ALUA = 7f801280, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1183 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004a0, readdata = xxxxxxxx
ALUA = 7f801280, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1184 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe004a0, readdata = xxxxxxxx
ALUA = 7f801284, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004a1, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1184 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004a1, readdata = xxxxxxxx
ALUA = 7f801284, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1185 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801288, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004a2, readdata = xxxxxxxx
ALUA = 7f801288, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1185 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004a2, readdata = xxxxxxxx
ALUA = 7f801288, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1186 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe004a2, readdata = xxxxxxxx
ALUA = 7f80128c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004a3, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1186 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004a3, readdata = xxxxxxxx
ALUA = 7f80128c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1187 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801290, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004a4, readdata = xxxxxxxx
ALUA = 7f801290, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1187 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004a4, readdata = xxxxxxxx
ALUA = 7f801290, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1188 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe004a4, readdata = xxxxxxxx
ALUA = 7f801294, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004a5, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1188 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004a5, readdata = xxxxxxxx
ALUA = 7f801294, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1189 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801298, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004a6, readdata = xxxxxxxx
ALUA = 7f801298, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1189 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004a6, readdata = xxxxxxxx
ALUA = 7f801298, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1190 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe004a6, readdata = xxxxxxxx
ALUA = 7f80129c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004a7, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1190 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004a7, readdata = xxxxxxxx
ALUA = 7f80129c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1191 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8012a0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004a8, readdata = xxxxxxxx
ALUA = 7f8012a0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1191 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004a8, readdata = xxxxxxxx
ALUA = 7f8012a0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1192 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe004a8, readdata = xxxxxxxx
ALUA = 7f8012a4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004a9, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1192 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004a9, readdata = xxxxxxxx
ALUA = 7f8012a4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1193 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8012a8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004aa, readdata = xxxxxxxx
ALUA = 7f8012a8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1193 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004aa, readdata = xxxxxxxx
ALUA = 7f8012a8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1194 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe004aa, readdata = xxxxxxxx
ALUA = 7f8012ac, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004ab, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1194 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004ab, readdata = xxxxxxxx
ALUA = 7f8012ac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1195 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8012b0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004ac, readdata = xxxxxxxx
ALUA = 7f8012b0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1195 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004ac, readdata = xxxxxxxx
ALUA = 7f8012b0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1196 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe004ac, readdata = xxxxxxxx
ALUA = 7f8012b4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004ad, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1196 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004ad, readdata = xxxxxxxx
ALUA = 7f8012b4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1197 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8012b8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004ae, readdata = xxxxxxxx
ALUA = 7f8012b8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1197 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004ae, readdata = xxxxxxxx
ALUA = 7f8012b8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1198 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe004ae, readdata = xxxxxxxx
ALUA = 7f8012bc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004af, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1198 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004af, readdata = xxxxxxxx
ALUA = 7f8012bc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1199 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8012c0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004b0, readdata = xxxxxxxx
ALUA = 7f8012c0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1199 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004b0, readdata = xxxxxxxx
ALUA = 7f8012c0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1200 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe004b0, readdata = xxxxxxxx
ALUA = 7f8012c4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004b1, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1200 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004b1, readdata = xxxxxxxx
ALUA = 7f8012c4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1201 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8012c8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004b2, readdata = xxxxxxxx
ALUA = 7f8012c8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1201 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004b2, readdata = xxxxxxxx
ALUA = 7f8012c8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1202 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe004b2, readdata = xxxxxxxx
ALUA = 7f8012cc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004b3, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1202 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004b3, readdata = xxxxxxxx
ALUA = 7f8012cc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1203 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8012d0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004b4, readdata = xxxxxxxx
ALUA = 7f8012d0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1203 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004b4, readdata = xxxxxxxx
ALUA = 7f8012d0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1204 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe004b4, readdata = xxxxxxxx
ALUA = 7f8012d4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004b5, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1204 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004b5, readdata = xxxxxxxx
ALUA = 7f8012d4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1205 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8012d8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004b6, readdata = xxxxxxxx
ALUA = 7f8012d8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1205 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004b6, readdata = xxxxxxxx
ALUA = 7f8012d8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1206 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe004b6, readdata = xxxxxxxx
ALUA = 7f8012dc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004b7, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1206 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004b7, readdata = xxxxxxxx
ALUA = 7f8012dc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1207 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8012e0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004b8, readdata = xxxxxxxx
ALUA = 7f8012e0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1207 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004b8, readdata = xxxxxxxx
ALUA = 7f8012e0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1208 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe004b8, readdata = xxxxxxxx
ALUA = 7f8012e4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004b9, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1208 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004b9, readdata = xxxxxxxx
ALUA = 7f8012e4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1209 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8012e8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004ba, readdata = xxxxxxxx
ALUA = 7f8012e8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1209 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004ba, readdata = xxxxxxxx
ALUA = 7f8012e8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1210 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe004ba, readdata = xxxxxxxx
ALUA = 7f8012ec, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004bb, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1210 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004bb, readdata = xxxxxxxx
ALUA = 7f8012ec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1211 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8012f0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004bc, readdata = xxxxxxxx
ALUA = 7f8012f0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1211 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004bc, readdata = xxxxxxxx
ALUA = 7f8012f0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1212 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe004bc, readdata = xxxxxxxx
ALUA = 7f8012f4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004bd, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1212 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004bd, readdata = xxxxxxxx
ALUA = 7f8012f4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1213 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8012f8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004be, readdata = xxxxxxxx
ALUA = 7f8012f8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1213 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004be, readdata = xxxxxxxx
ALUA = 7f8012f8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1214 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe004be, readdata = xxxxxxxx
ALUA = 7f8012fc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004bf, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1214 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004bf, readdata = xxxxxxxx
ALUA = 7f8012fc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1215 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801300, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004c0, readdata = xxxxxxxx
ALUA = 7f801300, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1215 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004c0, readdata = xxxxxxxx
ALUA = 7f801300, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1216 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe004c0, readdata = xxxxxxxx
ALUA = 7f801304, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004c1, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1216 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004c1, readdata = xxxxxxxx
ALUA = 7f801304, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1217 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801308, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004c2, readdata = xxxxxxxx
ALUA = 7f801308, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1217 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004c2, readdata = xxxxxxxx
ALUA = 7f801308, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1218 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe004c2, readdata = xxxxxxxx
ALUA = 7f80130c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004c3, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1218 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004c3, readdata = xxxxxxxx
ALUA = 7f80130c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1219 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801310, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004c4, readdata = xxxxxxxx
ALUA = 7f801310, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1219 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004c4, readdata = xxxxxxxx
ALUA = 7f801310, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1220 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe004c4, readdata = xxxxxxxx
ALUA = 7f801314, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004c5, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1220 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004c5, readdata = xxxxxxxx
ALUA = 7f801314, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1221 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801318, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004c6, readdata = xxxxxxxx
ALUA = 7f801318, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1221 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004c6, readdata = xxxxxxxx
ALUA = 7f801318, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1222 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe004c6, readdata = xxxxxxxx
ALUA = 7f80131c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004c7, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1222 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004c7, readdata = xxxxxxxx
ALUA = 7f80131c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1223 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801320, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004c8, readdata = xxxxxxxx
ALUA = 7f801320, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1223 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004c8, readdata = xxxxxxxx
ALUA = 7f801320, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1224 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe004c8, readdata = xxxxxxxx
ALUA = 7f801324, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004c9, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1224 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004c9, readdata = xxxxxxxx
ALUA = 7f801324, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1225 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801328, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004ca, readdata = xxxxxxxx
ALUA = 7f801328, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1225 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004ca, readdata = xxxxxxxx
ALUA = 7f801328, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1226 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe004ca, readdata = xxxxxxxx
ALUA = 7f80132c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004cb, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1226 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004cb, readdata = xxxxxxxx
ALUA = 7f80132c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1227 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801330, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004cc, readdata = xxxxxxxx
ALUA = 7f801330, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1227 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004cc, readdata = xxxxxxxx
ALUA = 7f801330, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1228 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe004cc, readdata = xxxxxxxx
ALUA = 7f801334, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004cd, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1228 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004cd, readdata = xxxxxxxx
ALUA = 7f801334, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1229 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801338, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004ce, readdata = xxxxxxxx
ALUA = 7f801338, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1229 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004ce, readdata = xxxxxxxx
ALUA = 7f801338, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1230 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe004ce, readdata = xxxxxxxx
ALUA = 7f80133c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004cf, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1230 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004cf, readdata = xxxxxxxx
ALUA = 7f80133c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1231 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801340, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004d0, readdata = xxxxxxxx
ALUA = 7f801340, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1231 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004d0, readdata = xxxxxxxx
ALUA = 7f801340, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1232 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe004d0, readdata = xxxxxxxx
ALUA = 7f801344, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004d1, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1232 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004d1, readdata = xxxxxxxx
ALUA = 7f801344, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1233 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801348, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004d2, readdata = xxxxxxxx
ALUA = 7f801348, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1233 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004d2, readdata = xxxxxxxx
ALUA = 7f801348, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1234 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe004d2, readdata = xxxxxxxx
ALUA = 7f80134c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004d3, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1234 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004d3, readdata = xxxxxxxx
ALUA = 7f80134c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1235 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801350, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004d4, readdata = xxxxxxxx
ALUA = 7f801350, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1235 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004d4, readdata = xxxxxxxx
ALUA = 7f801350, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1236 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe004d4, readdata = xxxxxxxx
ALUA = 7f801354, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004d5, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1236 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004d5, readdata = xxxxxxxx
ALUA = 7f801354, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1237 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801358, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004d6, readdata = xxxxxxxx
ALUA = 7f801358, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1237 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004d6, readdata = xxxxxxxx
ALUA = 7f801358, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1238 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe004d6, readdata = xxxxxxxx
ALUA = 7f80135c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004d7, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1238 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004d7, readdata = xxxxxxxx
ALUA = 7f80135c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1239 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801360, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004d8, readdata = xxxxxxxx
ALUA = 7f801360, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1239 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004d8, readdata = xxxxxxxx
ALUA = 7f801360, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1240 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe004d8, readdata = xxxxxxxx
ALUA = 7f801364, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004d9, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1240 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004d9, readdata = xxxxxxxx
ALUA = 7f801364, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1241 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801368, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004da, readdata = xxxxxxxx
ALUA = 7f801368, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1241 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004da, readdata = xxxxxxxx
ALUA = 7f801368, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1242 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe004da, readdata = xxxxxxxx
ALUA = 7f80136c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004db, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1242 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004db, readdata = xxxxxxxx
ALUA = 7f80136c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1243 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801370, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004dc, readdata = xxxxxxxx
ALUA = 7f801370, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1243 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004dc, readdata = xxxxxxxx
ALUA = 7f801370, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1244 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe004dc, readdata = xxxxxxxx
ALUA = 7f801374, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004dd, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1244 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004dd, readdata = xxxxxxxx
ALUA = 7f801374, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1245 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801378, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004de, readdata = xxxxxxxx
ALUA = 7f801378, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1245 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004de, readdata = xxxxxxxx
ALUA = 7f801378, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1246 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe004de, readdata = xxxxxxxx
ALUA = 7f80137c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004df, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1246 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004df, readdata = xxxxxxxx
ALUA = 7f80137c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1247 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801380, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004e0, readdata = xxxxxxxx
ALUA = 7f801380, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1247 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004e0, readdata = xxxxxxxx
ALUA = 7f801380, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1248 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe004e0, readdata = xxxxxxxx
ALUA = 7f801384, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004e1, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1248 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004e1, readdata = xxxxxxxx
ALUA = 7f801384, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1249 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801388, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004e2, readdata = xxxxxxxx
ALUA = 7f801388, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1249 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004e2, readdata = xxxxxxxx
ALUA = 7f801388, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1250 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe004e2, readdata = xxxxxxxx
ALUA = 7f80138c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004e3, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1250 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004e3, readdata = xxxxxxxx
ALUA = 7f80138c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1251 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801390, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004e4, readdata = xxxxxxxx
ALUA = 7f801390, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1251 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004e4, readdata = xxxxxxxx
ALUA = 7f801390, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1252 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe004e4, readdata = xxxxxxxx
ALUA = 7f801394, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004e5, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1252 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004e5, readdata = xxxxxxxx
ALUA = 7f801394, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1253 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801398, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004e6, readdata = xxxxxxxx
ALUA = 7f801398, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1253 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004e6, readdata = xxxxxxxx
ALUA = 7f801398, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1254 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe004e6, readdata = xxxxxxxx
ALUA = 7f80139c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004e7, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1254 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004e7, readdata = xxxxxxxx
ALUA = 7f80139c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1255 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8013a0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004e8, readdata = xxxxxxxx
ALUA = 7f8013a0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1255 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004e8, readdata = xxxxxxxx
ALUA = 7f8013a0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1256 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe004e8, readdata = xxxxxxxx
ALUA = 7f8013a4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004e9, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1256 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004e9, readdata = xxxxxxxx
ALUA = 7f8013a4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1257 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8013a8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004ea, readdata = xxxxxxxx
ALUA = 7f8013a8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1257 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004ea, readdata = xxxxxxxx
ALUA = 7f8013a8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1258 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe004ea, readdata = xxxxxxxx
ALUA = 7f8013ac, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004eb, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1258 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004eb, readdata = xxxxxxxx
ALUA = 7f8013ac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1259 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8013b0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004ec, readdata = xxxxxxxx
ALUA = 7f8013b0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1259 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004ec, readdata = xxxxxxxx
ALUA = 7f8013b0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1260 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe004ec, readdata = xxxxxxxx
ALUA = 7f8013b4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004ed, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1260 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004ed, readdata = xxxxxxxx
ALUA = 7f8013b4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1261 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8013b8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004ee, readdata = xxxxxxxx
ALUA = 7f8013b8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1261 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004ee, readdata = xxxxxxxx
ALUA = 7f8013b8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1262 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe004ee, readdata = xxxxxxxx
ALUA = 7f8013bc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004ef, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1262 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004ef, readdata = xxxxxxxx
ALUA = 7f8013bc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1263 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8013c0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004f0, readdata = xxxxxxxx
ALUA = 7f8013c0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1263 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004f0, readdata = xxxxxxxx
ALUA = 7f8013c0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1264 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe004f0, readdata = xxxxxxxx
ALUA = 7f8013c4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004f1, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1264 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004f1, readdata = xxxxxxxx
ALUA = 7f8013c4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1265 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8013c8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004f2, readdata = xxxxxxxx
ALUA = 7f8013c8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1265 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004f2, readdata = xxxxxxxx
ALUA = 7f8013c8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1266 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe004f2, readdata = xxxxxxxx
ALUA = 7f8013cc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004f3, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1266 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004f3, readdata = xxxxxxxx
ALUA = 7f8013cc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1267 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8013d0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004f4, readdata = xxxxxxxx
ALUA = 7f8013d0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1267 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004f4, readdata = xxxxxxxx
ALUA = 7f8013d0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1268 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe004f4, readdata = xxxxxxxx
ALUA = 7f8013d4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004f5, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1268 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004f5, readdata = xxxxxxxx
ALUA = 7f8013d4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1269 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8013d8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004f6, readdata = xxxxxxxx
ALUA = 7f8013d8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1269 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004f6, readdata = xxxxxxxx
ALUA = 7f8013d8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1270 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe004f6, readdata = xxxxxxxx
ALUA = 7f8013dc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004f7, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1270 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004f7, readdata = xxxxxxxx
ALUA = 7f8013dc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1271 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8013e0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004f8, readdata = xxxxxxxx
ALUA = 7f8013e0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1271 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004f8, readdata = xxxxxxxx
ALUA = 7f8013e0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1272 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe004f8, readdata = xxxxxxxx
ALUA = 7f8013e4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004f9, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1272 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004f9, readdata = xxxxxxxx
ALUA = 7f8013e4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1273 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8013e8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004fa, readdata = xxxxxxxx
ALUA = 7f8013e8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1273 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004fa, readdata = xxxxxxxx
ALUA = 7f8013e8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1274 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe004fa, readdata = xxxxxxxx
ALUA = 7f8013ec, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004fb, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1274 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004fb, readdata = xxxxxxxx
ALUA = 7f8013ec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1275 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8013f0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004fc, readdata = xxxxxxxx
ALUA = 7f8013f0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1275 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004fc, readdata = xxxxxxxx
ALUA = 7f8013f0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1276 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe004fc, readdata = xxxxxxxx
ALUA = 7f8013f4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004fd, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1276 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004fd, readdata = xxxxxxxx
ALUA = 7f8013f4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1277 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8013f8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004fe, readdata = xxxxxxxx
ALUA = 7f8013f8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1277 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004fe, readdata = xxxxxxxx
ALUA = 7f8013f8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1278 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe004fe, readdata = xxxxxxxx
ALUA = 7f8013fc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe004ff, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1278 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe004ff, readdata = xxxxxxxx
ALUA = 7f8013fc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1279 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801400, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00500, readdata = xxxxxxxx
ALUA = 7f801400, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1279 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00500, readdata = xxxxxxxx
ALUA = 7f801400, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1280 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00500, readdata = xxxxxxxx
ALUA = 7f801404, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00501, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1280 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00501, readdata = xxxxxxxx
ALUA = 7f801404, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1281 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801408, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00502, readdata = xxxxxxxx
ALUA = 7f801408, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1281 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00502, readdata = xxxxxxxx
ALUA = 7f801408, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1282 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00502, readdata = xxxxxxxx
ALUA = 7f80140c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00503, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1282 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00503, readdata = xxxxxxxx
ALUA = 7f80140c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1283 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801410, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00504, readdata = xxxxxxxx
ALUA = 7f801410, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1283 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00504, readdata = xxxxxxxx
ALUA = 7f801410, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1284 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00504, readdata = xxxxxxxx
ALUA = 7f801414, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00505, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1284 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00505, readdata = xxxxxxxx
ALUA = 7f801414, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1285 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801418, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00506, readdata = xxxxxxxx
ALUA = 7f801418, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1285 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00506, readdata = xxxxxxxx
ALUA = 7f801418, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1286 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00506, readdata = xxxxxxxx
ALUA = 7f80141c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00507, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1286 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00507, readdata = xxxxxxxx
ALUA = 7f80141c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1287 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801420, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00508, readdata = xxxxxxxx
ALUA = 7f801420, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1287 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00508, readdata = xxxxxxxx
ALUA = 7f801420, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1288 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00508, readdata = xxxxxxxx
ALUA = 7f801424, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00509, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1288 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00509, readdata = xxxxxxxx
ALUA = 7f801424, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1289 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801428, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0050a, readdata = xxxxxxxx
ALUA = 7f801428, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1289 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0050a, readdata = xxxxxxxx
ALUA = 7f801428, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1290 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0050a, readdata = xxxxxxxx
ALUA = 7f80142c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0050b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1290 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0050b, readdata = xxxxxxxx
ALUA = 7f80142c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1291 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801430, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0050c, readdata = xxxxxxxx
ALUA = 7f801430, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1291 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0050c, readdata = xxxxxxxx
ALUA = 7f801430, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1292 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0050c, readdata = xxxxxxxx
ALUA = 7f801434, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0050d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1292 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0050d, readdata = xxxxxxxx
ALUA = 7f801434, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1293 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801438, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0050e, readdata = xxxxxxxx
ALUA = 7f801438, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1293 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0050e, readdata = xxxxxxxx
ALUA = 7f801438, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1294 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0050e, readdata = xxxxxxxx
ALUA = 7f80143c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0050f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1294 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0050f, readdata = xxxxxxxx
ALUA = 7f80143c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1295 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801440, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00510, readdata = xxxxxxxx
ALUA = 7f801440, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1295 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00510, readdata = xxxxxxxx
ALUA = 7f801440, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1296 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00510, readdata = xxxxxxxx
ALUA = 7f801444, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00511, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1296 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00511, readdata = xxxxxxxx
ALUA = 7f801444, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1297 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801448, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00512, readdata = xxxxxxxx
ALUA = 7f801448, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1297 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00512, readdata = xxxxxxxx
ALUA = 7f801448, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1298 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00512, readdata = xxxxxxxx
ALUA = 7f80144c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00513, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1298 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00513, readdata = xxxxxxxx
ALUA = 7f80144c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1299 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801450, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00514, readdata = xxxxxxxx
ALUA = 7f801450, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1299 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00514, readdata = xxxxxxxx
ALUA = 7f801450, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1300 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00514, readdata = xxxxxxxx
ALUA = 7f801454, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00515, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1300 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00515, readdata = xxxxxxxx
ALUA = 7f801454, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1301 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801458, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00516, readdata = xxxxxxxx
ALUA = 7f801458, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1301 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00516, readdata = xxxxxxxx
ALUA = 7f801458, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1302 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00516, readdata = xxxxxxxx
ALUA = 7f80145c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00517, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1302 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00517, readdata = xxxxxxxx
ALUA = 7f80145c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1303 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801460, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00518, readdata = xxxxxxxx
ALUA = 7f801460, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1303 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00518, readdata = xxxxxxxx
ALUA = 7f801460, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1304 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00518, readdata = xxxxxxxx
ALUA = 7f801464, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00519, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1304 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00519, readdata = xxxxxxxx
ALUA = 7f801464, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1305 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801468, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0051a, readdata = xxxxxxxx
ALUA = 7f801468, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1305 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0051a, readdata = xxxxxxxx
ALUA = 7f801468, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1306 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0051a, readdata = xxxxxxxx
ALUA = 7f80146c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0051b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1306 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0051b, readdata = xxxxxxxx
ALUA = 7f80146c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1307 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801470, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0051c, readdata = xxxxxxxx
ALUA = 7f801470, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1307 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0051c, readdata = xxxxxxxx
ALUA = 7f801470, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1308 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0051c, readdata = xxxxxxxx
ALUA = 7f801474, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0051d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1308 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0051d, readdata = xxxxxxxx
ALUA = 7f801474, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1309 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801478, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0051e, readdata = xxxxxxxx
ALUA = 7f801478, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1309 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0051e, readdata = xxxxxxxx
ALUA = 7f801478, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1310 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0051e, readdata = xxxxxxxx
ALUA = 7f80147c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0051f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1310 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0051f, readdata = xxxxxxxx
ALUA = 7f80147c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1311 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801480, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00520, readdata = xxxxxxxx
ALUA = 7f801480, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1311 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00520, readdata = xxxxxxxx
ALUA = 7f801480, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1312 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00520, readdata = xxxxxxxx
ALUA = 7f801484, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00521, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1312 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00521, readdata = xxxxxxxx
ALUA = 7f801484, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1313 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801488, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00522, readdata = xxxxxxxx
ALUA = 7f801488, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1313 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00522, readdata = xxxxxxxx
ALUA = 7f801488, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1314 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00522, readdata = xxxxxxxx
ALUA = 7f80148c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00523, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1314 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00523, readdata = xxxxxxxx
ALUA = 7f80148c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1315 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801490, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00524, readdata = xxxxxxxx
ALUA = 7f801490, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1315 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00524, readdata = xxxxxxxx
ALUA = 7f801490, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1316 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00524, readdata = xxxxxxxx
ALUA = 7f801494, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00525, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1316 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00525, readdata = xxxxxxxx
ALUA = 7f801494, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1317 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801498, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00526, readdata = xxxxxxxx
ALUA = 7f801498, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1317 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00526, readdata = xxxxxxxx
ALUA = 7f801498, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1318 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00526, readdata = xxxxxxxx
ALUA = 7f80149c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00527, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1318 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00527, readdata = xxxxxxxx
ALUA = 7f80149c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1319 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8014a0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00528, readdata = xxxxxxxx
ALUA = 7f8014a0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1319 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00528, readdata = xxxxxxxx
ALUA = 7f8014a0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1320 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00528, readdata = xxxxxxxx
ALUA = 7f8014a4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00529, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1320 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00529, readdata = xxxxxxxx
ALUA = 7f8014a4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1321 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8014a8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0052a, readdata = xxxxxxxx
ALUA = 7f8014a8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1321 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0052a, readdata = xxxxxxxx
ALUA = 7f8014a8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1322 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0052a, readdata = xxxxxxxx
ALUA = 7f8014ac, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0052b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1322 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0052b, readdata = xxxxxxxx
ALUA = 7f8014ac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1323 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8014b0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0052c, readdata = xxxxxxxx
ALUA = 7f8014b0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1323 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0052c, readdata = xxxxxxxx
ALUA = 7f8014b0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1324 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0052c, readdata = xxxxxxxx
ALUA = 7f8014b4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0052d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1324 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0052d, readdata = xxxxxxxx
ALUA = 7f8014b4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1325 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8014b8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0052e, readdata = xxxxxxxx
ALUA = 7f8014b8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1325 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0052e, readdata = xxxxxxxx
ALUA = 7f8014b8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1326 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0052e, readdata = xxxxxxxx
ALUA = 7f8014bc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0052f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1326 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0052f, readdata = xxxxxxxx
ALUA = 7f8014bc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1327 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8014c0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00530, readdata = xxxxxxxx
ALUA = 7f8014c0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1327 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00530, readdata = xxxxxxxx
ALUA = 7f8014c0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1328 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00530, readdata = xxxxxxxx
ALUA = 7f8014c4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00531, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1328 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00531, readdata = xxxxxxxx
ALUA = 7f8014c4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1329 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8014c8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00532, readdata = xxxxxxxx
ALUA = 7f8014c8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1329 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00532, readdata = xxxxxxxx
ALUA = 7f8014c8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1330 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00532, readdata = xxxxxxxx
ALUA = 7f8014cc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00533, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1330 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00533, readdata = xxxxxxxx
ALUA = 7f8014cc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1331 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8014d0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00534, readdata = xxxxxxxx
ALUA = 7f8014d0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1331 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00534, readdata = xxxxxxxx
ALUA = 7f8014d0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1332 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00534, readdata = xxxxxxxx
ALUA = 7f8014d4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00535, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1332 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00535, readdata = xxxxxxxx
ALUA = 7f8014d4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1333 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8014d8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00536, readdata = xxxxxxxx
ALUA = 7f8014d8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1333 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00536, readdata = xxxxxxxx
ALUA = 7f8014d8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1334 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00536, readdata = xxxxxxxx
ALUA = 7f8014dc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00537, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1334 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00537, readdata = xxxxxxxx
ALUA = 7f8014dc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1335 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8014e0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00538, readdata = xxxxxxxx
ALUA = 7f8014e0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1335 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00538, readdata = xxxxxxxx
ALUA = 7f8014e0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1336 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00538, readdata = xxxxxxxx
ALUA = 7f8014e4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00539, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1336 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00539, readdata = xxxxxxxx
ALUA = 7f8014e4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1337 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8014e8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0053a, readdata = xxxxxxxx
ALUA = 7f8014e8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1337 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0053a, readdata = xxxxxxxx
ALUA = 7f8014e8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1338 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0053a, readdata = xxxxxxxx
ALUA = 7f8014ec, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0053b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1338 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0053b, readdata = xxxxxxxx
ALUA = 7f8014ec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1339 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8014f0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0053c, readdata = xxxxxxxx
ALUA = 7f8014f0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1339 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0053c, readdata = xxxxxxxx
ALUA = 7f8014f0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1340 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0053c, readdata = xxxxxxxx
ALUA = 7f8014f4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0053d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1340 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0053d, readdata = xxxxxxxx
ALUA = 7f8014f4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1341 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8014f8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0053e, readdata = xxxxxxxx
ALUA = 7f8014f8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1341 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0053e, readdata = xxxxxxxx
ALUA = 7f8014f8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1342 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0053e, readdata = xxxxxxxx
ALUA = 7f8014fc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0053f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1342 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0053f, readdata = xxxxxxxx
ALUA = 7f8014fc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1343 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801500, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00540, readdata = xxxxxxxx
ALUA = 7f801500, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1343 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00540, readdata = xxxxxxxx
ALUA = 7f801500, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1344 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00540, readdata = xxxxxxxx
ALUA = 7f801504, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00541, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1344 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00541, readdata = xxxxxxxx
ALUA = 7f801504, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1345 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801508, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00542, readdata = xxxxxxxx
ALUA = 7f801508, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1345 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00542, readdata = xxxxxxxx
ALUA = 7f801508, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1346 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00542, readdata = xxxxxxxx
ALUA = 7f80150c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00543, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1346 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00543, readdata = xxxxxxxx
ALUA = 7f80150c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1347 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801510, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00544, readdata = xxxxxxxx
ALUA = 7f801510, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1347 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00544, readdata = xxxxxxxx
ALUA = 7f801510, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1348 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00544, readdata = xxxxxxxx
ALUA = 7f801514, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00545, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1348 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00545, readdata = xxxxxxxx
ALUA = 7f801514, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1349 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801518, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00546, readdata = xxxxxxxx
ALUA = 7f801518, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1349 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00546, readdata = xxxxxxxx
ALUA = 7f801518, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1350 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00546, readdata = xxxxxxxx
ALUA = 7f80151c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00547, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1350 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00547, readdata = xxxxxxxx
ALUA = 7f80151c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1351 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801520, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00548, readdata = xxxxxxxx
ALUA = 7f801520, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1351 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00548, readdata = xxxxxxxx
ALUA = 7f801520, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1352 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00548, readdata = xxxxxxxx
ALUA = 7f801524, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00549, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1352 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00549, readdata = xxxxxxxx
ALUA = 7f801524, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1353 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801528, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0054a, readdata = xxxxxxxx
ALUA = 7f801528, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1353 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0054a, readdata = xxxxxxxx
ALUA = 7f801528, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1354 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0054a, readdata = xxxxxxxx
ALUA = 7f80152c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0054b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1354 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0054b, readdata = xxxxxxxx
ALUA = 7f80152c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1355 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801530, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0054c, readdata = xxxxxxxx
ALUA = 7f801530, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1355 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0054c, readdata = xxxxxxxx
ALUA = 7f801530, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1356 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0054c, readdata = xxxxxxxx
ALUA = 7f801534, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0054d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1356 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0054d, readdata = xxxxxxxx
ALUA = 7f801534, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1357 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801538, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0054e, readdata = xxxxxxxx
ALUA = 7f801538, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1357 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0054e, readdata = xxxxxxxx
ALUA = 7f801538, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1358 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0054e, readdata = xxxxxxxx
ALUA = 7f80153c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0054f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1358 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0054f, readdata = xxxxxxxx
ALUA = 7f80153c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1359 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801540, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00550, readdata = xxxxxxxx
ALUA = 7f801540, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1359 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00550, readdata = xxxxxxxx
ALUA = 7f801540, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1360 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00550, readdata = xxxxxxxx
ALUA = 7f801544, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00551, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1360 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00551, readdata = xxxxxxxx
ALUA = 7f801544, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1361 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801548, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00552, readdata = xxxxxxxx
ALUA = 7f801548, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1361 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00552, readdata = xxxxxxxx
ALUA = 7f801548, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1362 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00552, readdata = xxxxxxxx
ALUA = 7f80154c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00553, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1362 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00553, readdata = xxxxxxxx
ALUA = 7f80154c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1363 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801550, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00554, readdata = xxxxxxxx
ALUA = 7f801550, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1363 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00554, readdata = xxxxxxxx
ALUA = 7f801550, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1364 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00554, readdata = xxxxxxxx
ALUA = 7f801554, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00555, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1364 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00555, readdata = xxxxxxxx
ALUA = 7f801554, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1365 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801558, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00556, readdata = xxxxxxxx
ALUA = 7f801558, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1365 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00556, readdata = xxxxxxxx
ALUA = 7f801558, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1366 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00556, readdata = xxxxxxxx
ALUA = 7f80155c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00557, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1366 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00557, readdata = xxxxxxxx
ALUA = 7f80155c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1367 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801560, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00558, readdata = xxxxxxxx
ALUA = 7f801560, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1367 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00558, readdata = xxxxxxxx
ALUA = 7f801560, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1368 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00558, readdata = xxxxxxxx
ALUA = 7f801564, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00559, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1368 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00559, readdata = xxxxxxxx
ALUA = 7f801564, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1369 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801568, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0055a, readdata = xxxxxxxx
ALUA = 7f801568, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1369 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0055a, readdata = xxxxxxxx
ALUA = 7f801568, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1370 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0055a, readdata = xxxxxxxx
ALUA = 7f80156c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0055b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1370 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0055b, readdata = xxxxxxxx
ALUA = 7f80156c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1371 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801570, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0055c, readdata = xxxxxxxx
ALUA = 7f801570, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1371 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0055c, readdata = xxxxxxxx
ALUA = 7f801570, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1372 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0055c, readdata = xxxxxxxx
ALUA = 7f801574, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0055d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1372 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0055d, readdata = xxxxxxxx
ALUA = 7f801574, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1373 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801578, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0055e, readdata = xxxxxxxx
ALUA = 7f801578, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1373 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0055e, readdata = xxxxxxxx
ALUA = 7f801578, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1374 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0055e, readdata = xxxxxxxx
ALUA = 7f80157c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0055f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1374 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0055f, readdata = xxxxxxxx
ALUA = 7f80157c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1375 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801580, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00560, readdata = xxxxxxxx
ALUA = 7f801580, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1375 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00560, readdata = xxxxxxxx
ALUA = 7f801580, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1376 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00560, readdata = xxxxxxxx
ALUA = 7f801584, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00561, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1376 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00561, readdata = xxxxxxxx
ALUA = 7f801584, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1377 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801588, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00562, readdata = xxxxxxxx
ALUA = 7f801588, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1377 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00562, readdata = xxxxxxxx
ALUA = 7f801588, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1378 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00562, readdata = xxxxxxxx
ALUA = 7f80158c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00563, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1378 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00563, readdata = xxxxxxxx
ALUA = 7f80158c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1379 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801590, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00564, readdata = xxxxxxxx
ALUA = 7f801590, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1379 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00564, readdata = xxxxxxxx
ALUA = 7f801590, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1380 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00564, readdata = xxxxxxxx
ALUA = 7f801594, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00565, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1380 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00565, readdata = xxxxxxxx
ALUA = 7f801594, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1381 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801598, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00566, readdata = xxxxxxxx
ALUA = 7f801598, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1381 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00566, readdata = xxxxxxxx
ALUA = 7f801598, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1382 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00566, readdata = xxxxxxxx
ALUA = 7f80159c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00567, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1382 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00567, readdata = xxxxxxxx
ALUA = 7f80159c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1383 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8015a0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00568, readdata = xxxxxxxx
ALUA = 7f8015a0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1383 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00568, readdata = xxxxxxxx
ALUA = 7f8015a0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1384 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00568, readdata = xxxxxxxx
ALUA = 7f8015a4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00569, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1384 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00569, readdata = xxxxxxxx
ALUA = 7f8015a4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1385 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8015a8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0056a, readdata = xxxxxxxx
ALUA = 7f8015a8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1385 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0056a, readdata = xxxxxxxx
ALUA = 7f8015a8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1386 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0056a, readdata = xxxxxxxx
ALUA = 7f8015ac, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0056b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1386 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0056b, readdata = xxxxxxxx
ALUA = 7f8015ac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1387 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8015b0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0056c, readdata = xxxxxxxx
ALUA = 7f8015b0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1387 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0056c, readdata = xxxxxxxx
ALUA = 7f8015b0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1388 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0056c, readdata = xxxxxxxx
ALUA = 7f8015b4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0056d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1388 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0056d, readdata = xxxxxxxx
ALUA = 7f8015b4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1389 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8015b8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0056e, readdata = xxxxxxxx
ALUA = 7f8015b8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1389 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0056e, readdata = xxxxxxxx
ALUA = 7f8015b8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1390 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0056e, readdata = xxxxxxxx
ALUA = 7f8015bc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0056f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1390 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0056f, readdata = xxxxxxxx
ALUA = 7f8015bc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1391 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8015c0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00570, readdata = xxxxxxxx
ALUA = 7f8015c0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1391 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00570, readdata = xxxxxxxx
ALUA = 7f8015c0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1392 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00570, readdata = xxxxxxxx
ALUA = 7f8015c4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00571, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1392 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00571, readdata = xxxxxxxx
ALUA = 7f8015c4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1393 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8015c8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00572, readdata = xxxxxxxx
ALUA = 7f8015c8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1393 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00572, readdata = xxxxxxxx
ALUA = 7f8015c8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1394 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00572, readdata = xxxxxxxx
ALUA = 7f8015cc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00573, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1394 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00573, readdata = xxxxxxxx
ALUA = 7f8015cc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1395 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8015d0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00574, readdata = xxxxxxxx
ALUA = 7f8015d0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1395 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00574, readdata = xxxxxxxx
ALUA = 7f8015d0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1396 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00574, readdata = xxxxxxxx
ALUA = 7f8015d4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00575, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1396 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00575, readdata = xxxxxxxx
ALUA = 7f8015d4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1397 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8015d8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00576, readdata = xxxxxxxx
ALUA = 7f8015d8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1397 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00576, readdata = xxxxxxxx
ALUA = 7f8015d8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1398 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00576, readdata = xxxxxxxx
ALUA = 7f8015dc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00577, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1398 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00577, readdata = xxxxxxxx
ALUA = 7f8015dc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1399 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8015e0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00578, readdata = xxxxxxxx
ALUA = 7f8015e0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1399 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00578, readdata = xxxxxxxx
ALUA = 7f8015e0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1400 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00578, readdata = xxxxxxxx
ALUA = 7f8015e4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00579, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1400 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00579, readdata = xxxxxxxx
ALUA = 7f8015e4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1401 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8015e8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0057a, readdata = xxxxxxxx
ALUA = 7f8015e8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1401 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0057a, readdata = xxxxxxxx
ALUA = 7f8015e8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1402 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0057a, readdata = xxxxxxxx
ALUA = 7f8015ec, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0057b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1402 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0057b, readdata = xxxxxxxx
ALUA = 7f8015ec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1403 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8015f0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0057c, readdata = xxxxxxxx
ALUA = 7f8015f0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1403 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0057c, readdata = xxxxxxxx
ALUA = 7f8015f0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1404 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0057c, readdata = xxxxxxxx
ALUA = 7f8015f4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0057d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1404 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0057d, readdata = xxxxxxxx
ALUA = 7f8015f4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1405 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8015f8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0057e, readdata = xxxxxxxx
ALUA = 7f8015f8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1405 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0057e, readdata = xxxxxxxx
ALUA = 7f8015f8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1406 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0057e, readdata = xxxxxxxx
ALUA = 7f8015fc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0057f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1406 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0057f, readdata = xxxxxxxx
ALUA = 7f8015fc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1407 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801600, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00580, readdata = xxxxxxxx
ALUA = 7f801600, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1407 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00580, readdata = xxxxxxxx
ALUA = 7f801600, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1408 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00580, readdata = xxxxxxxx
ALUA = 7f801604, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00581, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1408 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00581, readdata = xxxxxxxx
ALUA = 7f801604, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1409 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801608, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00582, readdata = xxxxxxxx
ALUA = 7f801608, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1409 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00582, readdata = xxxxxxxx
ALUA = 7f801608, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1410 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00582, readdata = xxxxxxxx
ALUA = 7f80160c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00583, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1410 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00583, readdata = xxxxxxxx
ALUA = 7f80160c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1411 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801610, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00584, readdata = xxxxxxxx
ALUA = 7f801610, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1411 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00584, readdata = xxxxxxxx
ALUA = 7f801610, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1412 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00584, readdata = xxxxxxxx
ALUA = 7f801614, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00585, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1412 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00585, readdata = xxxxxxxx
ALUA = 7f801614, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1413 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801618, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00586, readdata = xxxxxxxx
ALUA = 7f801618, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1413 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00586, readdata = xxxxxxxx
ALUA = 7f801618, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1414 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00586, readdata = xxxxxxxx
ALUA = 7f80161c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00587, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1414 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00587, readdata = xxxxxxxx
ALUA = 7f80161c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1415 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801620, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00588, readdata = xxxxxxxx
ALUA = 7f801620, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1415 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00588, readdata = xxxxxxxx
ALUA = 7f801620, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1416 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00588, readdata = xxxxxxxx
ALUA = 7f801624, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00589, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1416 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00589, readdata = xxxxxxxx
ALUA = 7f801624, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1417 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801628, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0058a, readdata = xxxxxxxx
ALUA = 7f801628, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1417 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0058a, readdata = xxxxxxxx
ALUA = 7f801628, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1418 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0058a, readdata = xxxxxxxx
ALUA = 7f80162c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0058b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1418 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0058b, readdata = xxxxxxxx
ALUA = 7f80162c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1419 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801630, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0058c, readdata = xxxxxxxx
ALUA = 7f801630, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1419 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0058c, readdata = xxxxxxxx
ALUA = 7f801630, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1420 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0058c, readdata = xxxxxxxx
ALUA = 7f801634, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0058d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1420 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0058d, readdata = xxxxxxxx
ALUA = 7f801634, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1421 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801638, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0058e, readdata = xxxxxxxx
ALUA = 7f801638, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1421 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0058e, readdata = xxxxxxxx
ALUA = 7f801638, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1422 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0058e, readdata = xxxxxxxx
ALUA = 7f80163c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0058f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1422 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0058f, readdata = xxxxxxxx
ALUA = 7f80163c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1423 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801640, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00590, readdata = xxxxxxxx
ALUA = 7f801640, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1423 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00590, readdata = xxxxxxxx
ALUA = 7f801640, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1424 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00590, readdata = xxxxxxxx
ALUA = 7f801644, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00591, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1424 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00591, readdata = xxxxxxxx
ALUA = 7f801644, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1425 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801648, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00592, readdata = xxxxxxxx
ALUA = 7f801648, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1425 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00592, readdata = xxxxxxxx
ALUA = 7f801648, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1426 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00592, readdata = xxxxxxxx
ALUA = 7f80164c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00593, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1426 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00593, readdata = xxxxxxxx
ALUA = 7f80164c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1427 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801650, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00594, readdata = xxxxxxxx
ALUA = 7f801650, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1427 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00594, readdata = xxxxxxxx
ALUA = 7f801650, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1428 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00594, readdata = xxxxxxxx
ALUA = 7f801654, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00595, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1428 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00595, readdata = xxxxxxxx
ALUA = 7f801654, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1429 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801658, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00596, readdata = xxxxxxxx
ALUA = 7f801658, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1429 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00596, readdata = xxxxxxxx
ALUA = 7f801658, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1430 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00596, readdata = xxxxxxxx
ALUA = 7f80165c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00597, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1430 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00597, readdata = xxxxxxxx
ALUA = 7f80165c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1431 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801660, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00598, readdata = xxxxxxxx
ALUA = 7f801660, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1431 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00598, readdata = xxxxxxxx
ALUA = 7f801660, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1432 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00598, readdata = xxxxxxxx
ALUA = 7f801664, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00599, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1432 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00599, readdata = xxxxxxxx
ALUA = 7f801664, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1433 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801668, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0059a, readdata = xxxxxxxx
ALUA = 7f801668, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1433 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0059a, readdata = xxxxxxxx
ALUA = 7f801668, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1434 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0059a, readdata = xxxxxxxx
ALUA = 7f80166c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0059b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1434 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0059b, readdata = xxxxxxxx
ALUA = 7f80166c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1435 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801670, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0059c, readdata = xxxxxxxx
ALUA = 7f801670, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1435 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0059c, readdata = xxxxxxxx
ALUA = 7f801670, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1436 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0059c, readdata = xxxxxxxx
ALUA = 7f801674, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0059d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1436 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0059d, readdata = xxxxxxxx
ALUA = 7f801674, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1437 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801678, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0059e, readdata = xxxxxxxx
ALUA = 7f801678, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1437 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0059e, readdata = xxxxxxxx
ALUA = 7f801678, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1438 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0059e, readdata = xxxxxxxx
ALUA = 7f80167c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0059f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1438 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0059f, readdata = xxxxxxxx
ALUA = 7f80167c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1439 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801680, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005a0, readdata = xxxxxxxx
ALUA = 7f801680, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1439 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005a0, readdata = xxxxxxxx
ALUA = 7f801680, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1440 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe005a0, readdata = xxxxxxxx
ALUA = 7f801684, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005a1, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1440 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005a1, readdata = xxxxxxxx
ALUA = 7f801684, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1441 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801688, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005a2, readdata = xxxxxxxx
ALUA = 7f801688, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1441 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005a2, readdata = xxxxxxxx
ALUA = 7f801688, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1442 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe005a2, readdata = xxxxxxxx
ALUA = 7f80168c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005a3, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1442 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005a3, readdata = xxxxxxxx
ALUA = 7f80168c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1443 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801690, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005a4, readdata = xxxxxxxx
ALUA = 7f801690, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1443 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005a4, readdata = xxxxxxxx
ALUA = 7f801690, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1444 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe005a4, readdata = xxxxxxxx
ALUA = 7f801694, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005a5, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1444 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005a5, readdata = xxxxxxxx
ALUA = 7f801694, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1445 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801698, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005a6, readdata = xxxxxxxx
ALUA = 7f801698, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1445 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005a6, readdata = xxxxxxxx
ALUA = 7f801698, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1446 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe005a6, readdata = xxxxxxxx
ALUA = 7f80169c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005a7, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1446 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005a7, readdata = xxxxxxxx
ALUA = 7f80169c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1447 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8016a0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005a8, readdata = xxxxxxxx
ALUA = 7f8016a0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1447 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005a8, readdata = xxxxxxxx
ALUA = 7f8016a0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1448 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe005a8, readdata = xxxxxxxx
ALUA = 7f8016a4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005a9, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1448 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005a9, readdata = xxxxxxxx
ALUA = 7f8016a4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1449 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8016a8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005aa, readdata = xxxxxxxx
ALUA = 7f8016a8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1449 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005aa, readdata = xxxxxxxx
ALUA = 7f8016a8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1450 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe005aa, readdata = xxxxxxxx
ALUA = 7f8016ac, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005ab, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1450 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005ab, readdata = xxxxxxxx
ALUA = 7f8016ac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1451 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8016b0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005ac, readdata = xxxxxxxx
ALUA = 7f8016b0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1451 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005ac, readdata = xxxxxxxx
ALUA = 7f8016b0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1452 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe005ac, readdata = xxxxxxxx
ALUA = 7f8016b4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005ad, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1452 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005ad, readdata = xxxxxxxx
ALUA = 7f8016b4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1453 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8016b8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005ae, readdata = xxxxxxxx
ALUA = 7f8016b8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1453 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005ae, readdata = xxxxxxxx
ALUA = 7f8016b8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1454 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe005ae, readdata = xxxxxxxx
ALUA = 7f8016bc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005af, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1454 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005af, readdata = xxxxxxxx
ALUA = 7f8016bc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1455 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8016c0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005b0, readdata = xxxxxxxx
ALUA = 7f8016c0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1455 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005b0, readdata = xxxxxxxx
ALUA = 7f8016c0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1456 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe005b0, readdata = xxxxxxxx
ALUA = 7f8016c4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005b1, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1456 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005b1, readdata = xxxxxxxx
ALUA = 7f8016c4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1457 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8016c8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005b2, readdata = xxxxxxxx
ALUA = 7f8016c8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1457 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005b2, readdata = xxxxxxxx
ALUA = 7f8016c8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1458 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe005b2, readdata = xxxxxxxx
ALUA = 7f8016cc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005b3, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1458 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005b3, readdata = xxxxxxxx
ALUA = 7f8016cc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1459 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8016d0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005b4, readdata = xxxxxxxx
ALUA = 7f8016d0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1459 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005b4, readdata = xxxxxxxx
ALUA = 7f8016d0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1460 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe005b4, readdata = xxxxxxxx
ALUA = 7f8016d4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005b5, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1460 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005b5, readdata = xxxxxxxx
ALUA = 7f8016d4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1461 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8016d8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005b6, readdata = xxxxxxxx
ALUA = 7f8016d8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1461 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005b6, readdata = xxxxxxxx
ALUA = 7f8016d8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1462 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe005b6, readdata = xxxxxxxx
ALUA = 7f8016dc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005b7, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1462 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005b7, readdata = xxxxxxxx
ALUA = 7f8016dc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1463 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8016e0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005b8, readdata = xxxxxxxx
ALUA = 7f8016e0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1463 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005b8, readdata = xxxxxxxx
ALUA = 7f8016e0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1464 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe005b8, readdata = xxxxxxxx
ALUA = 7f8016e4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005b9, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1464 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005b9, readdata = xxxxxxxx
ALUA = 7f8016e4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1465 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8016e8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005ba, readdata = xxxxxxxx
ALUA = 7f8016e8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1465 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005ba, readdata = xxxxxxxx
ALUA = 7f8016e8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1466 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe005ba, readdata = xxxxxxxx
ALUA = 7f8016ec, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005bb, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1466 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005bb, readdata = xxxxxxxx
ALUA = 7f8016ec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1467 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8016f0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005bc, readdata = xxxxxxxx
ALUA = 7f8016f0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1467 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005bc, readdata = xxxxxxxx
ALUA = 7f8016f0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1468 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe005bc, readdata = xxxxxxxx
ALUA = 7f8016f4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005bd, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1468 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005bd, readdata = xxxxxxxx
ALUA = 7f8016f4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1469 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8016f8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005be, readdata = xxxxxxxx
ALUA = 7f8016f8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1469 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005be, readdata = xxxxxxxx
ALUA = 7f8016f8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1470 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe005be, readdata = xxxxxxxx
ALUA = 7f8016fc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005bf, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1470 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005bf, readdata = xxxxxxxx
ALUA = 7f8016fc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1471 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801700, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005c0, readdata = xxxxxxxx
ALUA = 7f801700, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1471 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005c0, readdata = xxxxxxxx
ALUA = 7f801700, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1472 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe005c0, readdata = xxxxxxxx
ALUA = 7f801704, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005c1, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1472 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005c1, readdata = xxxxxxxx
ALUA = 7f801704, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1473 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801708, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005c2, readdata = xxxxxxxx
ALUA = 7f801708, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1473 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005c2, readdata = xxxxxxxx
ALUA = 7f801708, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1474 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe005c2, readdata = xxxxxxxx
ALUA = 7f80170c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005c3, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1474 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005c3, readdata = xxxxxxxx
ALUA = 7f80170c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1475 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801710, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005c4, readdata = xxxxxxxx
ALUA = 7f801710, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1475 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005c4, readdata = xxxxxxxx
ALUA = 7f801710, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1476 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe005c4, readdata = xxxxxxxx
ALUA = 7f801714, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005c5, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1476 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005c5, readdata = xxxxxxxx
ALUA = 7f801714, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1477 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801718, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005c6, readdata = xxxxxxxx
ALUA = 7f801718, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1477 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005c6, readdata = xxxxxxxx
ALUA = 7f801718, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1478 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe005c6, readdata = xxxxxxxx
ALUA = 7f80171c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005c7, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1478 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005c7, readdata = xxxxxxxx
ALUA = 7f80171c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1479 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801720, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005c8, readdata = xxxxxxxx
ALUA = 7f801720, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1479 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005c8, readdata = xxxxxxxx
ALUA = 7f801720, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1480 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe005c8, readdata = xxxxxxxx
ALUA = 7f801724, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005c9, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1480 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005c9, readdata = xxxxxxxx
ALUA = 7f801724, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1481 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801728, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005ca, readdata = xxxxxxxx
ALUA = 7f801728, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1481 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005ca, readdata = xxxxxxxx
ALUA = 7f801728, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1482 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe005ca, readdata = xxxxxxxx
ALUA = 7f80172c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005cb, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1482 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005cb, readdata = xxxxxxxx
ALUA = 7f80172c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1483 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801730, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005cc, readdata = xxxxxxxx
ALUA = 7f801730, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1483 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005cc, readdata = xxxxxxxx
ALUA = 7f801730, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1484 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe005cc, readdata = xxxxxxxx
ALUA = 7f801734, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005cd, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1484 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005cd, readdata = xxxxxxxx
ALUA = 7f801734, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1485 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801738, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005ce, readdata = xxxxxxxx
ALUA = 7f801738, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1485 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005ce, readdata = xxxxxxxx
ALUA = 7f801738, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1486 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe005ce, readdata = xxxxxxxx
ALUA = 7f80173c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005cf, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1486 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005cf, readdata = xxxxxxxx
ALUA = 7f80173c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1487 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801740, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005d0, readdata = xxxxxxxx
ALUA = 7f801740, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1487 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005d0, readdata = xxxxxxxx
ALUA = 7f801740, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1488 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe005d0, readdata = xxxxxxxx
ALUA = 7f801744, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005d1, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1488 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005d1, readdata = xxxxxxxx
ALUA = 7f801744, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1489 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801748, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005d2, readdata = xxxxxxxx
ALUA = 7f801748, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1489 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005d2, readdata = xxxxxxxx
ALUA = 7f801748, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1490 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe005d2, readdata = xxxxxxxx
ALUA = 7f80174c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005d3, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1490 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005d3, readdata = xxxxxxxx
ALUA = 7f80174c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1491 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801750, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005d4, readdata = xxxxxxxx
ALUA = 7f801750, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1491 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005d4, readdata = xxxxxxxx
ALUA = 7f801750, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1492 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe005d4, readdata = xxxxxxxx
ALUA = 7f801754, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005d5, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1492 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005d5, readdata = xxxxxxxx
ALUA = 7f801754, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1493 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801758, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005d6, readdata = xxxxxxxx
ALUA = 7f801758, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1493 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005d6, readdata = xxxxxxxx
ALUA = 7f801758, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1494 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe005d6, readdata = xxxxxxxx
ALUA = 7f80175c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005d7, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1494 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005d7, readdata = xxxxxxxx
ALUA = 7f80175c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1495 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801760, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005d8, readdata = xxxxxxxx
ALUA = 7f801760, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1495 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005d8, readdata = xxxxxxxx
ALUA = 7f801760, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1496 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe005d8, readdata = xxxxxxxx
ALUA = 7f801764, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005d9, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1496 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005d9, readdata = xxxxxxxx
ALUA = 7f801764, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1497 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801768, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005da, readdata = xxxxxxxx
ALUA = 7f801768, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1497 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005da, readdata = xxxxxxxx
ALUA = 7f801768, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1498 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe005da, readdata = xxxxxxxx
ALUA = 7f80176c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005db, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1498 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005db, readdata = xxxxxxxx
ALUA = 7f80176c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1499 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801770, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005dc, readdata = xxxxxxxx
ALUA = 7f801770, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1499 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005dc, readdata = xxxxxxxx
ALUA = 7f801770, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1500 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe005dc, readdata = xxxxxxxx
ALUA = 7f801774, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005dd, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1500 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005dd, readdata = xxxxxxxx
ALUA = 7f801774, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1501 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801778, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005de, readdata = xxxxxxxx
ALUA = 7f801778, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1501 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005de, readdata = xxxxxxxx
ALUA = 7f801778, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1502 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe005de, readdata = xxxxxxxx
ALUA = 7f80177c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005df, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1502 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005df, readdata = xxxxxxxx
ALUA = 7f80177c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1503 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801780, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005e0, readdata = xxxxxxxx
ALUA = 7f801780, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1503 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005e0, readdata = xxxxxxxx
ALUA = 7f801780, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1504 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe005e0, readdata = xxxxxxxx
ALUA = 7f801784, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005e1, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1504 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005e1, readdata = xxxxxxxx
ALUA = 7f801784, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1505 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801788, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005e2, readdata = xxxxxxxx
ALUA = 7f801788, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1505 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005e2, readdata = xxxxxxxx
ALUA = 7f801788, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1506 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe005e2, readdata = xxxxxxxx
ALUA = 7f80178c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005e3, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1506 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005e3, readdata = xxxxxxxx
ALUA = 7f80178c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1507 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801790, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005e4, readdata = xxxxxxxx
ALUA = 7f801790, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1507 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005e4, readdata = xxxxxxxx
ALUA = 7f801790, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1508 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe005e4, readdata = xxxxxxxx
ALUA = 7f801794, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005e5, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1508 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005e5, readdata = xxxxxxxx
ALUA = 7f801794, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1509 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801798, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005e6, readdata = xxxxxxxx
ALUA = 7f801798, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1509 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005e6, readdata = xxxxxxxx
ALUA = 7f801798, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1510 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe005e6, readdata = xxxxxxxx
ALUA = 7f80179c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005e7, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1510 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005e7, readdata = xxxxxxxx
ALUA = 7f80179c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1511 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8017a0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005e8, readdata = xxxxxxxx
ALUA = 7f8017a0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1511 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005e8, readdata = xxxxxxxx
ALUA = 7f8017a0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1512 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe005e8, readdata = xxxxxxxx
ALUA = 7f8017a4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005e9, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1512 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005e9, readdata = xxxxxxxx
ALUA = 7f8017a4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1513 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8017a8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005ea, readdata = xxxxxxxx
ALUA = 7f8017a8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1513 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005ea, readdata = xxxxxxxx
ALUA = 7f8017a8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1514 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe005ea, readdata = xxxxxxxx
ALUA = 7f8017ac, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005eb, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1514 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005eb, readdata = xxxxxxxx
ALUA = 7f8017ac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1515 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8017b0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005ec, readdata = xxxxxxxx
ALUA = 7f8017b0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1515 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005ec, readdata = xxxxxxxx
ALUA = 7f8017b0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1516 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe005ec, readdata = xxxxxxxx
ALUA = 7f8017b4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005ed, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1516 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005ed, readdata = xxxxxxxx
ALUA = 7f8017b4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1517 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8017b8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005ee, readdata = xxxxxxxx
ALUA = 7f8017b8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1517 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005ee, readdata = xxxxxxxx
ALUA = 7f8017b8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1518 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe005ee, readdata = xxxxxxxx
ALUA = 7f8017bc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005ef, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1518 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005ef, readdata = xxxxxxxx
ALUA = 7f8017bc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1519 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8017c0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005f0, readdata = xxxxxxxx
ALUA = 7f8017c0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1519 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005f0, readdata = xxxxxxxx
ALUA = 7f8017c0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1520 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe005f0, readdata = xxxxxxxx
ALUA = 7f8017c4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005f1, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1520 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005f1, readdata = xxxxxxxx
ALUA = 7f8017c4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1521 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8017c8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005f2, readdata = xxxxxxxx
ALUA = 7f8017c8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1521 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005f2, readdata = xxxxxxxx
ALUA = 7f8017c8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1522 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe005f2, readdata = xxxxxxxx
ALUA = 7f8017cc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005f3, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1522 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005f3, readdata = xxxxxxxx
ALUA = 7f8017cc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1523 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8017d0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005f4, readdata = xxxxxxxx
ALUA = 7f8017d0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1523 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005f4, readdata = xxxxxxxx
ALUA = 7f8017d0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1524 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe005f4, readdata = xxxxxxxx
ALUA = 7f8017d4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005f5, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1524 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005f5, readdata = xxxxxxxx
ALUA = 7f8017d4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1525 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8017d8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005f6, readdata = xxxxxxxx
ALUA = 7f8017d8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1525 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005f6, readdata = xxxxxxxx
ALUA = 7f8017d8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1526 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe005f6, readdata = xxxxxxxx
ALUA = 7f8017dc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005f7, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1526 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005f7, readdata = xxxxxxxx
ALUA = 7f8017dc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1527 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8017e0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005f8, readdata = xxxxxxxx
ALUA = 7f8017e0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1527 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005f8, readdata = xxxxxxxx
ALUA = 7f8017e0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1528 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe005f8, readdata = xxxxxxxx
ALUA = 7f8017e4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005f9, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1528 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005f9, readdata = xxxxxxxx
ALUA = 7f8017e4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1529 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8017e8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005fa, readdata = xxxxxxxx
ALUA = 7f8017e8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1529 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005fa, readdata = xxxxxxxx
ALUA = 7f8017e8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1530 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe005fa, readdata = xxxxxxxx
ALUA = 7f8017ec, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005fb, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1530 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005fb, readdata = xxxxxxxx
ALUA = 7f8017ec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1531 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8017f0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005fc, readdata = xxxxxxxx
ALUA = 7f8017f0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1531 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005fc, readdata = xxxxxxxx
ALUA = 7f8017f0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1532 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe005fc, readdata = xxxxxxxx
ALUA = 7f8017f4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005fd, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1532 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005fd, readdata = xxxxxxxx
ALUA = 7f8017f4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1533 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8017f8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005fe, readdata = xxxxxxxx
ALUA = 7f8017f8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1533 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005fe, readdata = xxxxxxxx
ALUA = 7f8017f8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1534 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe005fe, readdata = xxxxxxxx
ALUA = 7f8017fc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe005ff, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1534 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe005ff, readdata = xxxxxxxx
ALUA = 7f8017fc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1535 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801800, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00600, readdata = xxxxxxxx
ALUA = 7f801800, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1535 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00600, readdata = xxxxxxxx
ALUA = 7f801800, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1536 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00600, readdata = xxxxxxxx
ALUA = 7f801804, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00601, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1536 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00601, readdata = xxxxxxxx
ALUA = 7f801804, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1537 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801808, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00602, readdata = xxxxxxxx
ALUA = 7f801808, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1537 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00602, readdata = xxxxxxxx
ALUA = 7f801808, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1538 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00602, readdata = xxxxxxxx
ALUA = 7f80180c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00603, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1538 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00603, readdata = xxxxxxxx
ALUA = 7f80180c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1539 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801810, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00604, readdata = xxxxxxxx
ALUA = 7f801810, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1539 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00604, readdata = xxxxxxxx
ALUA = 7f801810, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1540 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00604, readdata = xxxxxxxx
ALUA = 7f801814, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00605, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1540 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00605, readdata = xxxxxxxx
ALUA = 7f801814, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1541 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801818, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00606, readdata = xxxxxxxx
ALUA = 7f801818, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1541 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00606, readdata = xxxxxxxx
ALUA = 7f801818, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1542 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00606, readdata = xxxxxxxx
ALUA = 7f80181c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00607, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1542 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00607, readdata = xxxxxxxx
ALUA = 7f80181c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1543 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801820, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00608, readdata = xxxxxxxx
ALUA = 7f801820, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1543 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00608, readdata = xxxxxxxx
ALUA = 7f801820, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1544 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00608, readdata = xxxxxxxx
ALUA = 7f801824, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00609, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1544 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00609, readdata = xxxxxxxx
ALUA = 7f801824, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1545 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801828, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0060a, readdata = xxxxxxxx
ALUA = 7f801828, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1545 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0060a, readdata = xxxxxxxx
ALUA = 7f801828, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1546 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0060a, readdata = xxxxxxxx
ALUA = 7f80182c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0060b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1546 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0060b, readdata = xxxxxxxx
ALUA = 7f80182c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1547 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801830, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0060c, readdata = xxxxxxxx
ALUA = 7f801830, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1547 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0060c, readdata = xxxxxxxx
ALUA = 7f801830, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1548 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0060c, readdata = xxxxxxxx
ALUA = 7f801834, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0060d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1548 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0060d, readdata = xxxxxxxx
ALUA = 7f801834, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1549 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801838, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0060e, readdata = xxxxxxxx
ALUA = 7f801838, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1549 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0060e, readdata = xxxxxxxx
ALUA = 7f801838, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1550 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0060e, readdata = xxxxxxxx
ALUA = 7f80183c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0060f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1550 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0060f, readdata = xxxxxxxx
ALUA = 7f80183c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1551 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801840, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00610, readdata = xxxxxxxx
ALUA = 7f801840, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1551 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00610, readdata = xxxxxxxx
ALUA = 7f801840, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1552 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00610, readdata = xxxxxxxx
ALUA = 7f801844, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00611, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1552 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00611, readdata = xxxxxxxx
ALUA = 7f801844, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1553 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801848, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00612, readdata = xxxxxxxx
ALUA = 7f801848, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1553 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00612, readdata = xxxxxxxx
ALUA = 7f801848, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1554 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00612, readdata = xxxxxxxx
ALUA = 7f80184c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00613, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1554 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00613, readdata = xxxxxxxx
ALUA = 7f80184c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1555 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801850, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00614, readdata = xxxxxxxx
ALUA = 7f801850, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1555 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00614, readdata = xxxxxxxx
ALUA = 7f801850, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1556 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00614, readdata = xxxxxxxx
ALUA = 7f801854, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00615, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1556 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00615, readdata = xxxxxxxx
ALUA = 7f801854, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1557 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801858, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00616, readdata = xxxxxxxx
ALUA = 7f801858, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1557 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00616, readdata = xxxxxxxx
ALUA = 7f801858, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1558 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00616, readdata = xxxxxxxx
ALUA = 7f80185c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00617, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1558 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00617, readdata = xxxxxxxx
ALUA = 7f80185c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1559 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801860, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00618, readdata = xxxxxxxx
ALUA = 7f801860, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1559 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00618, readdata = xxxxxxxx
ALUA = 7f801860, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1560 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00618, readdata = xxxxxxxx
ALUA = 7f801864, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00619, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1560 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00619, readdata = xxxxxxxx
ALUA = 7f801864, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1561 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801868, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0061a, readdata = xxxxxxxx
ALUA = 7f801868, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1561 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0061a, readdata = xxxxxxxx
ALUA = 7f801868, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1562 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0061a, readdata = xxxxxxxx
ALUA = 7f80186c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0061b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1562 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0061b, readdata = xxxxxxxx
ALUA = 7f80186c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1563 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801870, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0061c, readdata = xxxxxxxx
ALUA = 7f801870, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1563 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0061c, readdata = xxxxxxxx
ALUA = 7f801870, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1564 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0061c, readdata = xxxxxxxx
ALUA = 7f801874, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0061d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1564 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0061d, readdata = xxxxxxxx
ALUA = 7f801874, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1565 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801878, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0061e, readdata = xxxxxxxx
ALUA = 7f801878, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1565 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0061e, readdata = xxxxxxxx
ALUA = 7f801878, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1566 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0061e, readdata = xxxxxxxx
ALUA = 7f80187c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0061f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1566 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0061f, readdata = xxxxxxxx
ALUA = 7f80187c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1567 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801880, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00620, readdata = xxxxxxxx
ALUA = 7f801880, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1567 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00620, readdata = xxxxxxxx
ALUA = 7f801880, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1568 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00620, readdata = xxxxxxxx
ALUA = 7f801884, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00621, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1568 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00621, readdata = xxxxxxxx
ALUA = 7f801884, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1569 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801888, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00622, readdata = xxxxxxxx
ALUA = 7f801888, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1569 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00622, readdata = xxxxxxxx
ALUA = 7f801888, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1570 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00622, readdata = xxxxxxxx
ALUA = 7f80188c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00623, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1570 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00623, readdata = xxxxxxxx
ALUA = 7f80188c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1571 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801890, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00624, readdata = xxxxxxxx
ALUA = 7f801890, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1571 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00624, readdata = xxxxxxxx
ALUA = 7f801890, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1572 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00624, readdata = xxxxxxxx
ALUA = 7f801894, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00625, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1572 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00625, readdata = xxxxxxxx
ALUA = 7f801894, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1573 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801898, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00626, readdata = xxxxxxxx
ALUA = 7f801898, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1573 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00626, readdata = xxxxxxxx
ALUA = 7f801898, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1574 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00626, readdata = xxxxxxxx
ALUA = 7f80189c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00627, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1574 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00627, readdata = xxxxxxxx
ALUA = 7f80189c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1575 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8018a0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00628, readdata = xxxxxxxx
ALUA = 7f8018a0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1575 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00628, readdata = xxxxxxxx
ALUA = 7f8018a0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1576 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00628, readdata = xxxxxxxx
ALUA = 7f8018a4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00629, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1576 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00629, readdata = xxxxxxxx
ALUA = 7f8018a4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1577 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8018a8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0062a, readdata = xxxxxxxx
ALUA = 7f8018a8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1577 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0062a, readdata = xxxxxxxx
ALUA = 7f8018a8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1578 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0062a, readdata = xxxxxxxx
ALUA = 7f8018ac, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0062b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1578 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0062b, readdata = xxxxxxxx
ALUA = 7f8018ac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1579 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8018b0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0062c, readdata = xxxxxxxx
ALUA = 7f8018b0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1579 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0062c, readdata = xxxxxxxx
ALUA = 7f8018b0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1580 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0062c, readdata = xxxxxxxx
ALUA = 7f8018b4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0062d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1580 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0062d, readdata = xxxxxxxx
ALUA = 7f8018b4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1581 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8018b8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0062e, readdata = xxxxxxxx
ALUA = 7f8018b8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1581 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0062e, readdata = xxxxxxxx
ALUA = 7f8018b8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1582 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0062e, readdata = xxxxxxxx
ALUA = 7f8018bc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0062f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1582 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0062f, readdata = xxxxxxxx
ALUA = 7f8018bc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1583 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8018c0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00630, readdata = xxxxxxxx
ALUA = 7f8018c0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1583 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00630, readdata = xxxxxxxx
ALUA = 7f8018c0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1584 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00630, readdata = xxxxxxxx
ALUA = 7f8018c4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00631, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1584 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00631, readdata = xxxxxxxx
ALUA = 7f8018c4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1585 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8018c8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00632, readdata = xxxxxxxx
ALUA = 7f8018c8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1585 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00632, readdata = xxxxxxxx
ALUA = 7f8018c8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1586 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00632, readdata = xxxxxxxx
ALUA = 7f8018cc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00633, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1586 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00633, readdata = xxxxxxxx
ALUA = 7f8018cc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1587 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8018d0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00634, readdata = xxxxxxxx
ALUA = 7f8018d0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1587 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00634, readdata = xxxxxxxx
ALUA = 7f8018d0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1588 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00634, readdata = xxxxxxxx
ALUA = 7f8018d4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00635, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1588 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00635, readdata = xxxxxxxx
ALUA = 7f8018d4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1589 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8018d8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00636, readdata = xxxxxxxx
ALUA = 7f8018d8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1589 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00636, readdata = xxxxxxxx
ALUA = 7f8018d8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1590 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00636, readdata = xxxxxxxx
ALUA = 7f8018dc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00637, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1590 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00637, readdata = xxxxxxxx
ALUA = 7f8018dc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1591 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8018e0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00638, readdata = xxxxxxxx
ALUA = 7f8018e0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1591 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00638, readdata = xxxxxxxx
ALUA = 7f8018e0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1592 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00638, readdata = xxxxxxxx
ALUA = 7f8018e4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00639, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1592 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00639, readdata = xxxxxxxx
ALUA = 7f8018e4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1593 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8018e8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0063a, readdata = xxxxxxxx
ALUA = 7f8018e8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1593 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0063a, readdata = xxxxxxxx
ALUA = 7f8018e8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1594 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0063a, readdata = xxxxxxxx
ALUA = 7f8018ec, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0063b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1594 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0063b, readdata = xxxxxxxx
ALUA = 7f8018ec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1595 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8018f0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0063c, readdata = xxxxxxxx
ALUA = 7f8018f0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1595 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0063c, readdata = xxxxxxxx
ALUA = 7f8018f0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1596 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0063c, readdata = xxxxxxxx
ALUA = 7f8018f4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0063d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1596 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0063d, readdata = xxxxxxxx
ALUA = 7f8018f4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1597 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8018f8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0063e, readdata = xxxxxxxx
ALUA = 7f8018f8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1597 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0063e, readdata = xxxxxxxx
ALUA = 7f8018f8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1598 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0063e, readdata = xxxxxxxx
ALUA = 7f8018fc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0063f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1598 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0063f, readdata = xxxxxxxx
ALUA = 7f8018fc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1599 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801900, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00640, readdata = xxxxxxxx
ALUA = 7f801900, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1599 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00640, readdata = xxxxxxxx
ALUA = 7f801900, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1600 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00640, readdata = xxxxxxxx
ALUA = 7f801904, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00641, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1600 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00641, readdata = xxxxxxxx
ALUA = 7f801904, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1601 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801908, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00642, readdata = xxxxxxxx
ALUA = 7f801908, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1601 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00642, readdata = xxxxxxxx
ALUA = 7f801908, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1602 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00642, readdata = xxxxxxxx
ALUA = 7f80190c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00643, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1602 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00643, readdata = xxxxxxxx
ALUA = 7f80190c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1603 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801910, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00644, readdata = xxxxxxxx
ALUA = 7f801910, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1603 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00644, readdata = xxxxxxxx
ALUA = 7f801910, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1604 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00644, readdata = xxxxxxxx
ALUA = 7f801914, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00645, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1604 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00645, readdata = xxxxxxxx
ALUA = 7f801914, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1605 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801918, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00646, readdata = xxxxxxxx
ALUA = 7f801918, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1605 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00646, readdata = xxxxxxxx
ALUA = 7f801918, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1606 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00646, readdata = xxxxxxxx
ALUA = 7f80191c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00647, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1606 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00647, readdata = xxxxxxxx
ALUA = 7f80191c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1607 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801920, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00648, readdata = xxxxxxxx
ALUA = 7f801920, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1607 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00648, readdata = xxxxxxxx
ALUA = 7f801920, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1608 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00648, readdata = xxxxxxxx
ALUA = 7f801924, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00649, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1608 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00649, readdata = xxxxxxxx
ALUA = 7f801924, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1609 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801928, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0064a, readdata = xxxxxxxx
ALUA = 7f801928, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1609 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0064a, readdata = xxxxxxxx
ALUA = 7f801928, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1610 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0064a, readdata = xxxxxxxx
ALUA = 7f80192c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0064b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1610 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0064b, readdata = xxxxxxxx
ALUA = 7f80192c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1611 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801930, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0064c, readdata = xxxxxxxx
ALUA = 7f801930, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1611 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0064c, readdata = xxxxxxxx
ALUA = 7f801930, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1612 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0064c, readdata = xxxxxxxx
ALUA = 7f801934, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0064d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1612 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0064d, readdata = xxxxxxxx
ALUA = 7f801934, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1613 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801938, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0064e, readdata = xxxxxxxx
ALUA = 7f801938, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1613 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0064e, readdata = xxxxxxxx
ALUA = 7f801938, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1614 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0064e, readdata = xxxxxxxx
ALUA = 7f80193c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0064f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1614 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0064f, readdata = xxxxxxxx
ALUA = 7f80193c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1615 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801940, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00650, readdata = xxxxxxxx
ALUA = 7f801940, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1615 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00650, readdata = xxxxxxxx
ALUA = 7f801940, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1616 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00650, readdata = xxxxxxxx
ALUA = 7f801944, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00651, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1616 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00651, readdata = xxxxxxxx
ALUA = 7f801944, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1617 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801948, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00652, readdata = xxxxxxxx
ALUA = 7f801948, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1617 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00652, readdata = xxxxxxxx
ALUA = 7f801948, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1618 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00652, readdata = xxxxxxxx
ALUA = 7f80194c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00653, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1618 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00653, readdata = xxxxxxxx
ALUA = 7f80194c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1619 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801950, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00654, readdata = xxxxxxxx
ALUA = 7f801950, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1619 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00654, readdata = xxxxxxxx
ALUA = 7f801950, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1620 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00654, readdata = xxxxxxxx
ALUA = 7f801954, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00655, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1620 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00655, readdata = xxxxxxxx
ALUA = 7f801954, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1621 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801958, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00656, readdata = xxxxxxxx
ALUA = 7f801958, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1621 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00656, readdata = xxxxxxxx
ALUA = 7f801958, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1622 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00656, readdata = xxxxxxxx
ALUA = 7f80195c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00657, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1622 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00657, readdata = xxxxxxxx
ALUA = 7f80195c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1623 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801960, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00658, readdata = xxxxxxxx
ALUA = 7f801960, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1623 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00658, readdata = xxxxxxxx
ALUA = 7f801960, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1624 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00658, readdata = xxxxxxxx
ALUA = 7f801964, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00659, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1624 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00659, readdata = xxxxxxxx
ALUA = 7f801964, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1625 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801968, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0065a, readdata = xxxxxxxx
ALUA = 7f801968, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1625 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0065a, readdata = xxxxxxxx
ALUA = 7f801968, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1626 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0065a, readdata = xxxxxxxx
ALUA = 7f80196c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0065b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1626 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0065b, readdata = xxxxxxxx
ALUA = 7f80196c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1627 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801970, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0065c, readdata = xxxxxxxx
ALUA = 7f801970, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1627 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0065c, readdata = xxxxxxxx
ALUA = 7f801970, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1628 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0065c, readdata = xxxxxxxx
ALUA = 7f801974, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0065d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1628 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0065d, readdata = xxxxxxxx
ALUA = 7f801974, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1629 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801978, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0065e, readdata = xxxxxxxx
ALUA = 7f801978, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1629 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0065e, readdata = xxxxxxxx
ALUA = 7f801978, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1630 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0065e, readdata = xxxxxxxx
ALUA = 7f80197c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0065f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1630 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0065f, readdata = xxxxxxxx
ALUA = 7f80197c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1631 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801980, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00660, readdata = xxxxxxxx
ALUA = 7f801980, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1631 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00660, readdata = xxxxxxxx
ALUA = 7f801980, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1632 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00660, readdata = xxxxxxxx
ALUA = 7f801984, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00661, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1632 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00661, readdata = xxxxxxxx
ALUA = 7f801984, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1633 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801988, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00662, readdata = xxxxxxxx
ALUA = 7f801988, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1633 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00662, readdata = xxxxxxxx
ALUA = 7f801988, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1634 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00662, readdata = xxxxxxxx
ALUA = 7f80198c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00663, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1634 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00663, readdata = xxxxxxxx
ALUA = 7f80198c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1635 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801990, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00664, readdata = xxxxxxxx
ALUA = 7f801990, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1635 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00664, readdata = xxxxxxxx
ALUA = 7f801990, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1636 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00664, readdata = xxxxxxxx
ALUA = 7f801994, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00665, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1636 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00665, readdata = xxxxxxxx
ALUA = 7f801994, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1637 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801998, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00666, readdata = xxxxxxxx
ALUA = 7f801998, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1637 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00666, readdata = xxxxxxxx
ALUA = 7f801998, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1638 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00666, readdata = xxxxxxxx
ALUA = 7f80199c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00667, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1638 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00667, readdata = xxxxxxxx
ALUA = 7f80199c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1639 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8019a0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00668, readdata = xxxxxxxx
ALUA = 7f8019a0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1639 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00668, readdata = xxxxxxxx
ALUA = 7f8019a0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1640 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00668, readdata = xxxxxxxx
ALUA = 7f8019a4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00669, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1640 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00669, readdata = xxxxxxxx
ALUA = 7f8019a4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1641 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8019a8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0066a, readdata = xxxxxxxx
ALUA = 7f8019a8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1641 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0066a, readdata = xxxxxxxx
ALUA = 7f8019a8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1642 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0066a, readdata = xxxxxxxx
ALUA = 7f8019ac, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0066b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1642 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0066b, readdata = xxxxxxxx
ALUA = 7f8019ac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1643 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8019b0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0066c, readdata = xxxxxxxx
ALUA = 7f8019b0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1643 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0066c, readdata = xxxxxxxx
ALUA = 7f8019b0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1644 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0066c, readdata = xxxxxxxx
ALUA = 7f8019b4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0066d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1644 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0066d, readdata = xxxxxxxx
ALUA = 7f8019b4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1645 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8019b8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0066e, readdata = xxxxxxxx
ALUA = 7f8019b8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1645 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0066e, readdata = xxxxxxxx
ALUA = 7f8019b8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1646 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0066e, readdata = xxxxxxxx
ALUA = 7f8019bc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0066f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1646 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0066f, readdata = xxxxxxxx
ALUA = 7f8019bc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1647 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8019c0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00670, readdata = xxxxxxxx
ALUA = 7f8019c0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1647 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00670, readdata = xxxxxxxx
ALUA = 7f8019c0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1648 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00670, readdata = xxxxxxxx
ALUA = 7f8019c4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00671, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1648 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00671, readdata = xxxxxxxx
ALUA = 7f8019c4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1649 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8019c8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00672, readdata = xxxxxxxx
ALUA = 7f8019c8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1649 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00672, readdata = xxxxxxxx
ALUA = 7f8019c8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1650 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00672, readdata = xxxxxxxx
ALUA = 7f8019cc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00673, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1650 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00673, readdata = xxxxxxxx
ALUA = 7f8019cc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1651 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8019d0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00674, readdata = xxxxxxxx
ALUA = 7f8019d0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1651 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00674, readdata = xxxxxxxx
ALUA = 7f8019d0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1652 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00674, readdata = xxxxxxxx
ALUA = 7f8019d4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00675, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1652 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00675, readdata = xxxxxxxx
ALUA = 7f8019d4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1653 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8019d8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00676, readdata = xxxxxxxx
ALUA = 7f8019d8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1653 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00676, readdata = xxxxxxxx
ALUA = 7f8019d8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1654 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00676, readdata = xxxxxxxx
ALUA = 7f8019dc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00677, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1654 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00677, readdata = xxxxxxxx
ALUA = 7f8019dc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1655 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8019e0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00678, readdata = xxxxxxxx
ALUA = 7f8019e0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1655 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00678, readdata = xxxxxxxx
ALUA = 7f8019e0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1656 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00678, readdata = xxxxxxxx
ALUA = 7f8019e4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00679, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1656 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00679, readdata = xxxxxxxx
ALUA = 7f8019e4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1657 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8019e8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0067a, readdata = xxxxxxxx
ALUA = 7f8019e8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1657 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0067a, readdata = xxxxxxxx
ALUA = 7f8019e8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1658 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0067a, readdata = xxxxxxxx
ALUA = 7f8019ec, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0067b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1658 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0067b, readdata = xxxxxxxx
ALUA = 7f8019ec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1659 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8019f0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0067c, readdata = xxxxxxxx
ALUA = 7f8019f0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1659 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0067c, readdata = xxxxxxxx
ALUA = 7f8019f0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1660 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0067c, readdata = xxxxxxxx
ALUA = 7f8019f4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0067d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1660 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0067d, readdata = xxxxxxxx
ALUA = 7f8019f4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1661 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f8019f8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0067e, readdata = xxxxxxxx
ALUA = 7f8019f8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1661 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0067e, readdata = xxxxxxxx
ALUA = 7f8019f8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1662 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0067e, readdata = xxxxxxxx
ALUA = 7f8019fc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0067f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1662 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0067f, readdata = xxxxxxxx
ALUA = 7f8019fc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1663 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801a00, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00680, readdata = xxxxxxxx
ALUA = 7f801a00, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1663 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00680, readdata = xxxxxxxx
ALUA = 7f801a00, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1664 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00680, readdata = xxxxxxxx
ALUA = 7f801a04, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00681, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1664 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00681, readdata = xxxxxxxx
ALUA = 7f801a04, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1665 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801a08, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00682, readdata = xxxxxxxx
ALUA = 7f801a08, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1665 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00682, readdata = xxxxxxxx
ALUA = 7f801a08, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1666 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00682, readdata = xxxxxxxx
ALUA = 7f801a0c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00683, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1666 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00683, readdata = xxxxxxxx
ALUA = 7f801a0c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1667 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801a10, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00684, readdata = xxxxxxxx
ALUA = 7f801a10, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1667 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00684, readdata = xxxxxxxx
ALUA = 7f801a10, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1668 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00684, readdata = xxxxxxxx
ALUA = 7f801a14, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00685, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1668 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00685, readdata = xxxxxxxx
ALUA = 7f801a14, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1669 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801a18, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00686, readdata = xxxxxxxx
ALUA = 7f801a18, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1669 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00686, readdata = xxxxxxxx
ALUA = 7f801a18, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1670 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00686, readdata = xxxxxxxx
ALUA = 7f801a1c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00687, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1670 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00687, readdata = xxxxxxxx
ALUA = 7f801a1c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1671 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801a20, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00688, readdata = xxxxxxxx
ALUA = 7f801a20, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1671 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00688, readdata = xxxxxxxx
ALUA = 7f801a20, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1672 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00688, readdata = xxxxxxxx
ALUA = 7f801a24, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00689, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1672 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00689, readdata = xxxxxxxx
ALUA = 7f801a24, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1673 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801a28, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0068a, readdata = xxxxxxxx
ALUA = 7f801a28, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1673 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0068a, readdata = xxxxxxxx
ALUA = 7f801a28, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1674 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0068a, readdata = xxxxxxxx
ALUA = 7f801a2c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0068b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1674 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0068b, readdata = xxxxxxxx
ALUA = 7f801a2c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1675 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801a30, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0068c, readdata = xxxxxxxx
ALUA = 7f801a30, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1675 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0068c, readdata = xxxxxxxx
ALUA = 7f801a30, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1676 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0068c, readdata = xxxxxxxx
ALUA = 7f801a34, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0068d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1676 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0068d, readdata = xxxxxxxx
ALUA = 7f801a34, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1677 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801a38, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0068e, readdata = xxxxxxxx
ALUA = 7f801a38, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1677 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0068e, readdata = xxxxxxxx
ALUA = 7f801a38, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1678 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0068e, readdata = xxxxxxxx
ALUA = 7f801a3c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0068f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1678 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0068f, readdata = xxxxxxxx
ALUA = 7f801a3c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1679 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801a40, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00690, readdata = xxxxxxxx
ALUA = 7f801a40, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1679 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00690, readdata = xxxxxxxx
ALUA = 7f801a40, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1680 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00690, readdata = xxxxxxxx
ALUA = 7f801a44, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00691, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1680 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00691, readdata = xxxxxxxx
ALUA = 7f801a44, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1681 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801a48, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00692, readdata = xxxxxxxx
ALUA = 7f801a48, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1681 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00692, readdata = xxxxxxxx
ALUA = 7f801a48, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1682 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00692, readdata = xxxxxxxx
ALUA = 7f801a4c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00693, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1682 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00693, readdata = xxxxxxxx
ALUA = 7f801a4c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1683 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801a50, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00694, readdata = xxxxxxxx
ALUA = 7f801a50, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1683 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00694, readdata = xxxxxxxx
ALUA = 7f801a50, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1684 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00694, readdata = xxxxxxxx
ALUA = 7f801a54, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00695, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1684 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00695, readdata = xxxxxxxx
ALUA = 7f801a54, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1685 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801a58, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00696, readdata = xxxxxxxx
ALUA = 7f801a58, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1685 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00696, readdata = xxxxxxxx
ALUA = 7f801a58, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1686 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00696, readdata = xxxxxxxx
ALUA = 7f801a5c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00697, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1686 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00697, readdata = xxxxxxxx
ALUA = 7f801a5c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1687 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801a60, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00698, readdata = xxxxxxxx
ALUA = 7f801a60, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1687 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00698, readdata = xxxxxxxx
ALUA = 7f801a60, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1688 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00698, readdata = xxxxxxxx
ALUA = 7f801a64, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00699, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1688 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00699, readdata = xxxxxxxx
ALUA = 7f801a64, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1689 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801a68, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0069a, readdata = xxxxxxxx
ALUA = 7f801a68, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1689 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0069a, readdata = xxxxxxxx
ALUA = 7f801a68, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1690 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0069a, readdata = xxxxxxxx
ALUA = 7f801a6c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0069b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1690 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0069b, readdata = xxxxxxxx
ALUA = 7f801a6c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1691 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801a70, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0069c, readdata = xxxxxxxx
ALUA = 7f801a70, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1691 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0069c, readdata = xxxxxxxx
ALUA = 7f801a70, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1692 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0069c, readdata = xxxxxxxx
ALUA = 7f801a74, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0069d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1692 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0069d, readdata = xxxxxxxx
ALUA = 7f801a74, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1693 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801a78, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0069e, readdata = xxxxxxxx
ALUA = 7f801a78, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1693 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0069e, readdata = xxxxxxxx
ALUA = 7f801a78, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1694 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0069e, readdata = xxxxxxxx
ALUA = 7f801a7c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0069f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1694 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0069f, readdata = xxxxxxxx
ALUA = 7f801a7c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1695 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801a80, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006a0, readdata = xxxxxxxx
ALUA = 7f801a80, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1695 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006a0, readdata = xxxxxxxx
ALUA = 7f801a80, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1696 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe006a0, readdata = xxxxxxxx
ALUA = 7f801a84, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006a1, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1696 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006a1, readdata = xxxxxxxx
ALUA = 7f801a84, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1697 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801a88, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006a2, readdata = xxxxxxxx
ALUA = 7f801a88, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1697 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006a2, readdata = xxxxxxxx
ALUA = 7f801a88, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1698 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe006a2, readdata = xxxxxxxx
ALUA = 7f801a8c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006a3, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1698 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006a3, readdata = xxxxxxxx
ALUA = 7f801a8c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1699 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801a90, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006a4, readdata = xxxxxxxx
ALUA = 7f801a90, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1699 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006a4, readdata = xxxxxxxx
ALUA = 7f801a90, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1700 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe006a4, readdata = xxxxxxxx
ALUA = 7f801a94, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006a5, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1700 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006a5, readdata = xxxxxxxx
ALUA = 7f801a94, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1701 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801a98, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006a6, readdata = xxxxxxxx
ALUA = 7f801a98, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1701 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006a6, readdata = xxxxxxxx
ALUA = 7f801a98, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1702 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe006a6, readdata = xxxxxxxx
ALUA = 7f801a9c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006a7, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1702 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006a7, readdata = xxxxxxxx
ALUA = 7f801a9c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1703 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801aa0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006a8, readdata = xxxxxxxx
ALUA = 7f801aa0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1703 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006a8, readdata = xxxxxxxx
ALUA = 7f801aa0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1704 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe006a8, readdata = xxxxxxxx
ALUA = 7f801aa4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006a9, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1704 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006a9, readdata = xxxxxxxx
ALUA = 7f801aa4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1705 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801aa8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006aa, readdata = xxxxxxxx
ALUA = 7f801aa8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1705 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006aa, readdata = xxxxxxxx
ALUA = 7f801aa8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1706 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe006aa, readdata = xxxxxxxx
ALUA = 7f801aac, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006ab, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1706 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006ab, readdata = xxxxxxxx
ALUA = 7f801aac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1707 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801ab0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006ac, readdata = xxxxxxxx
ALUA = 7f801ab0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1707 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006ac, readdata = xxxxxxxx
ALUA = 7f801ab0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1708 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe006ac, readdata = xxxxxxxx
ALUA = 7f801ab4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006ad, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1708 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006ad, readdata = xxxxxxxx
ALUA = 7f801ab4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1709 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801ab8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006ae, readdata = xxxxxxxx
ALUA = 7f801ab8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1709 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006ae, readdata = xxxxxxxx
ALUA = 7f801ab8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1710 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe006ae, readdata = xxxxxxxx
ALUA = 7f801abc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006af, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1710 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006af, readdata = xxxxxxxx
ALUA = 7f801abc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1711 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801ac0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006b0, readdata = xxxxxxxx
ALUA = 7f801ac0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1711 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006b0, readdata = xxxxxxxx
ALUA = 7f801ac0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1712 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe006b0, readdata = xxxxxxxx
ALUA = 7f801ac4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006b1, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1712 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006b1, readdata = xxxxxxxx
ALUA = 7f801ac4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1713 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801ac8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006b2, readdata = xxxxxxxx
ALUA = 7f801ac8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1713 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006b2, readdata = xxxxxxxx
ALUA = 7f801ac8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1714 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe006b2, readdata = xxxxxxxx
ALUA = 7f801acc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006b3, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1714 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006b3, readdata = xxxxxxxx
ALUA = 7f801acc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1715 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801ad0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006b4, readdata = xxxxxxxx
ALUA = 7f801ad0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1715 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006b4, readdata = xxxxxxxx
ALUA = 7f801ad0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1716 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe006b4, readdata = xxxxxxxx
ALUA = 7f801ad4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006b5, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1716 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006b5, readdata = xxxxxxxx
ALUA = 7f801ad4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1717 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801ad8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006b6, readdata = xxxxxxxx
ALUA = 7f801ad8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1717 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006b6, readdata = xxxxxxxx
ALUA = 7f801ad8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1718 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe006b6, readdata = xxxxxxxx
ALUA = 7f801adc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006b7, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1718 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006b7, readdata = xxxxxxxx
ALUA = 7f801adc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1719 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801ae0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006b8, readdata = xxxxxxxx
ALUA = 7f801ae0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1719 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006b8, readdata = xxxxxxxx
ALUA = 7f801ae0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1720 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe006b8, readdata = xxxxxxxx
ALUA = 7f801ae4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006b9, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1720 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006b9, readdata = xxxxxxxx
ALUA = 7f801ae4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1721 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801ae8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006ba, readdata = xxxxxxxx
ALUA = 7f801ae8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1721 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006ba, readdata = xxxxxxxx
ALUA = 7f801ae8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1722 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe006ba, readdata = xxxxxxxx
ALUA = 7f801aec, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006bb, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1722 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006bb, readdata = xxxxxxxx
ALUA = 7f801aec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1723 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801af0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006bc, readdata = xxxxxxxx
ALUA = 7f801af0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1723 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006bc, readdata = xxxxxxxx
ALUA = 7f801af0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1724 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe006bc, readdata = xxxxxxxx
ALUA = 7f801af4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006bd, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1724 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006bd, readdata = xxxxxxxx
ALUA = 7f801af4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1725 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801af8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006be, readdata = xxxxxxxx
ALUA = 7f801af8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1725 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006be, readdata = xxxxxxxx
ALUA = 7f801af8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1726 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe006be, readdata = xxxxxxxx
ALUA = 7f801afc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006bf, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1726 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006bf, readdata = xxxxxxxx
ALUA = 7f801afc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1727 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801b00, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006c0, readdata = xxxxxxxx
ALUA = 7f801b00, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1727 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006c0, readdata = xxxxxxxx
ALUA = 7f801b00, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1728 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe006c0, readdata = xxxxxxxx
ALUA = 7f801b04, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006c1, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1728 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006c1, readdata = xxxxxxxx
ALUA = 7f801b04, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1729 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801b08, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006c2, readdata = xxxxxxxx
ALUA = 7f801b08, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1729 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006c2, readdata = xxxxxxxx
ALUA = 7f801b08, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1730 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe006c2, readdata = xxxxxxxx
ALUA = 7f801b0c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006c3, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1730 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006c3, readdata = xxxxxxxx
ALUA = 7f801b0c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1731 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801b10, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006c4, readdata = xxxxxxxx
ALUA = 7f801b10, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1731 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006c4, readdata = xxxxxxxx
ALUA = 7f801b10, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1732 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe006c4, readdata = xxxxxxxx
ALUA = 7f801b14, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006c5, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1732 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006c5, readdata = xxxxxxxx
ALUA = 7f801b14, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1733 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801b18, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006c6, readdata = xxxxxxxx
ALUA = 7f801b18, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1733 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006c6, readdata = xxxxxxxx
ALUA = 7f801b18, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1734 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe006c6, readdata = xxxxxxxx
ALUA = 7f801b1c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006c7, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1734 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006c7, readdata = xxxxxxxx
ALUA = 7f801b1c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1735 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801b20, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006c8, readdata = xxxxxxxx
ALUA = 7f801b20, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1735 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006c8, readdata = xxxxxxxx
ALUA = 7f801b20, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1736 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe006c8, readdata = xxxxxxxx
ALUA = 7f801b24, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006c9, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1736 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006c9, readdata = xxxxxxxx
ALUA = 7f801b24, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1737 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801b28, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006ca, readdata = xxxxxxxx
ALUA = 7f801b28, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1737 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006ca, readdata = xxxxxxxx
ALUA = 7f801b28, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1738 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe006ca, readdata = xxxxxxxx
ALUA = 7f801b2c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006cb, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1738 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006cb, readdata = xxxxxxxx
ALUA = 7f801b2c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1739 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801b30, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006cc, readdata = xxxxxxxx
ALUA = 7f801b30, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1739 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006cc, readdata = xxxxxxxx
ALUA = 7f801b30, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1740 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe006cc, readdata = xxxxxxxx
ALUA = 7f801b34, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006cd, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1740 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006cd, readdata = xxxxxxxx
ALUA = 7f801b34, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1741 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801b38, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006ce, readdata = xxxxxxxx
ALUA = 7f801b38, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1741 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006ce, readdata = xxxxxxxx
ALUA = 7f801b38, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1742 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe006ce, readdata = xxxxxxxx
ALUA = 7f801b3c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006cf, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1742 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006cf, readdata = xxxxxxxx
ALUA = 7f801b3c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1743 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801b40, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006d0, readdata = xxxxxxxx
ALUA = 7f801b40, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1743 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006d0, readdata = xxxxxxxx
ALUA = 7f801b40, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1744 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe006d0, readdata = xxxxxxxx
ALUA = 7f801b44, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006d1, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1744 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006d1, readdata = xxxxxxxx
ALUA = 7f801b44, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1745 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801b48, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006d2, readdata = xxxxxxxx
ALUA = 7f801b48, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1745 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006d2, readdata = xxxxxxxx
ALUA = 7f801b48, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1746 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe006d2, readdata = xxxxxxxx
ALUA = 7f801b4c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006d3, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1746 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006d3, readdata = xxxxxxxx
ALUA = 7f801b4c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1747 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801b50, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006d4, readdata = xxxxxxxx
ALUA = 7f801b50, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1747 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006d4, readdata = xxxxxxxx
ALUA = 7f801b50, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1748 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe006d4, readdata = xxxxxxxx
ALUA = 7f801b54, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006d5, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1748 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006d5, readdata = xxxxxxxx
ALUA = 7f801b54, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1749 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801b58, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006d6, readdata = xxxxxxxx
ALUA = 7f801b58, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1749 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006d6, readdata = xxxxxxxx
ALUA = 7f801b58, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1750 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe006d6, readdata = xxxxxxxx
ALUA = 7f801b5c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006d7, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1750 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006d7, readdata = xxxxxxxx
ALUA = 7f801b5c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1751 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801b60, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006d8, readdata = xxxxxxxx
ALUA = 7f801b60, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1751 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006d8, readdata = xxxxxxxx
ALUA = 7f801b60, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1752 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe006d8, readdata = xxxxxxxx
ALUA = 7f801b64, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006d9, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1752 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006d9, readdata = xxxxxxxx
ALUA = 7f801b64, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1753 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801b68, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006da, readdata = xxxxxxxx
ALUA = 7f801b68, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1753 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006da, readdata = xxxxxxxx
ALUA = 7f801b68, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1754 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe006da, readdata = xxxxxxxx
ALUA = 7f801b6c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006db, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1754 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006db, readdata = xxxxxxxx
ALUA = 7f801b6c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1755 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801b70, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006dc, readdata = xxxxxxxx
ALUA = 7f801b70, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1755 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006dc, readdata = xxxxxxxx
ALUA = 7f801b70, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1756 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe006dc, readdata = xxxxxxxx
ALUA = 7f801b74, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006dd, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1756 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006dd, readdata = xxxxxxxx
ALUA = 7f801b74, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1757 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801b78, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006de, readdata = xxxxxxxx
ALUA = 7f801b78, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1757 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006de, readdata = xxxxxxxx
ALUA = 7f801b78, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1758 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe006de, readdata = xxxxxxxx
ALUA = 7f801b7c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006df, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1758 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006df, readdata = xxxxxxxx
ALUA = 7f801b7c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1759 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801b80, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006e0, readdata = xxxxxxxx
ALUA = 7f801b80, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1759 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006e0, readdata = xxxxxxxx
ALUA = 7f801b80, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1760 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe006e0, readdata = xxxxxxxx
ALUA = 7f801b84, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006e1, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1760 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006e1, readdata = xxxxxxxx
ALUA = 7f801b84, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1761 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801b88, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006e2, readdata = xxxxxxxx
ALUA = 7f801b88, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1761 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006e2, readdata = xxxxxxxx
ALUA = 7f801b88, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1762 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe006e2, readdata = xxxxxxxx
ALUA = 7f801b8c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006e3, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1762 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006e3, readdata = xxxxxxxx
ALUA = 7f801b8c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1763 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801b90, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006e4, readdata = xxxxxxxx
ALUA = 7f801b90, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1763 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006e4, readdata = xxxxxxxx
ALUA = 7f801b90, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1764 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe006e4, readdata = xxxxxxxx
ALUA = 7f801b94, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006e5, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1764 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006e5, readdata = xxxxxxxx
ALUA = 7f801b94, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1765 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801b98, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006e6, readdata = xxxxxxxx
ALUA = 7f801b98, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1765 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006e6, readdata = xxxxxxxx
ALUA = 7f801b98, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1766 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe006e6, readdata = xxxxxxxx
ALUA = 7f801b9c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006e7, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1766 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006e7, readdata = xxxxxxxx
ALUA = 7f801b9c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1767 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801ba0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006e8, readdata = xxxxxxxx
ALUA = 7f801ba0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1767 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006e8, readdata = xxxxxxxx
ALUA = 7f801ba0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1768 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe006e8, readdata = xxxxxxxx
ALUA = 7f801ba4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006e9, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1768 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006e9, readdata = xxxxxxxx
ALUA = 7f801ba4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1769 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801ba8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006ea, readdata = xxxxxxxx
ALUA = 7f801ba8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1769 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006ea, readdata = xxxxxxxx
ALUA = 7f801ba8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1770 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe006ea, readdata = xxxxxxxx
ALUA = 7f801bac, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006eb, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1770 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006eb, readdata = xxxxxxxx
ALUA = 7f801bac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1771 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801bb0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006ec, readdata = xxxxxxxx
ALUA = 7f801bb0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1771 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006ec, readdata = xxxxxxxx
ALUA = 7f801bb0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1772 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe006ec, readdata = xxxxxxxx
ALUA = 7f801bb4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006ed, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1772 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006ed, readdata = xxxxxxxx
ALUA = 7f801bb4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1773 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801bb8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006ee, readdata = xxxxxxxx
ALUA = 7f801bb8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1773 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006ee, readdata = xxxxxxxx
ALUA = 7f801bb8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1774 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe006ee, readdata = xxxxxxxx
ALUA = 7f801bbc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006ef, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1774 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006ef, readdata = xxxxxxxx
ALUA = 7f801bbc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1775 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801bc0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006f0, readdata = xxxxxxxx
ALUA = 7f801bc0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1775 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006f0, readdata = xxxxxxxx
ALUA = 7f801bc0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1776 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe006f0, readdata = xxxxxxxx
ALUA = 7f801bc4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006f1, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1776 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006f1, readdata = xxxxxxxx
ALUA = 7f801bc4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1777 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801bc8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006f2, readdata = xxxxxxxx
ALUA = 7f801bc8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1777 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006f2, readdata = xxxxxxxx
ALUA = 7f801bc8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1778 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe006f2, readdata = xxxxxxxx
ALUA = 7f801bcc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006f3, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1778 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006f3, readdata = xxxxxxxx
ALUA = 7f801bcc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1779 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801bd0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006f4, readdata = xxxxxxxx
ALUA = 7f801bd0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1779 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006f4, readdata = xxxxxxxx
ALUA = 7f801bd0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1780 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe006f4, readdata = xxxxxxxx
ALUA = 7f801bd4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006f5, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1780 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006f5, readdata = xxxxxxxx
ALUA = 7f801bd4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1781 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801bd8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006f6, readdata = xxxxxxxx
ALUA = 7f801bd8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1781 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006f6, readdata = xxxxxxxx
ALUA = 7f801bd8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1782 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe006f6, readdata = xxxxxxxx
ALUA = 7f801bdc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006f7, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1782 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006f7, readdata = xxxxxxxx
ALUA = 7f801bdc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1783 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801be0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006f8, readdata = xxxxxxxx
ALUA = 7f801be0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1783 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006f8, readdata = xxxxxxxx
ALUA = 7f801be0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1784 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe006f8, readdata = xxxxxxxx
ALUA = 7f801be4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006f9, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1784 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006f9, readdata = xxxxxxxx
ALUA = 7f801be4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1785 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801be8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006fa, readdata = xxxxxxxx
ALUA = 7f801be8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1785 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006fa, readdata = xxxxxxxx
ALUA = 7f801be8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1786 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe006fa, readdata = xxxxxxxx
ALUA = 7f801bec, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006fb, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1786 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006fb, readdata = xxxxxxxx
ALUA = 7f801bec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1787 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801bf0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006fc, readdata = xxxxxxxx
ALUA = 7f801bf0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1787 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006fc, readdata = xxxxxxxx
ALUA = 7f801bf0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1788 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe006fc, readdata = xxxxxxxx
ALUA = 7f801bf4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006fd, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1788 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006fd, readdata = xxxxxxxx
ALUA = 7f801bf4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1789 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801bf8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006fe, readdata = xxxxxxxx
ALUA = 7f801bf8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1789 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006fe, readdata = xxxxxxxx
ALUA = 7f801bf8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1790 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe006fe, readdata = xxxxxxxx
ALUA = 7f801bfc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe006ff, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1790 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe006ff, readdata = xxxxxxxx
ALUA = 7f801bfc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1791 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801c00, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00700, readdata = xxxxxxxx
ALUA = 7f801c00, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1791 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00700, readdata = xxxxxxxx
ALUA = 7f801c00, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1792 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00700, readdata = xxxxxxxx
ALUA = 7f801c04, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00701, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1792 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00701, readdata = xxxxxxxx
ALUA = 7f801c04, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1793 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801c08, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00702, readdata = xxxxxxxx
ALUA = 7f801c08, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1793 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00702, readdata = xxxxxxxx
ALUA = 7f801c08, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1794 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00702, readdata = xxxxxxxx
ALUA = 7f801c0c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00703, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1794 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00703, readdata = xxxxxxxx
ALUA = 7f801c0c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1795 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801c10, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00704, readdata = xxxxxxxx
ALUA = 7f801c10, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1795 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00704, readdata = xxxxxxxx
ALUA = 7f801c10, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1796 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00704, readdata = xxxxxxxx
ALUA = 7f801c14, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00705, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1796 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00705, readdata = xxxxxxxx
ALUA = 7f801c14, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1797 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801c18, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00706, readdata = xxxxxxxx
ALUA = 7f801c18, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1797 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00706, readdata = xxxxxxxx
ALUA = 7f801c18, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1798 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00706, readdata = xxxxxxxx
ALUA = 7f801c1c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00707, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1798 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00707, readdata = xxxxxxxx
ALUA = 7f801c1c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1799 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801c20, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00708, readdata = xxxxxxxx
ALUA = 7f801c20, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1799 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00708, readdata = xxxxxxxx
ALUA = 7f801c20, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1800 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00708, readdata = xxxxxxxx
ALUA = 7f801c24, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00709, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1800 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00709, readdata = xxxxxxxx
ALUA = 7f801c24, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1801 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801c28, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0070a, readdata = xxxxxxxx
ALUA = 7f801c28, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1801 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0070a, readdata = xxxxxxxx
ALUA = 7f801c28, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1802 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0070a, readdata = xxxxxxxx
ALUA = 7f801c2c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0070b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1802 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0070b, readdata = xxxxxxxx
ALUA = 7f801c2c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1803 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801c30, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0070c, readdata = xxxxxxxx
ALUA = 7f801c30, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1803 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0070c, readdata = xxxxxxxx
ALUA = 7f801c30, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1804 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0070c, readdata = xxxxxxxx
ALUA = 7f801c34, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0070d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1804 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0070d, readdata = xxxxxxxx
ALUA = 7f801c34, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1805 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801c38, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0070e, readdata = xxxxxxxx
ALUA = 7f801c38, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1805 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0070e, readdata = xxxxxxxx
ALUA = 7f801c38, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1806 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0070e, readdata = xxxxxxxx
ALUA = 7f801c3c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0070f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1806 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0070f, readdata = xxxxxxxx
ALUA = 7f801c3c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1807 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801c40, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00710, readdata = xxxxxxxx
ALUA = 7f801c40, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1807 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00710, readdata = xxxxxxxx
ALUA = 7f801c40, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1808 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00710, readdata = xxxxxxxx
ALUA = 7f801c44, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00711, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1808 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00711, readdata = xxxxxxxx
ALUA = 7f801c44, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1809 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801c48, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00712, readdata = xxxxxxxx
ALUA = 7f801c48, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1809 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00712, readdata = xxxxxxxx
ALUA = 7f801c48, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1810 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00712, readdata = xxxxxxxx
ALUA = 7f801c4c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00713, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1810 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00713, readdata = xxxxxxxx
ALUA = 7f801c4c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1811 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801c50, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00714, readdata = xxxxxxxx
ALUA = 7f801c50, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1811 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00714, readdata = xxxxxxxx
ALUA = 7f801c50, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1812 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00714, readdata = xxxxxxxx
ALUA = 7f801c54, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00715, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1812 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00715, readdata = xxxxxxxx
ALUA = 7f801c54, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1813 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801c58, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00716, readdata = xxxxxxxx
ALUA = 7f801c58, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1813 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00716, readdata = xxxxxxxx
ALUA = 7f801c58, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1814 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00716, readdata = xxxxxxxx
ALUA = 7f801c5c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00717, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1814 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00717, readdata = xxxxxxxx
ALUA = 7f801c5c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1815 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801c60, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00718, readdata = xxxxxxxx
ALUA = 7f801c60, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1815 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00718, readdata = xxxxxxxx
ALUA = 7f801c60, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1816 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00718, readdata = xxxxxxxx
ALUA = 7f801c64, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00719, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1816 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00719, readdata = xxxxxxxx
ALUA = 7f801c64, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1817 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801c68, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0071a, readdata = xxxxxxxx
ALUA = 7f801c68, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1817 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0071a, readdata = xxxxxxxx
ALUA = 7f801c68, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1818 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0071a, readdata = xxxxxxxx
ALUA = 7f801c6c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0071b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1818 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0071b, readdata = xxxxxxxx
ALUA = 7f801c6c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1819 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801c70, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0071c, readdata = xxxxxxxx
ALUA = 7f801c70, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1819 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0071c, readdata = xxxxxxxx
ALUA = 7f801c70, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1820 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0071c, readdata = xxxxxxxx
ALUA = 7f801c74, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0071d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1820 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0071d, readdata = xxxxxxxx
ALUA = 7f801c74, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1821 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801c78, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0071e, readdata = xxxxxxxx
ALUA = 7f801c78, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1821 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0071e, readdata = xxxxxxxx
ALUA = 7f801c78, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1822 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0071e, readdata = xxxxxxxx
ALUA = 7f801c7c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0071f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1822 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0071f, readdata = xxxxxxxx
ALUA = 7f801c7c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1823 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801c80, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00720, readdata = xxxxxxxx
ALUA = 7f801c80, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1823 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00720, readdata = xxxxxxxx
ALUA = 7f801c80, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1824 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00720, readdata = xxxxxxxx
ALUA = 7f801c84, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00721, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1824 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00721, readdata = xxxxxxxx
ALUA = 7f801c84, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1825 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801c88, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00722, readdata = xxxxxxxx
ALUA = 7f801c88, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1825 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00722, readdata = xxxxxxxx
ALUA = 7f801c88, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1826 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00722, readdata = xxxxxxxx
ALUA = 7f801c8c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00723, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1826 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00723, readdata = xxxxxxxx
ALUA = 7f801c8c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1827 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801c90, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00724, readdata = xxxxxxxx
ALUA = 7f801c90, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1827 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00724, readdata = xxxxxxxx
ALUA = 7f801c90, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1828 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00724, readdata = xxxxxxxx
ALUA = 7f801c94, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00725, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1828 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00725, readdata = xxxxxxxx
ALUA = 7f801c94, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1829 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801c98, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00726, readdata = xxxxxxxx
ALUA = 7f801c98, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1829 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00726, readdata = xxxxxxxx
ALUA = 7f801c98, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1830 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00726, readdata = xxxxxxxx
ALUA = 7f801c9c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00727, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1830 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00727, readdata = xxxxxxxx
ALUA = 7f801c9c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1831 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801ca0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00728, readdata = xxxxxxxx
ALUA = 7f801ca0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1831 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00728, readdata = xxxxxxxx
ALUA = 7f801ca0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1832 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00728, readdata = xxxxxxxx
ALUA = 7f801ca4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00729, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1832 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00729, readdata = xxxxxxxx
ALUA = 7f801ca4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1833 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801ca8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0072a, readdata = xxxxxxxx
ALUA = 7f801ca8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1833 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0072a, readdata = xxxxxxxx
ALUA = 7f801ca8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1834 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0072a, readdata = xxxxxxxx
ALUA = 7f801cac, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0072b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1834 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0072b, readdata = xxxxxxxx
ALUA = 7f801cac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1835 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801cb0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0072c, readdata = xxxxxxxx
ALUA = 7f801cb0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1835 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0072c, readdata = xxxxxxxx
ALUA = 7f801cb0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1836 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0072c, readdata = xxxxxxxx
ALUA = 7f801cb4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0072d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1836 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0072d, readdata = xxxxxxxx
ALUA = 7f801cb4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1837 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801cb8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0072e, readdata = xxxxxxxx
ALUA = 7f801cb8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1837 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0072e, readdata = xxxxxxxx
ALUA = 7f801cb8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1838 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0072e, readdata = xxxxxxxx
ALUA = 7f801cbc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0072f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1838 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0072f, readdata = xxxxxxxx
ALUA = 7f801cbc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1839 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801cc0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00730, readdata = xxxxxxxx
ALUA = 7f801cc0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1839 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00730, readdata = xxxxxxxx
ALUA = 7f801cc0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1840 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00730, readdata = xxxxxxxx
ALUA = 7f801cc4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00731, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1840 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00731, readdata = xxxxxxxx
ALUA = 7f801cc4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1841 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801cc8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00732, readdata = xxxxxxxx
ALUA = 7f801cc8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1841 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00732, readdata = xxxxxxxx
ALUA = 7f801cc8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1842 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00732, readdata = xxxxxxxx
ALUA = 7f801ccc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00733, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1842 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00733, readdata = xxxxxxxx
ALUA = 7f801ccc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1843 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801cd0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00734, readdata = xxxxxxxx
ALUA = 7f801cd0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1843 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00734, readdata = xxxxxxxx
ALUA = 7f801cd0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1844 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00734, readdata = xxxxxxxx
ALUA = 7f801cd4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00735, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1844 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00735, readdata = xxxxxxxx
ALUA = 7f801cd4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1845 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801cd8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00736, readdata = xxxxxxxx
ALUA = 7f801cd8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1845 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00736, readdata = xxxxxxxx
ALUA = 7f801cd8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1846 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00736, readdata = xxxxxxxx
ALUA = 7f801cdc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00737, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1846 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00737, readdata = xxxxxxxx
ALUA = 7f801cdc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1847 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801ce0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00738, readdata = xxxxxxxx
ALUA = 7f801ce0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1847 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00738, readdata = xxxxxxxx
ALUA = 7f801ce0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1848 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00738, readdata = xxxxxxxx
ALUA = 7f801ce4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00739, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1848 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00739, readdata = xxxxxxxx
ALUA = 7f801ce4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1849 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801ce8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0073a, readdata = xxxxxxxx
ALUA = 7f801ce8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1849 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0073a, readdata = xxxxxxxx
ALUA = 7f801ce8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1850 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0073a, readdata = xxxxxxxx
ALUA = 7f801cec, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0073b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1850 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0073b, readdata = xxxxxxxx
ALUA = 7f801cec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1851 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801cf0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0073c, readdata = xxxxxxxx
ALUA = 7f801cf0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1851 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0073c, readdata = xxxxxxxx
ALUA = 7f801cf0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1852 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0073c, readdata = xxxxxxxx
ALUA = 7f801cf4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0073d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1852 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0073d, readdata = xxxxxxxx
ALUA = 7f801cf4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1853 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801cf8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0073e, readdata = xxxxxxxx
ALUA = 7f801cf8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1853 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0073e, readdata = xxxxxxxx
ALUA = 7f801cf8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1854 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0073e, readdata = xxxxxxxx
ALUA = 7f801cfc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0073f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1854 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0073f, readdata = xxxxxxxx
ALUA = 7f801cfc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1855 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801d00, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00740, readdata = xxxxxxxx
ALUA = 7f801d00, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1855 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00740, readdata = xxxxxxxx
ALUA = 7f801d00, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1856 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00740, readdata = xxxxxxxx
ALUA = 7f801d04, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00741, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1856 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00741, readdata = xxxxxxxx
ALUA = 7f801d04, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1857 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801d08, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00742, readdata = xxxxxxxx
ALUA = 7f801d08, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1857 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00742, readdata = xxxxxxxx
ALUA = 7f801d08, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1858 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00742, readdata = xxxxxxxx
ALUA = 7f801d0c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00743, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1858 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00743, readdata = xxxxxxxx
ALUA = 7f801d0c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1859 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801d10, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00744, readdata = xxxxxxxx
ALUA = 7f801d10, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1859 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00744, readdata = xxxxxxxx
ALUA = 7f801d10, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1860 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00744, readdata = xxxxxxxx
ALUA = 7f801d14, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00745, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1860 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00745, readdata = xxxxxxxx
ALUA = 7f801d14, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1861 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801d18, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00746, readdata = xxxxxxxx
ALUA = 7f801d18, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1861 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00746, readdata = xxxxxxxx
ALUA = 7f801d18, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1862 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00746, readdata = xxxxxxxx
ALUA = 7f801d1c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00747, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1862 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00747, readdata = xxxxxxxx
ALUA = 7f801d1c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1863 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801d20, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00748, readdata = xxxxxxxx
ALUA = 7f801d20, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1863 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00748, readdata = xxxxxxxx
ALUA = 7f801d20, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1864 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00748, readdata = xxxxxxxx
ALUA = 7f801d24, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00749, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1864 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00749, readdata = xxxxxxxx
ALUA = 7f801d24, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1865 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801d28, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0074a, readdata = xxxxxxxx
ALUA = 7f801d28, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1865 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0074a, readdata = xxxxxxxx
ALUA = 7f801d28, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1866 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0074a, readdata = xxxxxxxx
ALUA = 7f801d2c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0074b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1866 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0074b, readdata = xxxxxxxx
ALUA = 7f801d2c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1867 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801d30, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0074c, readdata = xxxxxxxx
ALUA = 7f801d30, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1867 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0074c, readdata = xxxxxxxx
ALUA = 7f801d30, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1868 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0074c, readdata = xxxxxxxx
ALUA = 7f801d34, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0074d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1868 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0074d, readdata = xxxxxxxx
ALUA = 7f801d34, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1869 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801d38, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0074e, readdata = xxxxxxxx
ALUA = 7f801d38, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1869 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0074e, readdata = xxxxxxxx
ALUA = 7f801d38, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1870 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0074e, readdata = xxxxxxxx
ALUA = 7f801d3c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0074f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1870 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0074f, readdata = xxxxxxxx
ALUA = 7f801d3c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1871 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801d40, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00750, readdata = xxxxxxxx
ALUA = 7f801d40, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1871 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00750, readdata = xxxxxxxx
ALUA = 7f801d40, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1872 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00750, readdata = xxxxxxxx
ALUA = 7f801d44, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00751, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1872 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00751, readdata = xxxxxxxx
ALUA = 7f801d44, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1873 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801d48, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00752, readdata = xxxxxxxx
ALUA = 7f801d48, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1873 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00752, readdata = xxxxxxxx
ALUA = 7f801d48, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1874 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00752, readdata = xxxxxxxx
ALUA = 7f801d4c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00753, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1874 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00753, readdata = xxxxxxxx
ALUA = 7f801d4c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1875 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801d50, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00754, readdata = xxxxxxxx
ALUA = 7f801d50, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1875 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00754, readdata = xxxxxxxx
ALUA = 7f801d50, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1876 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00754, readdata = xxxxxxxx
ALUA = 7f801d54, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00755, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1876 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00755, readdata = xxxxxxxx
ALUA = 7f801d54, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1877 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801d58, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00756, readdata = xxxxxxxx
ALUA = 7f801d58, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1877 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00756, readdata = xxxxxxxx
ALUA = 7f801d58, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1878 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00756, readdata = xxxxxxxx
ALUA = 7f801d5c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00757, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1878 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00757, readdata = xxxxxxxx
ALUA = 7f801d5c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1879 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801d60, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00758, readdata = xxxxxxxx
ALUA = 7f801d60, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1879 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00758, readdata = xxxxxxxx
ALUA = 7f801d60, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1880 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00758, readdata = xxxxxxxx
ALUA = 7f801d64, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00759, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1880 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00759, readdata = xxxxxxxx
ALUA = 7f801d64, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1881 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801d68, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0075a, readdata = xxxxxxxx
ALUA = 7f801d68, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1881 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0075a, readdata = xxxxxxxx
ALUA = 7f801d68, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1882 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0075a, readdata = xxxxxxxx
ALUA = 7f801d6c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0075b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1882 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0075b, readdata = xxxxxxxx
ALUA = 7f801d6c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1883 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801d70, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0075c, readdata = xxxxxxxx
ALUA = 7f801d70, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1883 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0075c, readdata = xxxxxxxx
ALUA = 7f801d70, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1884 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0075c, readdata = xxxxxxxx
ALUA = 7f801d74, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0075d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1884 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0075d, readdata = xxxxxxxx
ALUA = 7f801d74, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1885 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801d78, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0075e, readdata = xxxxxxxx
ALUA = 7f801d78, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1885 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0075e, readdata = xxxxxxxx
ALUA = 7f801d78, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1886 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0075e, readdata = xxxxxxxx
ALUA = 7f801d7c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0075f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1886 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0075f, readdata = xxxxxxxx
ALUA = 7f801d7c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1887 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801d80, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00760, readdata = xxxxxxxx
ALUA = 7f801d80, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1887 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00760, readdata = xxxxxxxx
ALUA = 7f801d80, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1888 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00760, readdata = xxxxxxxx
ALUA = 7f801d84, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00761, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1888 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00761, readdata = xxxxxxxx
ALUA = 7f801d84, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1889 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801d88, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00762, readdata = xxxxxxxx
ALUA = 7f801d88, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1889 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00762, readdata = xxxxxxxx
ALUA = 7f801d88, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1890 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00762, readdata = xxxxxxxx
ALUA = 7f801d8c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00763, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1890 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00763, readdata = xxxxxxxx
ALUA = 7f801d8c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1891 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801d90, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00764, readdata = xxxxxxxx
ALUA = 7f801d90, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1891 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00764, readdata = xxxxxxxx
ALUA = 7f801d90, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1892 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00764, readdata = xxxxxxxx
ALUA = 7f801d94, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00765, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1892 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00765, readdata = xxxxxxxx
ALUA = 7f801d94, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1893 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801d98, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00766, readdata = xxxxxxxx
ALUA = 7f801d98, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1893 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00766, readdata = xxxxxxxx
ALUA = 7f801d98, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1894 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00766, readdata = xxxxxxxx
ALUA = 7f801d9c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00767, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1894 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00767, readdata = xxxxxxxx
ALUA = 7f801d9c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1895 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801da0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00768, readdata = xxxxxxxx
ALUA = 7f801da0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1895 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00768, readdata = xxxxxxxx
ALUA = 7f801da0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1896 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00768, readdata = xxxxxxxx
ALUA = 7f801da4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00769, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1896 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00769, readdata = xxxxxxxx
ALUA = 7f801da4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1897 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801da8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0076a, readdata = xxxxxxxx
ALUA = 7f801da8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1897 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0076a, readdata = xxxxxxxx
ALUA = 7f801da8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1898 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0076a, readdata = xxxxxxxx
ALUA = 7f801dac, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0076b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1898 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0076b, readdata = xxxxxxxx
ALUA = 7f801dac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1899 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801db0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0076c, readdata = xxxxxxxx
ALUA = 7f801db0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1899 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0076c, readdata = xxxxxxxx
ALUA = 7f801db0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1900 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0076c, readdata = xxxxxxxx
ALUA = 7f801db4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0076d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1900 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0076d, readdata = xxxxxxxx
ALUA = 7f801db4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1901 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801db8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0076e, readdata = xxxxxxxx
ALUA = 7f801db8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1901 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0076e, readdata = xxxxxxxx
ALUA = 7f801db8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1902 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0076e, readdata = xxxxxxxx
ALUA = 7f801dbc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0076f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1902 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0076f, readdata = xxxxxxxx
ALUA = 7f801dbc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1903 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801dc0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00770, readdata = xxxxxxxx
ALUA = 7f801dc0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1903 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00770, readdata = xxxxxxxx
ALUA = 7f801dc0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1904 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00770, readdata = xxxxxxxx
ALUA = 7f801dc4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00771, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1904 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00771, readdata = xxxxxxxx
ALUA = 7f801dc4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1905 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801dc8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00772, readdata = xxxxxxxx
ALUA = 7f801dc8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1905 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00772, readdata = xxxxxxxx
ALUA = 7f801dc8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1906 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00772, readdata = xxxxxxxx
ALUA = 7f801dcc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00773, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1906 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00773, readdata = xxxxxxxx
ALUA = 7f801dcc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1907 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801dd0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00774, readdata = xxxxxxxx
ALUA = 7f801dd0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1907 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00774, readdata = xxxxxxxx
ALUA = 7f801dd0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1908 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00774, readdata = xxxxxxxx
ALUA = 7f801dd4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00775, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1908 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00775, readdata = xxxxxxxx
ALUA = 7f801dd4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1909 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801dd8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00776, readdata = xxxxxxxx
ALUA = 7f801dd8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1909 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00776, readdata = xxxxxxxx
ALUA = 7f801dd8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1910 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00776, readdata = xxxxxxxx
ALUA = 7f801ddc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00777, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1910 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00777, readdata = xxxxxxxx
ALUA = 7f801ddc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1911 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801de0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00778, readdata = xxxxxxxx
ALUA = 7f801de0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1911 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00778, readdata = xxxxxxxx
ALUA = 7f801de0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1912 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00778, readdata = xxxxxxxx
ALUA = 7f801de4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00779, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1912 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00779, readdata = xxxxxxxx
ALUA = 7f801de4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1913 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801de8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0077a, readdata = xxxxxxxx
ALUA = 7f801de8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1913 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0077a, readdata = xxxxxxxx
ALUA = 7f801de8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1914 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0077a, readdata = xxxxxxxx
ALUA = 7f801dec, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0077b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1914 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0077b, readdata = xxxxxxxx
ALUA = 7f801dec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1915 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801df0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0077c, readdata = xxxxxxxx
ALUA = 7f801df0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1915 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0077c, readdata = xxxxxxxx
ALUA = 7f801df0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1916 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0077c, readdata = xxxxxxxx
ALUA = 7f801df4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0077d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1916 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0077d, readdata = xxxxxxxx
ALUA = 7f801df4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1917 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801df8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0077e, readdata = xxxxxxxx
ALUA = 7f801df8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1917 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0077e, readdata = xxxxxxxx
ALUA = 7f801df8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1918 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0077e, readdata = xxxxxxxx
ALUA = 7f801dfc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0077f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1918 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0077f, readdata = xxxxxxxx
ALUA = 7f801dfc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1919 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801e00, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00780, readdata = xxxxxxxx
ALUA = 7f801e00, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1919 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00780, readdata = xxxxxxxx
ALUA = 7f801e00, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1920 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00780, readdata = xxxxxxxx
ALUA = 7f801e04, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00781, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1920 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00781, readdata = xxxxxxxx
ALUA = 7f801e04, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1921 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801e08, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00782, readdata = xxxxxxxx
ALUA = 7f801e08, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1921 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00782, readdata = xxxxxxxx
ALUA = 7f801e08, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1922 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00782, readdata = xxxxxxxx
ALUA = 7f801e0c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00783, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1922 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00783, readdata = xxxxxxxx
ALUA = 7f801e0c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1923 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801e10, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00784, readdata = xxxxxxxx
ALUA = 7f801e10, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1923 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00784, readdata = xxxxxxxx
ALUA = 7f801e10, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1924 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00784, readdata = xxxxxxxx
ALUA = 7f801e14, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00785, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1924 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00785, readdata = xxxxxxxx
ALUA = 7f801e14, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1925 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801e18, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00786, readdata = xxxxxxxx
ALUA = 7f801e18, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1925 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00786, readdata = xxxxxxxx
ALUA = 7f801e18, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1926 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00786, readdata = xxxxxxxx
ALUA = 7f801e1c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00787, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1926 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00787, readdata = xxxxxxxx
ALUA = 7f801e1c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1927 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801e20, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00788, readdata = xxxxxxxx
ALUA = 7f801e20, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1927 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00788, readdata = xxxxxxxx
ALUA = 7f801e20, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1928 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00788, readdata = xxxxxxxx
ALUA = 7f801e24, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00789, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1928 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00789, readdata = xxxxxxxx
ALUA = 7f801e24, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1929 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801e28, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0078a, readdata = xxxxxxxx
ALUA = 7f801e28, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1929 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0078a, readdata = xxxxxxxx
ALUA = 7f801e28, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1930 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0078a, readdata = xxxxxxxx
ALUA = 7f801e2c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0078b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1930 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0078b, readdata = xxxxxxxx
ALUA = 7f801e2c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1931 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801e30, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0078c, readdata = xxxxxxxx
ALUA = 7f801e30, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1931 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0078c, readdata = xxxxxxxx
ALUA = 7f801e30, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1932 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0078c, readdata = xxxxxxxx
ALUA = 7f801e34, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0078d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1932 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0078d, readdata = xxxxxxxx
ALUA = 7f801e34, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1933 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801e38, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0078e, readdata = xxxxxxxx
ALUA = 7f801e38, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1933 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0078e, readdata = xxxxxxxx
ALUA = 7f801e38, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1934 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0078e, readdata = xxxxxxxx
ALUA = 7f801e3c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0078f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1934 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0078f, readdata = xxxxxxxx
ALUA = 7f801e3c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1935 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801e40, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00790, readdata = xxxxxxxx
ALUA = 7f801e40, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1935 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00790, readdata = xxxxxxxx
ALUA = 7f801e40, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1936 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00790, readdata = xxxxxxxx
ALUA = 7f801e44, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00791, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1936 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00791, readdata = xxxxxxxx
ALUA = 7f801e44, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1937 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801e48, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00792, readdata = xxxxxxxx
ALUA = 7f801e48, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1937 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00792, readdata = xxxxxxxx
ALUA = 7f801e48, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1938 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00792, readdata = xxxxxxxx
ALUA = 7f801e4c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00793, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1938 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00793, readdata = xxxxxxxx
ALUA = 7f801e4c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1939 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801e50, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00794, readdata = xxxxxxxx
ALUA = 7f801e50, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1939 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00794, readdata = xxxxxxxx
ALUA = 7f801e50, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1940 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00794, readdata = xxxxxxxx
ALUA = 7f801e54, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00795, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1940 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00795, readdata = xxxxxxxx
ALUA = 7f801e54, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1941 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801e58, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00796, readdata = xxxxxxxx
ALUA = 7f801e58, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1941 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00796, readdata = xxxxxxxx
ALUA = 7f801e58, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1942 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00796, readdata = xxxxxxxx
ALUA = 7f801e5c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00797, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1942 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00797, readdata = xxxxxxxx
ALUA = 7f801e5c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1943 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801e60, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00798, readdata = xxxxxxxx
ALUA = 7f801e60, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1943 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00798, readdata = xxxxxxxx
ALUA = 7f801e60, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1944 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe00798, readdata = xxxxxxxx
ALUA = 7f801e64, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe00799, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1944 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe00799, readdata = xxxxxxxx
ALUA = 7f801e64, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1945 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801e68, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0079a, readdata = xxxxxxxx
ALUA = 7f801e68, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1945 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0079a, readdata = xxxxxxxx
ALUA = 7f801e68, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1946 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0079a, readdata = xxxxxxxx
ALUA = 7f801e6c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0079b, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1946 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0079b, readdata = xxxxxxxx
ALUA = 7f801e6c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1947 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801e70, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0079c, readdata = xxxxxxxx
ALUA = 7f801e70, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1947 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0079c, readdata = xxxxxxxx
ALUA = 7f801e70, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1948 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0079c, readdata = xxxxxxxx
ALUA = 7f801e74, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0079d, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1948 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0079d, readdata = xxxxxxxx
ALUA = 7f801e74, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1949 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801e78, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0079e, readdata = xxxxxxxx
ALUA = 7f801e78, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1949 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0079e, readdata = xxxxxxxx
ALUA = 7f801e78, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1950 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe0079e, readdata = xxxxxxxx
ALUA = 7f801e7c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe0079f, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1950 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe0079f, readdata = xxxxxxxx
ALUA = 7f801e7c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1951 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801e80, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe007a0, readdata = xxxxxxxx
ALUA = 7f801e80, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1951 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe007a0, readdata = xxxxxxxx
ALUA = 7f801e80, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1952 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe007a0, readdata = xxxxxxxx
ALUA = 7f801e84, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe007a1, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1952 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe007a1, readdata = xxxxxxxx
ALUA = 7f801e84, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1953 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801e88, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe007a2, readdata = xxxxxxxx
ALUA = 7f801e88, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1953 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe007a2, readdata = xxxxxxxx
ALUA = 7f801e88, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1954 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe007a2, readdata = xxxxxxxx
ALUA = 7f801e8c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe007a3, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1954 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe007a3, readdata = xxxxxxxx
ALUA = 7f801e8c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1955 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801e90, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe007a4, readdata = xxxxxxxx
ALUA = 7f801e90, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1955 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe007a4, readdata = xxxxxxxx
ALUA = 7f801e90, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1956 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe007a4, readdata = xxxxxxxx
ALUA = 7f801e94, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe007a5, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1956 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe007a5, readdata = xxxxxxxx
ALUA = 7f801e94, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1957 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801e98, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe007a6, readdata = xxxxxxxx
ALUA = 7f801e98, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1957 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe007a6, readdata = xxxxxxxx
ALUA = 7f801e98, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1958 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe007a6, readdata = xxxxxxxx
ALUA = 7f801e9c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe007a7, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1958 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe007a7, readdata = xxxxxxxx
ALUA = 7f801e9c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1959 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801ea0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe007a8, readdata = xxxxxxxx
ALUA = 7f801ea0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1959 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe007a8, readdata = xxxxxxxx
ALUA = 7f801ea0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1960 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe007a8, readdata = xxxxxxxx
ALUA = 7f801ea4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe007a9, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1960 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe007a9, readdata = xxxxxxxx
ALUA = 7f801ea4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1961 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801ea8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe007aa, readdata = xxxxxxxx
ALUA = 7f801ea8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1961 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe007aa, readdata = xxxxxxxx
ALUA = 7f801ea8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1962 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe007aa, readdata = xxxxxxxx
ALUA = 7f801eac, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe007ab, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1962 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe007ab, readdata = xxxxxxxx
ALUA = 7f801eac, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1963 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801eb0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe007ac, readdata = xxxxxxxx
ALUA = 7f801eb0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1963 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe007ac, readdata = xxxxxxxx
ALUA = 7f801eb0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1964 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe007ac, readdata = xxxxxxxx
ALUA = 7f801eb4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe007ad, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1964 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe007ad, readdata = xxxxxxxx
ALUA = 7f801eb4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1965 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801eb8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe007ae, readdata = xxxxxxxx
ALUA = 7f801eb8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1965 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe007ae, readdata = xxxxxxxx
ALUA = 7f801eb8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1966 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe007ae, readdata = xxxxxxxx
ALUA = 7f801ebc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe007af, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1966 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe007af, readdata = xxxxxxxx
ALUA = 7f801ebc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1967 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801ec0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe007b0, readdata = xxxxxxxx
ALUA = 7f801ec0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1967 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe007b0, readdata = xxxxxxxx
ALUA = 7f801ec0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1968 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe007b0, readdata = xxxxxxxx
ALUA = 7f801ec4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe007b1, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1968 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe007b1, readdata = xxxxxxxx
ALUA = 7f801ec4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1969 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801ec8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe007b2, readdata = xxxxxxxx
ALUA = 7f801ec8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1969 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe007b2, readdata = xxxxxxxx
ALUA = 7f801ec8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1970 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe007b2, readdata = xxxxxxxx
ALUA = 7f801ecc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe007b3, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1970 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe007b3, readdata = xxxxxxxx
ALUA = 7f801ecc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1971 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801ed0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe007b4, readdata = xxxxxxxx
ALUA = 7f801ed0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1971 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe007b4, readdata = xxxxxxxx
ALUA = 7f801ed0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1972 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe007b4, readdata = xxxxxxxx
ALUA = 7f801ed4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe007b5, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1972 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe007b5, readdata = xxxxxxxx
ALUA = 7f801ed4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1973 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801ed8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe007b6, readdata = xxxxxxxx
ALUA = 7f801ed8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1973 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe007b6, readdata = xxxxxxxx
ALUA = 7f801ed8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1974 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe007b6, readdata = xxxxxxxx
ALUA = 7f801edc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe007b7, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1974 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe007b7, readdata = xxxxxxxx
ALUA = 7f801edc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1975 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801ee0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe007b8, readdata = xxxxxxxx
ALUA = 7f801ee0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1975 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe007b8, readdata = xxxxxxxx
ALUA = 7f801ee0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1976 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe007b8, readdata = xxxxxxxx
ALUA = 7f801ee4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe007b9, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1976 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe007b9, readdata = xxxxxxxx
ALUA = 7f801ee4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1977 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801ee8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe007ba, readdata = xxxxxxxx
ALUA = 7f801ee8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1977 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe007ba, readdata = xxxxxxxx
ALUA = 7f801ee8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1978 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe007ba, readdata = xxxxxxxx
ALUA = 7f801eec, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe007bb, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1978 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe007bb, readdata = xxxxxxxx
ALUA = 7f801eec, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1979 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801ef0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe007bc, readdata = xxxxxxxx
ALUA = 7f801ef0, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1979 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe007bc, readdata = xxxxxxxx
ALUA = 7f801ef0, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1980 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe007bc, readdata = xxxxxxxx
ALUA = 7f801ef4, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe007bd, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1980 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe007bd, readdata = xxxxxxxx
ALUA = 7f801ef4, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1981 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801ef8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe007be, readdata = xxxxxxxx
ALUA = 7f801ef8, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1981 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe007be, readdata = xxxxxxxx
ALUA = 7f801ef8, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1982 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe007be, readdata = xxxxxxxx
ALUA = 7f801efc, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe007bf, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1982 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe007bf, readdata = xxxxxxxx
ALUA = 7f801efc, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1983 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801f00, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe007c0, readdata = xxxxxxxx
ALUA = 7f801f00, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1983 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe007c0, readdata = xxxxxxxx
ALUA = 7f801f00, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1984 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe007c0, readdata = xxxxxxxx
ALUA = 7f801f04, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe007c1, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1984 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe007c1, readdata = xxxxxxxx
ALUA = 7f801f04, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1985 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801f08, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe007c2, readdata = xxxxxxxx
ALUA = 7f801f08, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1985 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe007c2, readdata = xxxxxxxx
ALUA = 7f801f08, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1986 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe007c2, readdata = xxxxxxxx
ALUA = 7f801f0c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe007c3, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1986 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe007c3, readdata = xxxxxxxx
ALUA = 7f801f0c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1987 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801f10, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe007c4, readdata = xxxxxxxx
ALUA = 7f801f10, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1987 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe007c4, readdata = xxxxxxxx
ALUA = 7f801f10, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1988 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe007c4, readdata = xxxxxxxx
ALUA = 7f801f14, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe007c5, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1988 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe007c5, readdata = xxxxxxxx
ALUA = 7f801f14, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1989 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801f18, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe007c6, readdata = xxxxxxxx
ALUA = 7f801f18, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1989 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe007c6, readdata = xxxxxxxx
ALUA = 7f801f18, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1990 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe007c6, readdata = xxxxxxxx
ALUA = 7f801f1c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe007c7, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1990 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe007c7, readdata = xxxxxxxx
ALUA = 7f801f1c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1991 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801f20, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe007c8, readdata = xxxxxxxx
ALUA = 7f801f20, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1991 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe007c8, readdata = xxxxxxxx
ALUA = 7f801f20, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1992 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe007c8, readdata = xxxxxxxx
ALUA = 7f801f24, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe007c9, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1992 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe007c9, readdata = xxxxxxxx
ALUA = 7f801f24, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1993 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801f28, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe007ca, readdata = xxxxxxxx
ALUA = 7f801f28, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1993 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe007ca, readdata = xxxxxxxx
ALUA = 7f801f28, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1994 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe007ca, readdata = xxxxxxxx
ALUA = 7f801f2c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe007cb, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1994 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe007cb, readdata = xxxxxxxx
ALUA = 7f801f2c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1995 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801f30, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe007cc, readdata = xxxxxxxx
ALUA = 7f801f30, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1995 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe007cc, readdata = xxxxxxxx
ALUA = 7f801f30, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1996 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe007cc, readdata = xxxxxxxx
ALUA = 7f801f34, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe007cd, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1996 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe007cd, readdata = xxxxxxxx
ALUA = 7f801f34, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1997 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801f38, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe007ce, readdata = xxxxxxxx
ALUA = 7f801f38, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1997 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe007ce, readdata = xxxxxxxx
ALUA = 7f801f38, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1998 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe007ce, readdata = xxxxxxxx
ALUA = 7f801f3c, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe007cf, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1998 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe007cf, readdata = xxxxxxxx
ALUA = 7f801f3c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        1999 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ALUA = 7f801f40, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe007d0, readdata = xxxxxxxx
ALUA = 7f801f40, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT:  WRITE_BACK    - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
 OUT: Instruction        1999 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 1fe007d0, readdata = xxxxxxxx
ALUA = 7f801f40, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  -------------------        2000 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001, opcode: xxxxxx
ram: read = 0, wordaddress = 1fe007d0, readdata = xxxxxxxx
ALUA = 7f801f44, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 0, wordaddress = 1fe007d1, readdata = xxxxxxxx
 OUT:  DECODE        - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
ERROR: ./CPU_testbench.v:45:           2did not finish within       10000 cycles
       Time: 100000  Scope: CPU_testbench
 OUT:  MEMORY_ACCESS - readdata_to_CPU: xxxxxxxx, ALUOut: 00000001 opcode: xxxxxx
