RAM : INIT : Loading RAM contents from ./INITIALISED_FILE.txt
RAM : DATA : Loading DATA contents from ./DATA_MEMORY_FILE.txt
WARNING: ./ram_tiny_CPU.v:34: $readmemh: The behaviour for reg[...] mem[N:0]; $readmemh("...", mem); changed in the 1364-2005 standard. To avoid ambiguity, use mem[0:N] or explicit range parameters $readmemh("...", mem, start, stop);. Defaulting to 1364-2005 behavior.
WARNING: ./ram_tiny_CPU.v:34: $readmemh(./DATA_MEMORY_FILE.txt): Not enough words in the file for the requested range [0:65535].
WARNING: ./ram_tiny_CPU.v:35: $readmemh: The behaviour for reg[...] mem[N:0]; $readmemh("...", mem); changed in the 1364-2005 standard. To avoid ambiguity, use mem[0:N] or explicit range parameters $readmemh("...", mem, start, stop);. Defaulting to 1364-2005 behavior.
WARNING: ./ram_tiny_CPU.v:35: $readmemh(./INITIALISED_FILE.txt): Not enough words in the file for the requested range [0:65535].
VCD info: dumpfile CPU_testbench.vcd opened for output.
ram: read = 0, wordaddress = xxxxxxxx, readdata = xxxxxxxx
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = z, RegWrite = 0
ALUA = xxxxxxxx, ALUB = xxxxxxxx ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = xxxxxxxx, LO = xxxxxxxx, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ALUA = xxxxxxxx, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 1, wordaddress = xxxxxxxx, readdata = xxxxxxxx
ALUA = bfc00000, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = xx, HI_LO_ALUOut = x, RegWrite = 0
ram: read = 1, wordaddress = 00000000, readdata = xxxxxxxx
ALUA = bfc00000, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = xxxxxxxx, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = bfc00000, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------           1 --------------------------
 OUT:  FETCH         - readdata_to_CPU: xxxxxxxx, ALUOut: 00000000, opcode: xxxxxx
ram: read = 1, wordaddress = 00000000, readdata = ddb20324
ALUA = bfc00004, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00004, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000001, readdata = ddb20324
ALUA = bfc00004, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00004, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = bfc00004, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00004, RegDst = 03, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 2403b2dd, ALUOut: 00000000, opcode: 001001
ALUA = 00000000, ALUB = ffffb2dd ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00004, RegDst = 03, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 2403b2dd, ALUOut: 00000000 opcode: 001001
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = ffffb2dd, RegDst = 03, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 2403b2dd, ALUOut: 00000000 opcode: 001001
ALUA = 00000000, ALUB = ffffb2dd ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = ffffb2dd, RegDst = 03, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = 00000000, ALUB = ffffb2dd ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 03, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 2403b2dd, ALUOut: 00000000 opcode: 001001
ram: read = 1, wordaddress = 00000001, readdata = ddb20324
ALUA = bfc00004, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = ffffb2dd, RegDst = 03, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------           2 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 2403b2dd, ALUOut: 00000000, opcode: 001001
ram: read = 0, wordaddress = 00000001, readdata = 08000000
ALUA = bfc00008, ALUB = ffffb2dd ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = ffffb2dd, RegDst = 03, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000002, readdata = 08000000
ALUA = bfc00008, ALUB = ffffb2dd ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00008, RegDst = 03, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = bfc00008, ALUB = ffffb2dd ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00008, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000008, ALUOut: 00000000 opcode: 000000
ALUA = bfc00008, ALUB = 00000008 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfbfb2e5, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfbfb2e5, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000008, ALUOut: 00000000 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000008, ALUOut: 00000000 opcode: 000000
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000008, ALUOut: 00000000 opcode: 000000
 OUT: Instruction           2 has result($v0) : 00000000, active = 1
ram: read = 1, wordaddress = 00000002, readdata = 08000000
ALUA = bfc00008, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------           3 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 00000008, ALUOut: 00000000, opcode: 000000
ram: read = 1, wordaddress = 00000002, readdata = ffff622c
ALUA = bfc0000c, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc0000c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000003, readdata = ffff622c
ALUA = bfc0000c, ALUB = 00000008 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc0000c, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = bfc0000c, ALUB = 00000008 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc0000c, RegDst = 02, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 2c62ffff, ALUOut: 00000000 opcode: 001011
ALUA = ffffb2dd, ALUB = ffffffff ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc0000c, RegDst = 02, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = ffffb2dd, ALUB = ffffffff ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = bfc00014, RegDst = 02, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 2c62ffff, ALUOut: 00000000 opcode: 001011
ALUA = ffffb2dd, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000001, RegDst = 02, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 2c62ffff, ALUOut: 00000000 opcode: 001011
ALUA = ffffb2dd, ALUB = 00000001 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000001, RegDst = 02, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000000, readdata = ffff622c
ALUA = ffffb2dd, ALUB = 00000001 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = ffffb2dd, RegDst = 02, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 2c62ffff, ALUOut: 00000001 opcode: 001011
 OUT: Instruction           3 has result($v0) : 00000001, active = 1
ram: read = 1, wordaddress = 00000000, readdata = ffff622c
ALUA = 00000000, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = ffffb2de, RegDst = 02, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  -------------------           4 --------------------------
 OUT:  FETCH         - readdata_to_CPU: 2c62ffff, ALUOut: 00000001, opcode: 001011
ram: read = 0, wordaddress = 00000000, readdata = 00000000
ALUA = 00000004, ALUB = ffffffff ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = ffffb2de, RegDst = 02, HI_LO_ALUOut = 0, RegWrite = 0
ram: read = 0, wordaddress = 00000001, readdata = 00000000
ALUA = 00000004, ALUB = ffffffff ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000004, RegDst = 02, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = 00000004, ALUB = ffffffff ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000004, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  DECODE        - readdata_to_CPU: 00000000, ALUOut: 00000001 opcode: 000000
ALUA = 00000004, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000003, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000003, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  EXECUTE       - readdata_to_CPU: 00000000, ALUOut: 00000001 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000003, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 1
 OUT:  MEMORY_ACCESS - readdata_to_CPU: 00000000, ALUOut: 00000001 opcode: 000000
ALUA = 00000000, ALUB = 00000000 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 OUT:  WRITE_BACK    - readdata_to_CPU: 00000000, ALUOut: 00000001 opcode: 000000
 OUT: Instruction           4 has result($v0) : 00000001, active = 0
ram: read = 1, wordaddress = 00000001, readdata = 00000000
ALUA = 00000004, ALUB = 00000004 ,ALU_MULTorDIV_result = xxxxxxxxxxxxxxxx
HI = 00000000, LO = 00000000, ALU_HI_LO_MUX =  32
DatatoReg = 00000000, RegDst = 00, HI_LO_ALUOut = 0, RegWrite = 0
 RESULT: 00000001
./CPU_testbench.v:104: $finish called at 220 (1s)
